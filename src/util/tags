!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
1.	docs/verification/mtp/nhtcp/index.html	/^<a name="1."><\/a>$/;"	a
1.	docs/verification/mtp/nhudp/index.html	/^<a name="1."><\/a>$/;"	a
1.1	docs/verification/mtp/nhtcp/index.html	/^<a name="1.1"><\/a>$/;"	a
1.1	docs/verification/mtp/nhudp/index.html	/^<a name="1.1"><\/a>$/;"	a
1.2	docs/verification/mtp/nhtcp/index.html	/^<a name="1.2"><\/a>$/;"	a
1.2	docs/verification/mtp/nhudp/index.html	/^<a name="1.2"><\/a>$/;"	a
1.3	docs/verification/mtp/nhtcp/index.html	/^<a name="1.3"><\/a>$/;"	a
1.3	docs/verification/mtp/nhudp/index.html	/^<a name="1.3"><\/a>$/;"	a
2.	docs/verification/mtp/nhtcp/index.html	/^<a name="2."><\/a>$/;"	a
2.	docs/verification/mtp/nhudp/index.html	/^<a name="2."><\/a>$/;"	a
3.	docs/verification/mtp/nhtcp/index.html	/^<a name="3."><\/a>$/;"	a
3.	docs/verification/mtp/nhudp/index.html	/^<a name="3."><\/a>$/;"	a
4.	docs/verification/mtp/nhtcp/index.html	/^<a name="4."><\/a>$/;"	a
4.	docs/verification/mtp/nhudp/index.html	/^<a name="4."><\/a>$/;"	a
5.	docs/verification/mtp/nhtcp/index.html	/^<a name="5."><\/a>$/;"	a
5.	docs/verification/mtp/nhudp/index.html	/^<a name="5."><\/a>$/;"	a
5.1	docs/verification/mtp/nhtcp/index.html	/^<a name="5.1"><\/a>$/;"	a
5.1	docs/verification/mtp/nhudp/index.html	/^<a name="5.1"><\/a>$/;"	a
5.2	docs/verification/mtp/nhtcp/index.html	/^<a name="5.2"><\/a>$/;"	a
5.2	docs/verification/mtp/nhudp/index.html	/^<a name="5.2"><\/a>$/;"	a
6.	docs/verification/mtp/nhtcp/index.html	/^<a name="6."><\/a>$/;"	a
6.	docs/verification/mtp/nhudp/index.html	/^<a name="6."><\/a>$/;"	a
6.1	docs/verification/mtp/nhtcp/index.html	/^<a name="6.1"><\/a>$/;"	a
6.1	docs/verification/mtp/nhudp/index.html	/^<a name="6.1"><\/a>$/;"	a
7.	docs/verification/mtp/nhtcp/index.html	/^<a name="7."><\/a>$/;"	a
7.	docs/verification/mtp/nhudp/index.html	/^<a name="7."><\/a>$/;"	a
8.	docs/verification/mtp/nhtcp/index.html	/^<a name="8."><\/a>$/;"	a
8.	docs/verification/mtp/nhudp/index.html	/^<a name="8."><\/a>$/;"	a
9	docs/design/mdd/nhtcp/index.html	/^<A NAME="9"><\/A>$/;"	a
9	docs/design/mdd/nhudp/index.html	/^<A NAME="9"><\/A>$/;"	a
9.	docs/verification/mtp/nhtcp/index.html	/^<a name="9."><\/a>$/;"	a
9.	docs/verification/mtp/nhudp/index.html	/^<a name="9."><\/a>$/;"	a
9.1	docs/design/mdd/nhtcp/index.html	/^<A NAME="9.1"><\/A>$/;"	a
9.2	docs/design/mdd/nhtcp/index.html	/^<A NAME="9.2"><\/A>$/;"	a
9.3	docs/design/mdd/nhtcp/index.html	/^<A NAME="9.3"><\/A>$/;"	a
ADD_FIRST_NODE	test/timer/timerListTest.cpp	/^	ADD_FIRST_NODE,$/;"	e	enum:CHOICE	file:
ADD_LAST_NODE	test/timer/timerListTest.cpp	/^	ADD_LAST_NODE,$/;"	e	enum:CHOICE	file:
ADD_MIDDLE_NODE	test/timer/timerListTest.cpp	/^	ADD_MIDDLE_NODE,$/;"	e	enum:CHOICE	file:
ADD_NO_NODE	test/timer/timerListTest.cpp	/^	ADD_NO_NODE = 1,$/;"	e	enum:CHOICE	file:
Acronyms	docs/design/mdd/timer/index.html	/^<h3><a name="Acronyms"><\/a>1.2 Acronyms,Abbreviations and Definitions<\/h3>$/;"	a
Approach	docs/verification/mtp/timer/index.html	/^<h2><a name="Approach"><\/a>5. Approach<\/h2>$/;"	a
Assumptions	docs/reqs/srs/timer/index.html	/^<h3> <a name="Assumptions"><\/a>2.5 Assumptions and Dependencies<\/h3>$/;"	a
BINARIES	test/Makefile	/^BINARIES = thread-test.out\\$/;"	m
CDSU_CHAR_HASH_H_	include/cdsucharhash.h	2;"	d
CDSU_ERROR	include/cdsuthread.h	/^		CDSU_ERROR = -1,$/;"	e	enum:CdSuThread::RetVal
CDSU_FREEMSGBUF	include/cdsumdapi.h	97;"	d
CDSU_GETMSGBUF	include/cdsumdapi.h	96;"	d
CDSU_INTHASH_H_	include/cdsuinthash.h	2;"	d
CDSU_IPCP_MECH_INTRA	include/cdsumdapi.h	/^	CDSU_IPCP_MECH_INTRA = 1,	\/\/ If for same card.$/;"	e	enum:CdSuMdIpcpMech
CDSU_IPCP_MECH_INVALID	include/cdsumdapi.h	/^	CDSU_IPCP_MECH_INVALID$/;"	e	enum:CdSuMdIpcpMech
CDSU_IPCP_MECH_PROP	include/cdsumdapi.h	/^	CDSU_IPCP_MECH_PROP,		\/\/ If to another card via Proprietary means.$/;"	e	enum:CdSuMdIpcpMech
CDSU_IPCP_MECH_TCP	include/cdsumdapi.h	/^	CDSU_IPCP_MECH_TCP,		\/\/ If to another card via TCP.$/;"	e	enum:CdSuMdIpcpMech
CDSU_IPCP_MECH_UDP	include/cdsumdapi.h	/^	CDSU_IPCP_MECH_UDP,		\/\/ If to another card via UDP.$/;"	e	enum:CdSuMdIpcpMech
CDSU_LIST_H_	include/cdsulist.h	2;"	d
CDSU_MBHASH_H_	include/cdsumbhash.h	2;"	d
CDSU_MDAPI_H	include/cdsumdapi.h	2;"	d
CDSU_MD_AP_RXD_BUF_MSG	src/msgdistr/cdsunhudpglobals.h	/^	CDSU_MD_AP_RXD_BUF_MSG,$/;"	e	enum:CdSuMdUdpNhOpcodes
CDSU_MD_DEL_UDPNH_MSG	src/msgdistr/cdsunhudpglobals.h	/^	CDSU_MD_DEL_UDPNH_MSG,$/;"	e	enum:CdSuMdUdpNhOpcodes
CDSU_MD_ET_INVALID	src/msgdistr/cdsunhudpglobals.h	/^	CDSU_MD_ET_INVALID$/;"	e	enum:CdSuMdUdpNhEntity
CDSU_MD_ET_NW_APPL	src/msgdistr/cdsunhudpglobals.h	/^	CDSU_MD_ET_NW_APPL = 1,$/;"	e	enum:CdSuMdUdpNhEntity
CDSU_MD_ET_UDP_NW_HLR	src/msgdistr/cdsunhudpglobals.h	/^	CDSU_MD_ET_UDP_NW_HLR,$/;"	e	enum:CdSuMdUdpNhEntity
CDSU_MD_MAX_NUM_MESSAGES	src/msgdistr/cdsumd.h	/^	CDSU_MD_MAX_NUM_MESSAGES = 1024,$/;"	e	enum:__anon4
CDSU_MD_NH_TX_BUF_MSG	src/msgdistr/cdsunhudpglobals.h	/^	CDSU_MD_NH_TX_BUF_MSG = 1,$/;"	e	enum:CdSuMdUdpNhOpcodes
CDSU_MD_OP_INVALID	src/msgdistr/cdsunhudpglobals.h	/^	CDSU_MD_OP_INVALID$/;"	e	enum:CdSuMdUdpNhOpcodes
CDSU_MD_UDP_MID_APPL	src/msgdistr/cdsunhudpglobals.h	/^	CDSU_MD_UDP_MID_APPL,$/;"	e	enum:CdSuMdModuleId
CDSU_MD_UDP_MID_INVALID	src/msgdistr/cdsunhudpglobals.h	/^	CDSU_MD_UDP_MID_INVALID$/;"	e	enum:CdSuMdModuleId
CDSU_MD_UDP_MID_NH	src/msgdistr/cdsunhudpglobals.h	/^	CDSU_MD_UDP_MID_NH = 1,$/;"	e	enum:CdSuMdModuleId
CDSU_MSGDISTR_H_	src/msgdistr/cdsumd.h	2;"	d
CDSU_MSGDISTR_READ_BUF_LEN	src/msgdistr/cdsunhudpglobals.h	/^	CDSU_MSGDISTR_READ_BUF_LEN  = 30000$/;"	e	enum:__anon5
CDSU_MSG_DISTR_TEST_H	test/msgdistr-test.h	2;"	d
CDSU_NHTCP_ADDLSTNREQ_CTR	src/tcpnh/cdsunhtcptypes.h	/^	CDSU_NHTCP_ADDLSTNREQ_CTR = 0,$/;"	e	enum:CdSuNhTcpCtrType
CDSU_NHTCP_API_RT_DATALEN_INV	src/tcpnh/cdsunhtcptypes.h	/^	CDSU_NHTCP_API_RT_DATALEN_INV,			\/\/ Data Len = 0$/;"	e	enum:CdSuNhTcpApiRetType
CDSU_NHTCP_API_RT_DATALEN_OUTOFRNG	src/tcpnh/cdsunhtcptypes.h	/^	CDSU_NHTCP_API_RT_DATALEN_OUTOFRNG		\/\/ Outof range of Data Length$/;"	e	enum:CdSuNhTcpApiRetType
CDSU_NHTCP_API_RT_DATAPTR_INV	src/tcpnh/cdsunhtcptypes.h	/^	CDSU_NHTCP_API_RT_DATAPTR_INV,			\/\/ Data Pointer = NULL$/;"	e	enum:CdSuNhTcpApiRetType
CDSU_NHTCP_API_RT_DATA_SELTMRVAL_OUTOFRNG	src/tcpnh/cdsunhtcptypes.h	/^	CDSU_NHTCP_API_RT_DATA_SELTMRVAL_OUTOFRNG,	\/\/ Data Select Timer value out of range.$/;"	e	enum:CdSuNhTcpApiRetType
CDSU_NHTCP_API_RT_FAIL	src/tcpnh/cdsunhtcptypes.h	/^	CDSU_NHTCP_API_RT_FAIL,$/;"	e	enum:CdSuNhTcpApiRetType
CDSU_NHTCP_API_RT_INST_OVERFLOW	src/tcpnh/cdsunhtcptypes.h	/^	CDSU_NHTCP_API_RT_INST_OVERFLOW,		\/\/ Over Flow of Instance.$/;"	e	enum:CdSuNhTcpApiRetType
CDSU_NHTCP_API_RT_INVINSTID	src/tcpnh/cdsunhtcptypes.h	/^	CDSU_NHTCP_API_RT_INVINSTID,			\/\/ Invalid NH Instance Id.$/;"	e	enum:CdSuNhTcpApiRetType
CDSU_NHTCP_API_RT_LSTNQSZ_OUTOFRNG	src/tcpnh/cdsunhtcptypes.h	/^	CDSU_NHTCP_API_RT_LSTNQSZ_OUTOFRNG,		\/\/ Listern Queue Size out of range.$/;"	e	enum:CdSuNhTcpApiRetType
CDSU_NHTCP_API_RT_LSTN_SELTMRVAL_OUTOFRNG	src/tcpnh/cdsunhtcptypes.h	/^	CDSU_NHTCP_API_RT_LSTN_SELTMRVAL_OUTOFRNG,	\/\/ Lstnr Select Timer value out of range.$/;"	e	enum:CdSuNhTcpApiRetType
CDSU_NHTCP_API_RT_MAXBUFLEN_OUTOFRNG	src/tcpnh/cdsunhtcptypes.h	/^	CDSU_NHTCP_API_RT_MAXBUFLEN_OUTOFRNG,		\/\/ Max Buffer out of range.$/;"	e	enum:CdSuNhTcpApiRetType
CDSU_NHTCP_API_RT_MAXCON_OUTOFRNG	src/tcpnh/cdsunhtcptypes.h	/^	CDSU_NHTCP_API_RT_MAXCON_OUTOFRNG,		\/\/ Max Connection out of range.$/;"	e	enum:CdSuNhTcpApiRetType
CDSU_NHTCP_API_RT_MAXLSTN_OUTOFRNG	src/tcpnh/cdsunhtcptypes.h	/^	CDSU_NHTCP_API_RT_MAXLSTN_OUTOFRNG,		\/\/ Max Listener out of range.$/;"	e	enum:CdSuNhTcpApiRetType
CDSU_NHTCP_API_RT_NOHLR_SELTMRVAL_OUTOFRNG	src/tcpnh/cdsunhtcptypes.h	/^	CDSU_NHTCP_API_RT_NOHLR_SELTMRVAL_OUTOFRNG,	\/\/ No Handle Select Timer value out of range.$/;"	e	enum:CdSuNhTcpApiRetType
CDSU_NHTCP_API_RT_OPCODE_INV	src/tcpnh/cdsunhtcptypes.h	/^	CDSU_NHTCP_API_RT_OPCODE_INV,			\/\/ Invalid Opcode.$/;"	e	enum:CdSuNhTcpApiRetType
CDSU_NHTCP_API_RT_OPERATION_INV	src/tcpnh/cdsunhtcptypes.h	/^	CDSU_NHTCP_API_RT_OPERATION_INV,		\/\/ Request Operation Is invalid (Out Of Sequence Operation)$/;"	e	enum:CdSuNhTcpApiRetType
CDSU_NHTCP_API_RT_SUBOPCODE_INV	src/tcpnh/cdsunhtcptypes.h	/^	CDSU_NHTCP_API_RT_SUBOPCODE_INV,		\/\/ Invalid Subopcode.$/;"	e	enum:CdSuNhTcpApiRetType
CDSU_NHTCP_API_RT_SUCCESS	src/tcpnh/cdsunhtcptypes.h	/^	CDSU_NHTCP_API_RT_SUCCESS,$/;"	e	enum:CdSuNhTcpApiRetType
CDSU_NHTCP_CCR_ERROR	src/tcpnh/cdsunhtcptypes.h	/^	CDSU_NHTCP_CCR_ERROR,			\/\/ Connection close due to some error.$/;"	e	enum:CdSuNhTcpCloseConReason
CDSU_NHTCP_CCR_INVALID	src/tcpnh/cdsunhtcptypes.h	/^	CDSU_NHTCP_CCR_INVALID$/;"	e	enum:CdSuNhTcpCloseConReason
CDSU_NHTCP_CCR_NORMAL	src/tcpnh/cdsunhtcptypes.h	/^	CDSU_NHTCP_CCR_NORMAL,			\/\/ Normal connection close.$/;"	e	enum:CdSuNhTcpCloseConReason
CDSU_NHTCP_CLOSECON_IND_CTR	src/tcpnh/cdsunhtcptypes.h	/^	CDSU_NHTCP_CLOSECON_IND_CTR,$/;"	e	enum:CdSuNhTcpCtrType
CDSU_NHTCP_CONIND_CTR	src/tcpnh/cdsunhtcptypes.h	/^	CDSU_NHTCP_CONIND_CTR,$/;"	e	enum:CdSuNhTcpCtrType
CDSU_NHTCP_CONREQ_CTR	src/tcpnh/cdsunhtcptypes.h	/^	CDSU_NHTCP_CONREQ_CTR,$/;"	e	enum:CdSuNhTcpCtrType
CDSU_NHTCP_CUR_ACTIVE_CON_CTR	src/tcpnh/cdsunhtcptypes.h	/^	CDSU_NHTCP_CUR_ACTIVE_CON_CTR,$/;"	e	enum:CdSuNhTcpCtrType
CDSU_NHTCP_CUR_ACTIVE_LSN_CTR	src/tcpnh/cdsunhtcptypes.h	/^	CDSU_NHTCP_CUR_ACTIVE_LSN_CTR,$/;"	e	enum:CdSuNhTcpCtrType
CDSU_NHTCP_DATAIND_CTR	src/tcpnh/cdsunhtcptypes.h	/^	CDSU_NHTCP_DATAIND_CTR,$/;"	e	enum:CdSuNhTcpCtrType
CDSU_NHTCP_DATAREQ_CTR	src/tcpnh/cdsunhtcptypes.h	/^	CDSU_NHTCP_DATAREQ_CTR,$/;"	e	enum:CdSuNhTcpCtrType
CDSU_NHTCP_DEF_DATA_SELTMR	src/tcpnh/cdsunhtcptypes.h	/^	CDSU_NHTCP_DEF_DATA_SELTMR = 250,	\/\/ Microseconds.$/;"	e	enum:__anon18
CDSU_NHTCP_DEF_LSTNQ_SIZE	src/tcpnh/cdsunhtcptypes.h	/^	CDSU_NHTCP_DEF_LSTNQ_SIZE = 5,		\/\/ Microseconds.$/;"	e	enum:__anon18
CDSU_NHTCP_DEF_LSTN_SELTMR	src/tcpnh/cdsunhtcptypes.h	/^	CDSU_NHTCP_DEF_LSTN_SELTMR = 250,	\/\/ Microseconds.$/;"	e	enum:__anon18
CDSU_NHTCP_DEF_NOCONNS	src/tcpnh/cdsunhtcptypes.h	/^	CDSU_NHTCP_DEF_NOCONNS = 100,$/;"	e	enum:__anon18
CDSU_NHTCP_DEF_NOHDL_TMR	src/tcpnh/cdsunhtcptypes.h	/^	CDSU_NHTCP_DEF_NOHDL_TMR = 250,		\/\/ Microseconds.$/;"	e	enum:__anon18
CDSU_NHTCP_DEF_NOLSTNS	src/tcpnh/cdsunhtcptypes.h	/^	CDSU_NHTCP_DEF_NOLSTNS = 20,$/;"	e	enum:__anon18
CDSU_NHTCP_DEF_TCPBUFLEN	src/tcpnh/cdsunhtcptypes.h	/^	CDSU_NHTCP_DEF_TCPBUFLEN = 4096,$/;"	e	enum:__anon18
CDSU_NHTCP_DISCONREQ_CTR	src/tcpnh/cdsunhtcptypes.h	/^	CDSU_NHTCP_DISCONREQ_CTR,$/;"	e	enum:CdSuNhTcpCtrType
CDSU_NHTCP_FCODE_BINDERROR	src/tcpnh/cdsunhtcptypes.h	/^	CDSU_NHTCP_FCODE_BINDERROR,		\/\/ Bind error.$/;"	e	enum:CdSuNhTcpFailCode
CDSU_NHTCP_FCODE_BUFLEN_OVERFLOW	src/tcpnh/cdsunhtcptypes.h	/^	CDSU_NHTCP_FCODE_BUFLEN_OVERFLOW,	\/\/ Exceeds Max Buffer Length. $/;"	e	enum:CdSuNhTcpFailCode
CDSU_NHTCP_FCODE_CONNECTERROR	src/tcpnh/cdsunhtcptypes.h	/^	CDSU_NHTCP_FCODE_CONNECTERROR,		\/\/ Connect Error.$/;"	e	enum:CdSuNhTcpFailCode
CDSU_NHTCP_FCODE_DATA_WRITE_ERR	src/tcpnh/cdsunhtcptypes.h	/^	CDSU_NHTCP_FCODE_DATA_WRITE_ERR,	\/\/ Data write error.$/;"	e	enum:CdSuNhTcpFailCode
CDSU_NHTCP_FCODE_INVALID	src/tcpnh/cdsunhtcptypes.h	/^	CDSU_NHTCP_FCODE_INVALID$/;"	e	enum:CdSuNhTcpFailCode
CDSU_NHTCP_FCODE_INVPARAM	src/tcpnh/cdsunhtcptypes.h	/^	CDSU_NHTCP_FCODE_INVPARAM,		\/\/ Parameter of request are invalid.$/;"	e	enum:CdSuNhTcpFailCode
CDSU_NHTCP_FCODE_INV_OPERATION	src/tcpnh/cdsunhtcptypes.h	/^	CDSU_NHTCP_FCODE_INV_OPERATION,		\/\/ Invalid operation requested.$/;"	e	enum:CdSuNhTcpFailCode
CDSU_NHTCP_FCODE_NOT_SET	src/tcpnh/cdsunhtcptypes.h	/^	CDSU_NHTCP_FCODE_NOT_SET,		\/\/ Fail code not set.$/;"	e	enum:CdSuNhTcpFailCode
CDSU_NHTCP_FCODE_NO_CONN	src/tcpnh/cdsunhtcptypes.h	/^	CDSU_NHTCP_FCODE_NO_CONN,		\/\/ Connection doesn't exists. $/;"	e	enum:CdSuNhTcpFailCode
CDSU_NHTCP_FCODE_NO_LSTN	src/tcpnh/cdsunhtcptypes.h	/^	CDSU_NHTCP_FCODE_NO_LSTN,		\/\/ Connection doesn't exists. $/;"	e	enum:CdSuNhTcpFailCode
CDSU_NHTCP_FCODE_SENDERROR	src/tcpnh/cdsunhtcptypes.h	/^	CDSU_NHTCP_FCODE_SENDERROR,		\/\/ Send error.$/;"	e	enum:CdSuNhTcpFailCode
CDSU_NHTCP_FCODE_SOCK_CRE_ERR	src/tcpnh/cdsunhtcptypes.h	/^	CDSU_NHTCP_FCODE_SOCK_CRE_ERR,		\/\/ Socket Creation error.$/;"	e	enum:CdSuNhTcpFailCode
CDSU_NHTCP_FCODE_SOCK_INSUF_MEM_ERR	src/tcpnh/cdsunhtcptypes.h	/^	CDSU_NHTCP_FCODE_SOCK_INSUF_MEM_ERR,	\/\/ Insufficient Memory available.$/;"	e	enum:CdSuNhTcpFailCode
CDSU_NHTCP_FCODE_SOCK_LSTN_ERR	src/tcpnh/cdsunhtcptypes.h	/^	CDSU_NHTCP_FCODE_SOCK_LSTN_ERR,		\/\/ Socket listen error.$/;"	e	enum:CdSuNhTcpFailCode
CDSU_NHTCP_FCODE_SOCK_NO_KERMEM_ERR	src/tcpnh/cdsunhtcptypes.h	/^	CDSU_NHTCP_FCODE_SOCK_NO_KERMEM_ERR,	\/\/ Not enough kernel memory.$/;"	e	enum:CdSuNhTcpFailCode
CDSU_NHTCP_FCODE_SOCK_NO_PFTOF_ERR	src/tcpnh/cdsunhtcptypes.h	/^	CDSU_NHTCP_FCODE_SOCK_NO_PFTOF_ERR,	\/\/ Process file table overflow.$/;"	e	enum:CdSuNhTcpFailCode
CDSU_NHTCP_FCODE_SOCK_READ_ERR	src/tcpnh/cdsunhtcptypes.h	/^	CDSU_NHTCP_FCODE_SOCK_READ_ERR,		\/\/ Socket read error.$/;"	e	enum:CdSuNhTcpFailCode
CDSU_NHTCP_FCODE_TCPCONN_OVERFLOW	src/tcpnh/cdsunhtcptypes.h	/^	CDSU_NHTCP_FCODE_TCPCONN_OVERFLOW,	\/\/ Exceeds Max No Of Conn. $/;"	e	enum:CdSuNhTcpFailCode
CDSU_NHTCP_FCODE_TCPLSTN_OVERFLOW	src/tcpnh/cdsunhtcptypes.h	/^	CDSU_NHTCP_FCODE_TCPLSTN_OVERFLOW,	\/\/ Exceeds Max No Of Lstn. $/;"	e	enum:CdSuNhTcpFailCode
CDSU_NHTCP_FCODE_TPKT_READ_ERR	src/tcpnh/cdsunhtcptypes.h	/^	CDSU_NHTCP_FCODE_TPKT_READ_ERR,		\/\/ TPKT read error.$/;"	e	enum:CdSuNhTcpFailCode
CDSU_NHTCP_FCODE_TPKT_VER_UNSUPPORT	src/tcpnh/cdsunhtcptypes.h	/^	CDSU_NHTCP_FCODE_TPKT_VER_UNSUPPORT,	\/\/ Unsupported TPKT version.$/;"	e	enum:CdSuNhTcpFailCode
CDSU_NHTCP_FCODE_TPKT_WRITE_ERR	src/tcpnh/cdsunhtcptypes.h	/^	CDSU_NHTCP_FCODE_TPKT_WRITE_ERR,	\/\/ TPKT write error.$/;"	e	enum:CdSuNhTcpFailCode
CDSU_NHTCP_FCODE_UNKNOWNERROR	src/tcpnh/cdsunhtcptypes.h	/^	CDSU_NHTCP_FCODE_UNKNOWNERROR,		\/\/ Unknown Error.$/;"	e	enum:CdSuNhTcpFailCode
CDSU_NHTCP_INVALID	src/tcpnh/cdsunhtcptypes.h	/^	CDSU_NHTCP_INVALID$/;"	e	enum:CdSuNhTcpOpcode
CDSU_NHTCP_INV_CONNID	src/tcpnh/cdsunhtcptypes.h	/^	CDSU_NHTCP_INV_CONNID = 0xffffffff,$/;"	e	enum:__anon18
CDSU_NHTCP_INV_LSTNID	src/tcpnh/cdsunhtcptypes.h	/^	CDSU_NHTCP_INV_LSTNID = 0xffffffff,$/;"	e	enum:__anon18
CDSU_NHTCP_INV_NHINSTID	src/tcpnh/cdsunhtcptypes.h	/^	CDSU_NHTCP_INV_NHINSTID = 0xffffffff,$/;"	e	enum:__anon18
CDSU_NHTCP_INV_TCPHANDLE	src/tcpnh/cdsunhtcptypes.h	/^	CDSU_NHTCP_INV_TCPHANDLE = 0xffffffff$/;"	e	enum:__anon18
CDSU_NHTCP_LSTNQ_HIGH_LOAD	src/tcpnh/cdsunhtcptypes.h	/^	CDSU_NHTCP_LSTNQ_HIGH_LOAD 	= 2000,$/;"	e	enum:CdSuNhTcpLstnQSize
CDSU_NHTCP_LSTNQ_LOW_LOAD	src/tcpnh/cdsunhtcptypes.h	/^	CDSU_NHTCP_LSTNQ_LOW_LOAD 	= 10,$/;"	e	enum:CdSuNhTcpLstnQSize
CDSU_NHTCP_LSTNQ_MEDIUM_LOAD	src/tcpnh/cdsunhtcptypes.h	/^	CDSU_NHTCP_LSTNQ_MEDIUM_LOAD 	= 100,$/;"	e	enum:CdSuNhTcpLstnQSize
CDSU_NHTCP_MAX_CONN	src/tcpnh/cdsunhtcpdb.h	/^	CDSU_NHTCP_MAX_CONN = 32768$/;"	e	enum:__anon10
CDSU_NHTCP_MAX_CTR	src/tcpnh/cdsunhtcptypes.h	/^	CDSU_NHTCP_MAX_CTR$/;"	e	enum:CdSuNhTcpCtrType
CDSU_NHTCP_MAX_FDSETSIZE	src/tcpnh/cdsunhtcp.h	/^	CDSU_NHTCP_MAX_FDSETSIZE = 	256$/;"	e	enum:__anon15
CDSU_NHTCP_MAX_FDSETSIZE	src/tcpnh/cdsunhtcp.h	/^	CDSU_NHTCP_MAX_FDSETSIZE = 1024	$/;"	e	enum:__anon17
CDSU_NHTCP_MAX_FDSETSIZE	src/tcpnh/cdsunhtcp.h	/^	CDSU_NHTCP_MAX_FDSETSIZE = 1024	\/\/ TODO: Assign this to __FD_SETSIZE$/;"	e	enum:__anon14
CDSU_NHTCP_MAX_FDSETSIZE	src/tcpnh/cdsunhtcp.h	/^	CDSU_NHTCP_MAX_FDSETSIZE = 32	$/;"	e	enum:__anon16
CDSU_NHTCP_MAX_INST	src/tcpnh/cdsunhtcptypes.h	/^	CDSU_NHTCP_MAX_INST = 128,$/;"	e	enum:__anon18
CDSU_NHTCP_MI_CFG_REQ	src/tcpnh/cdsunhtcptypes.h	/^	CDSU_NHTCP_MI_CFG_REQ,			\/\/ NH Config Request.$/;"	e	enum:CdSuNhTcpOpcode
CDSU_NHTCP_MI_CFG_RSP	src/tcpnh/cdsunhtcptypes.h	/^	CDSU_NHTCP_MI_CFG_RSP,			\/\/ NH Config Response.$/;"	e	enum:CdSuNhTcpOpcode
CDSU_NHTCP_MI_CTRL_REQ	src/tcpnh/cdsunhtcptypes.h	/^	CDSU_NHTCP_MI_CTRL_REQ,			\/\/ NH Start Request.$/;"	e	enum:CdSuNhTcpOpcode
CDSU_NHTCP_MI_CTRL_RSP	src/tcpnh/cdsunhtcptypes.h	/^	CDSU_NHTCP_MI_CTRL_RSP,			\/\/ NH Control Response.$/;"	e	enum:CdSuNhTcpOpcode
CDSU_NHTCP_MI_DELNH_REQ	src/tcpnh/cdsunhtcptypes.h	/^	CDSU_NHTCP_MI_DELNH_REQ,		\/\/ NH Delete Request.$/;"	e	enum:CdSuNhTcpOpcode
CDSU_NHTCP_MI_DELNH_RSP	src/tcpnh/cdsunhtcptypes.h	/^	CDSU_NHTCP_MI_DELNH_RSP,		\/\/ NH Delete Response.$/;"	e	enum:CdSuNhTcpOpcode
CDSU_NHTCP_MI_INIT_REQ	src/tcpnh/cdsunhtcptypes.h	/^	CDSU_NHTCP_MI_INIT_REQ,			\/\/ NH Init Request.$/;"	e	enum:CdSuNhTcpOpcode
CDSU_NHTCP_MI_INIT_RSP	src/tcpnh/cdsunhtcptypes.h	/^	CDSU_NHTCP_MI_INIT_RSP,			\/\/ NH Init Response.$/;"	e	enum:CdSuNhTcpOpcode
CDSU_NHTCP_MI_STATISTICS_REQ	src/tcpnh/cdsunhtcptypes.h	/^	CDSU_NHTCP_MI_STATISTICS_REQ,		\/\/ NH Statistics Request.$/;"	e	enum:CdSuNhTcpOpcode
CDSU_NHTCP_MI_STATISTICS_RSP	src/tcpnh/cdsunhtcptypes.h	/^	CDSU_NHTCP_MI_STATISTICS_RSP,		\/\/ NH Statistics Response.$/;"	e	enum:CdSuNhTcpOpcode
CDSU_NHTCP_MI_STATUS_REQ	src/tcpnh/cdsunhtcptypes.h	/^	CDSU_NHTCP_MI_STATUS_REQ,		\/\/ NH Status Request.$/;"	e	enum:CdSuNhTcpOpcode
CDSU_NHTCP_MI_STATUS_RSP	src/tcpnh/cdsunhtcptypes.h	/^	CDSU_NHTCP_MI_STATUS_RSP,		\/\/ NH Status Response.$/;"	e	enum:CdSuNhTcpOpcode
CDSU_NHTCP_MI_USTATUS_IND	src/tcpnh/cdsunhtcptypes.h	/^	CDSU_NHTCP_MI_USTATUS_IND,		\/\/ NH Unsolicited Status Indication.$/;"	e	enum:CdSuNhTcpOpcode
CDSU_NHTCP_REMLSTNREQ_CTR	src/tcpnh/cdsunhtcptypes.h	/^	CDSU_NHTCP_REMLSTNREQ_CTR,$/;"	e	enum:CdSuNhTcpCtrType
CDSU_NHTCP_RSPCODE_FAIL	src/tcpnh/cdsunhtcptypes.h	/^	CDSU_NHTCP_RSPCODE_FAIL,$/;"	e	enum:CdSuNhTcpRspCode
CDSU_NHTCP_RSPCODE_SUCCESS	src/tcpnh/cdsunhtcptypes.h	/^	CDSU_NHTCP_RSPCODE_SUCCESS = 1,$/;"	e	enum:CdSuNhTcpRspCode
CDSU_NHTCP_SO_GENERAL_CFG_REQ	src/tcpnh/cdsunhtcptypes.h	/^	CDSU_NHTCP_SO_GENERAL_CFG_REQ,$/;"	e	enum:CdSuNhTcpSubOpcode
CDSU_NHTCP_SO_GENERAL_CFG_RSP	src/tcpnh/cdsunhtcptypes.h	/^	CDSU_NHTCP_SO_GENERAL_CFG_RSP,$/;"	e	enum:CdSuNhTcpSubOpcode
CDSU_NHTCP_SO_INIIIAL_CFG_REQ	src/tcpnh/cdsunhtcptypes.h	/^	CDSU_NHTCP_SO_INIIIAL_CFG_REQ,$/;"	e	enum:CdSuNhTcpSubOpcode
CDSU_NHTCP_SO_INITIAL_CFG_RSP	src/tcpnh/cdsunhtcptypes.h	/^	CDSU_NHTCP_SO_INITIAL_CFG_RSP,$/;"	e	enum:CdSuNhTcpSubOpcode
CDSU_NHTCP_SO_INVALID	src/tcpnh/cdsunhtcptypes.h	/^	CDSU_NHTCP_SO_INVALID$/;"	e	enum:CdSuNhTcpSubOpcode
CDSU_NHTCP_SO_START_REQ	src/tcpnh/cdsunhtcptypes.h	/^	CDSU_NHTCP_SO_START_REQ,$/;"	e	enum:CdSuNhTcpSubOpcode
CDSU_NHTCP_SO_START_RSP	src/tcpnh/cdsunhtcptypes.h	/^	CDSU_NHTCP_SO_START_RSP,$/;"	e	enum:CdSuNhTcpSubOpcode
CDSU_NHTCP_SO_STOP_REQ	src/tcpnh/cdsunhtcptypes.h	/^	CDSU_NHTCP_SO_STOP_REQ,$/;"	e	enum:CdSuNhTcpSubOpcode
CDSU_NHTCP_SO_STOP_RSP	src/tcpnh/cdsunhtcptypes.h	/^	CDSU_NHTCP_SO_STOP_RSP,$/;"	e	enum:CdSuNhTcpSubOpcode
CDSU_NHTCP_ST_CREATED	src/tcpnh/cdsunhtcptypes.h	/^	CDSU_NHTCP_ST_CREATED,$/;"	e	enum:CdSuNhTcpState
CDSU_NHTCP_ST_INVALID	src/tcpnh/cdsunhtcptypes.h	/^	CDSU_NHTCP_ST_INVALID$/;"	e	enum:CdSuNhTcpState
CDSU_NHTCP_ST_RUNNING	src/tcpnh/cdsunhtcptypes.h	/^	CDSU_NHTCP_ST_RUNNING,$/;"	e	enum:CdSuNhTcpState
CDSU_NHTCP_SUCCESS_ADDLSTN_CTR	src/tcpnh/cdsunhtcptypes.h	/^	CDSU_NHTCP_SUCCESS_ADDLSTN_CTR,$/;"	e	enum:CdSuNhTcpCtrType
CDSU_NHTCP_SUCCESS_CLOSE_CON_CTR	src/tcpnh/cdsunhtcptypes.h	/^	CDSU_NHTCP_SUCCESS_CLOSE_CON_CTR,$/;"	e	enum:CdSuNhTcpCtrType
CDSU_NHTCP_SUCCESS_CON_CTR	src/tcpnh/cdsunhtcptypes.h	/^	CDSU_NHTCP_SUCCESS_CON_CTR,$/;"	e	enum:CdSuNhTcpCtrType
CDSU_NHTCP_SUCCESS_DATATX_CTR	src/tcpnh/cdsunhtcptypes.h	/^	CDSU_NHTCP_SUCCESS_DATATX_CTR,$/;"	e	enum:CdSuNhTcpCtrType
CDSU_NHTCP_SUCCESS_REMLSTN_CTR	src/tcpnh/cdsunhtcptypes.h	/^	CDSU_NHTCP_SUCCESS_REMLSTN_CTR,$/;"	e	enum:CdSuNhTcpCtrType
CDSU_NHTCP_TPKT_VERSION	src/tcpnh/cdsunhtcptypes.h	/^	CDSU_NHTCP_TPKT_VERSION = 3,		\/\/ Tpkt version No.$/;"	e	enum:__anon18
CDSU_NHTCP_UI_ADD_LISTENER_REQ	src/tcpnh/cdsunhtcptypes.h	/^	CDSU_NHTCP_UI_ADD_LISTENER_REQ,		\/\/ Add Lstn Req.$/;"	e	enum:CdSuNhTcpOpcode
CDSU_NHTCP_UI_ADD_LISTENER_RSP	src/tcpnh/cdsunhtcptypes.h	/^	CDSU_NHTCP_UI_ADD_LISTENER_RSP,		\/\/ Add Lstn Rsp.$/;"	e	enum:CdSuNhTcpOpcode
CDSU_NHTCP_UI_CLOSE_CON_IND	src/tcpnh/cdsunhtcptypes.h	/^	CDSU_NHTCP_UI_CLOSE_CON_IND,		\/\/ Close Connection Indication.$/;"	e	enum:CdSuNhTcpOpcode
CDSU_NHTCP_UI_CLOSE_CON_REQ	src/tcpnh/cdsunhtcptypes.h	/^	CDSU_NHTCP_UI_CLOSE_CON_REQ,		\/\/ Close Connection Req.$/;"	e	enum:CdSuNhTcpOpcode
CDSU_NHTCP_UI_CLOSE_CON_RSP	src/tcpnh/cdsunhtcptypes.h	/^	CDSU_NHTCP_UI_CLOSE_CON_RSP,		\/\/ Close Connection Rsp.$/;"	e	enum:CdSuNhTcpOpcode
CDSU_NHTCP_UI_CONNECT_REQ	src/tcpnh/cdsunhtcptypes.h	/^	CDSU_NHTCP_UI_CONNECT_REQ,		\/\/ Establish Connection.$/;"	e	enum:CdSuNhTcpOpcode
CDSU_NHTCP_UI_CONNECT_RSP	src/tcpnh/cdsunhtcptypes.h	/^	CDSU_NHTCP_UI_CONNECT_RSP,		\/\/ Add Connection Rsp.$/;"	e	enum:CdSuNhTcpOpcode
CDSU_NHTCP_UI_CON_IND	src/tcpnh/cdsunhtcptypes.h	/^	CDSU_NHTCP_UI_CON_IND,			\/\/ Connection Indication.$/;"	e	enum:CdSuNhTcpOpcode
CDSU_NHTCP_UI_DATA_IND	src/tcpnh/cdsunhtcptypes.h	/^	CDSU_NHTCP_UI_DATA_IND,			\/\/ Data Indication.$/;"	e	enum:CdSuNhTcpOpcode
CDSU_NHTCP_UI_DATA_REQ	src/tcpnh/cdsunhtcptypes.h	/^	CDSU_NHTCP_UI_DATA_REQ,			\/\/ Transmit Data Req.$/;"	e	enum:CdSuNhTcpOpcode
CDSU_NHTCP_UI_DATA_RSP	src/tcpnh/cdsunhtcptypes.h	/^	CDSU_NHTCP_UI_DATA_RSP,			\/\/ Transmit Data Rsp.$/;"	e	enum:CdSuNhTcpOpcode
CDSU_NHTCP_UI_REM_LISTENER_REQ	src/tcpnh/cdsunhtcptypes.h	/^	CDSU_NHTCP_UI_REM_LISTENER_REQ,		\/\/ Remove Lstn Req.$/;"	e	enum:CdSuNhTcpOpcode
CDSU_NHTCP_UI_REM_LISTENER_RSP	src/tcpnh/cdsunhtcptypes.h	/^	CDSU_NHTCP_UI_REM_LISTENER_RSP,		\/\/ Add Lstn Rsp.$/;"	e	enum:CdSuNhTcpOpcode
CDSU_NHUDP_ADD_UDPPORT_CTR	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_ADD_UDPPORT_CTR = 0,$/;"	e	enum:CdSuNhUdpCtrType
CDSU_NHUDP_ADD_UDPPORT_FIXED_DST_CTR	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_ADD_UDPPORT_FIXED_DST_CTR,$/;"	e	enum:CdSuNhUdpCtrType
CDSU_NHUDP_ADD_UDPPORT_FIXED_LCLDST_CTR	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_ADD_UDPPORT_FIXED_LCLDST_CTR,$/;"	e	enum:CdSuNhUdpCtrType
CDSU_NHUDP_ADD_UDPPORT_FIXED_LCL_CTR	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_ADD_UDPPORT_FIXED_LCL_CTR,$/;"	e	enum:CdSuNhUdpCtrType
CDSU_NHUDP_ADD_UDPPORT_FIXED_LCL_EPH_CTR	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_ADD_UDPPORT_FIXED_LCL_EPH_CTR,$/;"	e	enum:CdSuNhUdpCtrType
CDSU_NHUDP_ADD_UDPPORT_FIXED_LCL_ST_CTR	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_ADD_UDPPORT_FIXED_LCL_ST_CTR,$/;"	e	enum:CdSuNhUdpCtrType
CDSU_NHUDP_ALWOP_UDPPORTID	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_ALWOP_UDPPORTID = 0, 	\/\/ Always opened udp port's port id.$/;"	e	enum:__anon9
CDSU_NHUDP_API_RT_DATALEN_INV	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_API_RT_DATALEN_INV,		\/\/ Data Len = 0$/;"	e	enum:CdSuNhUdpApiRetType
CDSU_NHUDP_API_RT_DATALEN_OUTOFRNG	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_API_RT_DATALEN_OUTOFRNG,	\/\/ Outof range of Data Length$/;"	e	enum:CdSuNhUdpApiRetType
CDSU_NHUDP_API_RT_DATAPTR_INV	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_API_RT_DATAPTR_INV,		\/\/ Data Pointer = NULL$/;"	e	enum:CdSuNhUdpApiRetType
CDSU_NHUDP_API_RT_DESTPORT_INV	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_API_RT_DESTPORT_INV,		\/\/ Dest Port = 0$/;"	e	enum:CdSuNhUdpApiRetType
CDSU_NHUDP_API_RT_FAIL	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_API_RT_FAIL,			\/\/ Operation Failed.$/;"	e	enum:CdSuNhUdpApiRetType
CDSU_NHUDP_API_RT_INSTID_INV	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_API_RT_INSTID_INV,		\/\/ Invalid NH Instance Id.$/;"	e	enum:CdSuNhUdpApiRetType
CDSU_NHUDP_API_RT_INST_OVERFLOW	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_API_RT_INST_OVERFLOW,	\/\/ Over Flow of Instance.$/;"	e	enum:CdSuNhUdpApiRetType
CDSU_NHUDP_API_RT_MAXBUFLEN_OUTOFRNG	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_API_RT_MAXBUFLEN_OUTOFRNG,	\/\/ Max Buffer configured is out of range.$/;"	e	enum:CdSuNhUdpApiRetType
CDSU_NHUDP_API_RT_MAXPORT_OUTOFRNG	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_API_RT_MAXPORT_OUTOFRNG,	\/\/ Max Connection configured is out of range.$/;"	e	enum:CdSuNhUdpApiRetType
CDSU_NHUDP_API_RT_NOHLRTMRVAL_OUTOFRNG	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_API_RT_NOHLRTMRVAL_OUTOFRNG,	\/\/ No Handler Timer configured is out of ranage.$/;"	e	enum:CdSuNhUdpApiRetType
CDSU_NHUDP_API_RT_OPCODE_INV	src/udpnh/cdsunhudptypes.h	/^       	CDSU_NHUDP_API_RT_OPCODE_INV,		\/\/ Invalid Opcode.$/;"	e	enum:CdSuNhUdpApiRetType
CDSU_NHUDP_API_RT_OP_INV	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_API_RT_OP_INV,		\/\/ Request Operation Is invalid (Out Of Sequence Operation)$/;"	e	enum:CdSuNhUdpApiRetType
CDSU_NHUDP_API_RT_PORTID_INV	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_API_RT_PORTID_INV,		\/\/ Invalid Port Id.$/;"	e	enum:CdSuNhUdpApiRetType
CDSU_NHUDP_API_RT_SELTMRVAL_OUTOFRNG	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_API_RT_SELTMRVAL_OUTOFRNG,	\/\/ Select Timer value configured is out of range.$/;"	e	enum:CdSuNhUdpApiRetType
CDSU_NHUDP_API_RT_SUBOPCODE_INV	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_API_RT_SUBOPCODE_INV,	\/\/ Invalid Subopcode.$/;"	e	enum:CdSuNhUdpApiRetType
CDSU_NHUDP_API_RT_SUCCESS	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_API_RT_SUCCESS,		\/\/ Function operation is success.$/;"	e	enum:CdSuNhUdpApiRetType
CDSU_NHUDP_CUR_ACTIVE_UDPPORT_CTR	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_CUR_ACTIVE_UDPPORT_CTR,$/;"	e	enum:CdSuNhUdpCtrType
CDSU_NHUDP_CUR_ACTIVE_UDPPORT_LF_CTR	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_CUR_ACTIVE_UDPPORT_LF_CTR,$/;"	e	enum:CdSuNhUdpCtrType
CDSU_NHUDP_DATAIND_CTR	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_DATAIND_CTR,$/;"	e	enum:CdSuNhUdpCtrType
CDSU_NHUDP_DATAIND_ERROR_CTR	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_DATAIND_ERROR_CTR,$/;"	e	enum:CdSuNhUdpCtrType
CDSU_NHUDP_DATAIND_FIXED_LCLDST_CTR	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_DATAIND_FIXED_LCLDST_CTR,$/;"	e	enum:CdSuNhUdpCtrType
CDSU_NHUDP_DATAIND_FIXED_LCL_CTR	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_DATAIND_FIXED_LCL_CTR,$/;"	e	enum:CdSuNhUdpCtrType
CDSU_NHUDP_DATAIND_FIXED_LCL_EPH_CTR	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_DATAIND_FIXED_LCL_EPH_CTR,$/;"	e	enum:CdSuNhUdpCtrType
CDSU_NHUDP_DATAIND_FIXED_LCL_ST_CTR	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_DATAIND_FIXED_LCL_ST_CTR,$/;"	e	enum:CdSuNhUdpCtrType
CDSU_NHUDP_DATAREQ_ALWOP_CTR	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_DATAREQ_ALWOP_CTR,$/;"	e	enum:CdSuNhUdpCtrType
CDSU_NHUDP_DATAREQ_CTR	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_DATAREQ_CTR,$/;"	e	enum:CdSuNhUdpCtrType
CDSU_NHUDP_DATAREQ_FIXED_DST_CTR	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_DATAREQ_FIXED_DST_CTR,$/;"	e	enum:CdSuNhUdpCtrType
CDSU_NHUDP_DATAREQ_FIXED_LCLDST_CTR	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_DATAREQ_FIXED_LCLDST_CTR,$/;"	e	enum:CdSuNhUdpCtrType
CDSU_NHUDP_DATAREQ_FIXED_LCL_CTR	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_DATAREQ_FIXED_LCL_CTR,$/;"	e	enum:CdSuNhUdpCtrType
CDSU_NHUDP_DATAREQ_FIXED_LCL_EPH_CTR	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_DATAREQ_FIXED_LCL_EPH_CTR,$/;"	e	enum:CdSuNhUdpCtrType
CDSU_NHUDP_DATAREQ_FIXED_LCL_ST_CTR	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_DATAREQ_FIXED_LCL_ST_CTR,$/;"	e	enum:CdSuNhUdpCtrType
CDSU_NHUDP_DATAREQ_NOTFIXED_CTR	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_DATAREQ_NOTFIXED_CTR,$/;"	e	enum:CdSuNhUdpCtrType
CDSU_NHUDP_DEF_BUFLEN	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_DEF_BUFLEN = 4096,	\/\/ Default maximum receiver buffer len.$/;"	e	enum:__anon9
CDSU_NHUDP_DEF_DATA_SELTMR	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_DEF_DATA_SELTMR = 250,	\/\/ Default value for timeout for select to read data over udp port(Microseconds).$/;"	e	enum:__anon9
CDSU_NHUDP_DEF_NOHDL_TMR	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_DEF_NOHDL_TMR = 25000000,	\/\/ Sleeping time if there is no fd to read (Microseconds).$/;"	e	enum:__anon9
CDSU_NHUDP_INVALID	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_INVALID$/;"	e	enum:CdSuNhUdpOpcode
CDSU_NHUDP_INV_NHINSTID	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_INV_NHINSTID = 0xffffffff,	\/\/ Invalid Instancd ID of NH$/;"	e	enum:__anon9
CDSU_NHUDP_INV_UDPEVENTHLR	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_INV_UDPEVENTHLR = 0$/;"	e	enum:__anon9
CDSU_NHUDP_INV_UDPHANDLE	src/udpnh/cdsunhudp.h	/^		CDSU_NHUDP_INV_UDPHANDLE = -1$/;"	e	enum:CdSuNhUdp::__anon7
CDSU_NHUDP_INV_UDPPORT	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_INV_UDPPORT = 0xffff,	\/\/ Invalid Udp Port$/;"	e	enum:__anon9
CDSU_NHUDP_INV_UDPPORTID	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_INV_UDPPORTID = 0xffffffff,	\/\/ Invalid Udp Port ID$/;"	e	enum:__anon9
CDSU_NHUDP_MAX_CTR	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_MAX_CTR$/;"	e	enum:CdSuNhUdpCtrType
CDSU_NHUDP_MAX_INST	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_MAX_INST = 128,	\/\/ Possible maximum NH instance can be in a process$/;"	e	enum:__anon9
CDSU_NHUDP_MAX_UDPPORT	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_MAX_UDPPORT = 1024,	\/\/ Maximum no of udp port allowed to open per NH instance$/;"	e	enum:__anon9
CDSU_NHUDP_MI_CFG_REQ	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_MI_CFG_REQ,			\/\/ NH Config Request.$/;"	e	enum:CdSuNhUdpOpcode
CDSU_NHUDP_MI_CFG_RSP	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_MI_CFG_RSP,			\/\/ NH Config Response.$/;"	e	enum:CdSuNhUdpOpcode
CDSU_NHUDP_MI_CTRL_REQ	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_MI_CTRL_REQ,			\/\/ NH Start Request.$/;"	e	enum:CdSuNhUdpOpcode
CDSU_NHUDP_MI_CTRL_RSP	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_MI_CTRL_RSP,			\/\/ NH Control Response.$/;"	e	enum:CdSuNhUdpOpcode
CDSU_NHUDP_MI_DELNH_REQ	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_MI_DELNH_REQ,		\/\/ NH Delete Request.$/;"	e	enum:CdSuNhUdpOpcode
CDSU_NHUDP_MI_DELNH_RSP	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_MI_DELNH_RSP,		\/\/ NH Delete Response.$/;"	e	enum:CdSuNhUdpOpcode
CDSU_NHUDP_MI_INIT_REQ	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_MI_INIT_REQ,			\/\/ NH Init Request.$/;"	e	enum:CdSuNhUdpOpcode
CDSU_NHUDP_MI_INIT_RSP	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_MI_INIT_RSP,			\/\/ NH Init Response.$/;"	e	enum:CdSuNhUdpOpcode
CDSU_NHUDP_MI_STATISTICS_REQ	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_MI_STATISTICS_REQ,		\/\/ NH Statistics Request.$/;"	e	enum:CdSuNhUdpOpcode
CDSU_NHUDP_MI_STATISTICS_RSP	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_MI_STATISTICS_RSP,		\/\/ NH Statistics Response.$/;"	e	enum:CdSuNhUdpOpcode
CDSU_NHUDP_MI_STATUS_REQ	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_MI_STATUS_REQ,		\/\/ NH Status Request.$/;"	e	enum:CdSuNhUdpOpcode
CDSU_NHUDP_MI_STATUS_RSP	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_MI_STATUS_RSP,		\/\/ NH Status Response.$/;"	e	enum:CdSuNhUdpOpcode
CDSU_NHUDP_MI_USTATUS_IND	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_MI_USTATUS_IND,		\/\/ NH Unsolicited Status Indication.$/;"	e	enum:CdSuNhUdpOpcode
CDSU_NHUDP_REM_UDPPORT_CTR	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_REM_UDPPORT_CTR,$/;"	e	enum:CdSuNhUdpCtrType
CDSU_NHUDP_REM_UDPPORT_FIXED_DST_CTR	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_REM_UDPPORT_FIXED_DST_CTR,$/;"	e	enum:CdSuNhUdpCtrType
CDSU_NHUDP_REM_UDPPORT_FIXED_LCLDST_CTR	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_REM_UDPPORT_FIXED_LCLDST_CTR,$/;"	e	enum:CdSuNhUdpCtrType
CDSU_NHUDP_REM_UDPPORT_FIXED_LCL_CTR	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_REM_UDPPORT_FIXED_LCL_CTR,$/;"	e	enum:CdSuNhUdpCtrType
CDSU_NHUDP_REM_UDPPORT_FIXED_LCL_EPH_CTR	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_REM_UDPPORT_FIXED_LCL_EPH_CTR,$/;"	e	enum:CdSuNhUdpCtrType
CDSU_NHUDP_REM_UDPPORT_FIXED_LCL_ST_CTR	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_REM_UDPPORT_FIXED_LCL_ST_CTR,$/;"	e	enum:CdSuNhUdpCtrType
CDSU_NHUDP_RSPCODE_FAIL	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_RSPCODE_FAIL,		\/\/ Fail Response$/;"	e	enum:CdSuNhUdpRspCode
CDSU_NHUDP_RSPCODE_SUCCESS	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_RSPCODE_SUCCESS = 1,		\/\/ Success Response$/;"	e	enum:CdSuNhUdpRspCode
CDSU_NHUDP_RSPFCODE_BINDERROR	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_RSPFCODE_BINDERROR,		\/\/ Bind error.$/;"	e	enum:CdSuNhUdpRspFailCode
CDSU_NHUDP_RSPFCODE_CONNECTERROR	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_RSPFCODE_CONNECTERROR,	\/\/ Connect Error.$/;"	e	enum:CdSuNhUdpRspFailCode
CDSU_NHUDP_RSPFCODE_INVALID	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_RSPFCODE_INVALID$/;"	e	enum:CdSuNhUdpRspFailCode
CDSU_NHUDP_RSPFCODE_INVPARAM	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_RSPFCODE_INVPARAM = 1,	\/\/ Parameter of request are invalid.$/;"	e	enum:CdSuNhUdpRspFailCode
CDSU_NHUDP_RSPFCODE_INV_OP	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_RSPFCODE_INV_OP,		\/\/ Invalid operation requested.$/;"	e	enum:CdSuNhUdpRspFailCode
CDSU_NHUDP_RSPFCODE_OPENERROR	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_RSPFCODE_OPENERROR,		\/\/ Socket Open error$/;"	e	enum:CdSuNhUdpRspFailCode
CDSU_NHUDP_RSPFCODE_READERROR	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_RSPFCODE_READERROR,		\/\/ Socket Read Error.$/;"	e	enum:CdSuNhUdpRspFailCode
CDSU_NHUDP_RSPFCODE_SENDERROR	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_RSPFCODE_SENDERROR,		\/\/ Send error.$/;"	e	enum:CdSuNhUdpRspFailCode
CDSU_NHUDP_RSPFCODE_UDPPORT_OVERFLOW	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_RSPFCODE_UDPPORT_OVERFLOW,	\/\/ Can't open udp port since$/;"	e	enum:CdSuNhUdpRspFailCode
CDSU_NHUDP_RSPFCODE_UNKNOWNERROR	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_RSPFCODE_UNKNOWNERROR,	\/\/ Unknown Error.$/;"	e	enum:CdSuNhUdpRspFailCode
CDSU_NHUDP_RSPFCODE_UPORTNOTEXIST	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_RSPFCODE_UPORTNOTEXIST,	\/\/ Udp Port Not exist.$/;"	e	enum:CdSuNhUdpRspFailCode
CDSU_NHUDP_SO_CRE_REQ	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_SO_CRE_REQ,			\/\/ Create NH. $/;"	e	enum:CdSuNhUdpSubOpcode
CDSU_NHUDP_SO_CRE_RSP	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_SO_CRE_RSP,			\/\/ Create Response.$/;"	e	enum:CdSuNhUdpSubOpcode
CDSU_NHUDP_SO_DEL_REQ	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_SO_DEL_REQ,			\/\/ Delete Req.$/;"	e	enum:CdSuNhUdpSubOpcode
CDSU_NHUDP_SO_DEL_RSP	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_SO_DEL_RSP,			\/\/ Delete Response.$/;"	e	enum:CdSuNhUdpSubOpcode
CDSU_NHUDP_SO_GENERAL_CFG_REQ	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_SO_GENERAL_CFG_REQ,		\/\/ General Configuration.$/;"	e	enum:CdSuNhUdpSubOpcode
CDSU_NHUDP_SO_GENERAL_CFG_RSP	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_SO_GENERAL_CFG_RSP,		\/\/ General Configuration Response.$/;"	e	enum:CdSuNhUdpSubOpcode
CDSU_NHUDP_SO_INITIAL_CFG_REQ	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_SO_INITIAL_CFG_REQ = 1,	\/\/ Initial Configuration.$/;"	e	enum:CdSuNhUdpSubOpcode
CDSU_NHUDP_SO_INITIAL_CFG_RSP	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_SO_INITIAL_CFG_RSP,		\/\/ Initial Configuration Response.$/;"	e	enum:CdSuNhUdpSubOpcode
CDSU_NHUDP_SO_INVALID	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_SO_INVALID			\/\/ Invalid.$/;"	e	enum:CdSuNhUdpSubOpcode
CDSU_NHUDP_SO_START_REQ	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_SO_START_REQ,		\/\/ Start Request.$/;"	e	enum:CdSuNhUdpSubOpcode
CDSU_NHUDP_SO_START_RSP	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_SO_START_RSP,		\/\/ Start Response.$/;"	e	enum:CdSuNhUdpSubOpcode
CDSU_NHUDP_SO_STOP_REQ	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_SO_STOP_REQ,			\/\/ Stop Request.$/;"	e	enum:CdSuNhUdpSubOpcode
CDSU_NHUDP_SO_STOP_RSP	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_SO_STOP_RSP,			\/\/ Stop  Response.$/;"	e	enum:CdSuNhUdpSubOpcode
CDSU_NHUDP_ST_CREATED	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_ST_CREATED = 1,		\/\/ Created State.$/;"	e	enum:CdSuNhUdpState
CDSU_NHUDP_ST_INVALID	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_ST_INVALID$/;"	e	enum:CdSuNhUdpState
CDSU_NHUDP_ST_RUNNING	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_ST_RUNNING,			\/\/ Running State$/;"	e	enum:CdSuNhUdpState
CDSU_NHUDP_SUCCESS_ADD_UDPPORT_CTR	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_SUCCESS_ADD_UDPPORT_CTR,$/;"	e	enum:CdSuNhUdpCtrType
CDSU_NHUDP_SUCCESS_ADD_UDPPORT_FIXED_DST_CTR	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_SUCCESS_ADD_UDPPORT_FIXED_DST_CTR,$/;"	e	enum:CdSuNhUdpCtrType
CDSU_NHUDP_SUCCESS_ADD_UDPPORT_FIXED_LCLDST_CTR	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_SUCCESS_ADD_UDPPORT_FIXED_LCLDST_CTR,$/;"	e	enum:CdSuNhUdpCtrType
CDSU_NHUDP_SUCCESS_ADD_UDPPORT_FIXED_LCL_CTR	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_SUCCESS_ADD_UDPPORT_FIXED_LCL_CTR,$/;"	e	enum:CdSuNhUdpCtrType
CDSU_NHUDP_SUCCESS_ADD_UDPPORT_FIXED_LCL_EPH_CTR	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_SUCCESS_ADD_UDPPORT_FIXED_LCL_EPH_CTR,$/;"	e	enum:CdSuNhUdpCtrType
CDSU_NHUDP_SUCCESS_ADD_UDPPORT_FIXED_LCL_ST_CTR	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_SUCCESS_ADD_UDPPORT_FIXED_LCL_ST_CTR,$/;"	e	enum:CdSuNhUdpCtrType
CDSU_NHUDP_SUCCESS_DATAREQ_ALWOP_CTR	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_SUCCESS_DATAREQ_ALWOP_CTR,$/;"	e	enum:CdSuNhUdpCtrType
CDSU_NHUDP_SUCCESS_DATAREQ_CTR	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_SUCCESS_DATAREQ_CTR,$/;"	e	enum:CdSuNhUdpCtrType
CDSU_NHUDP_SUCCESS_DATAREQ_FIXED_DST_CTR	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_SUCCESS_DATAREQ_FIXED_DST_CTR,$/;"	e	enum:CdSuNhUdpCtrType
CDSU_NHUDP_SUCCESS_DATAREQ_FIXED_LCLDST_CTR	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_SUCCESS_DATAREQ_FIXED_LCLDST_CTR,$/;"	e	enum:CdSuNhUdpCtrType
CDSU_NHUDP_SUCCESS_DATAREQ_FIXED_LCL_CTR	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_SUCCESS_DATAREQ_FIXED_LCL_CTR,$/;"	e	enum:CdSuNhUdpCtrType
CDSU_NHUDP_SUCCESS_DATAREQ_FIXED_LCL_EPH_CTR	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_SUCCESS_DATAREQ_FIXED_LCL_EPH_CTR,$/;"	e	enum:CdSuNhUdpCtrType
CDSU_NHUDP_SUCCESS_DATAREQ_FIXED_LCL_ST_CTR	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_SUCCESS_DATAREQ_FIXED_LCL_ST_CTR,$/;"	e	enum:CdSuNhUdpCtrType
CDSU_NHUDP_SUCCESS_DATAREQ_NOTFIXED_CTR	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_SUCCESS_DATAREQ_NOTFIXED_CTR,$/;"	e	enum:CdSuNhUdpCtrType
CDSU_NHUDP_SUCCESS_REM_UDPPORT_CTR	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_SUCCESS_REM_UDPPORT_CTR,$/;"	e	enum:CdSuNhUdpCtrType
CDSU_NHUDP_SUCCESS_REM_UDPPORT_FIXED_DST_CTR	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_SUCCESS_REM_UDPPORT_FIXED_DST_CTR,$/;"	e	enum:CdSuNhUdpCtrType
CDSU_NHUDP_SUCCESS_REM_UDPPORT_FIXED_LCLDST_CTR	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_SUCCESS_REM_UDPPORT_FIXED_LCLDST_CTR,$/;"	e	enum:CdSuNhUdpCtrType
CDSU_NHUDP_SUCCESS_REM_UDPPORT_FIXED_LCL_CTR	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_SUCCESS_REM_UDPPORT_FIXED_LCL_CTR,$/;"	e	enum:CdSuNhUdpCtrType
CDSU_NHUDP_SUCCESS_REM_UDPPORT_FIXED_LCL_EPH_CTR	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_SUCCESS_REM_UDPPORT_FIXED_LCL_EPH_CTR,$/;"	e	enum:CdSuNhUdpCtrType
CDSU_NHUDP_SUCCESS_REM_UDPPORT_FIXED_LCL_ST_CTR	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_SUCCESS_REM_UDPPORT_FIXED_LCL_ST_CTR,$/;"	e	enum:CdSuNhUdpCtrType
CDSU_NHUDP_UI_ADD_UDPPORT_REQ	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_UI_ADD_UDPPORT_REQ,		\/\/ Add UDP Port Req.$/;"	e	enum:CdSuNhUdpOpcode
CDSU_NHUDP_UI_ADD_UDPPORT_RSP	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_UI_ADD_UDPPORT_RSP,		\/\/ Add UDP Port Rsp.$/;"	e	enum:CdSuNhUdpOpcode
CDSU_NHUDP_UI_DATA_IND	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_UI_DATA_IND,			\/\/ Data Indication.$/;"	e	enum:CdSuNhUdpOpcode
CDSU_NHUDP_UI_DATA_REQ	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_UI_DATA_REQ,			\/\/ Transmit Data Req.$/;"	e	enum:CdSuNhUdpOpcode
CDSU_NHUDP_UI_DATA_RSP	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_UI_DATA_RSP,			\/\/ Transmit Data Rsp.$/;"	e	enum:CdSuNhUdpOpcode
CDSU_NHUDP_UI_REM_UDPPORT_REQ	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_UI_REM_UDPPORT_REQ,		\/\/ Remove UDP Port Req.$/;"	e	enum:CdSuNhUdpOpcode
CDSU_NHUDP_UI_REM_UDPPORT_RSP	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_UI_REM_UDPPORT_RSP,		\/\/ Add UDP Port Rsp.$/;"	e	enum:CdSuNhUdpOpcode
CDSU_NHUDP_UI_SEND_REQ	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_UI_SEND_REQ,			\/\/ Send Data without Adding Udp Port.$/;"	e	enum:CdSuNhUdpOpcode
CDSU_NHUDP_UI_SEND_RSP	src/udpnh/cdsunhudptypes.h	/^	CDSU_NHUDP_UI_SEND_RSP,			\/\/ Send Response.$/;"	e	enum:CdSuNhUdpOpcode
CDSU_PRINTF	src/misc/cdsutrace.cpp	45;"	d	file:
CDSU_PRINTF	src/misc/cdsutrace.cpp	47;"	d	file:
CDSU_SUCCESS	include/cdsuthread.h	/^		CDSU_SUCCESS = 1$/;"	e	enum:CdSuThread::RetVal
CDSU_TASK_H_	include/cdsutask.h	2;"	d
CDSU_TASK_SCHEDULER_H	include/cdsutaskscheduler.h	13;"	d
CDSU_THREAD_ID_INVALID	include/cdsuthread.h	/^const pthread_t CDSU_THREAD_ID_INVALID = 0;$/;"	v
CDSU_THREAD_NUM_THREADS_DEF	include/cdsuthread.h	/^	CDSU_THREAD_NUM_THREADS_DEF = 20$/;"	e	enum:__anon26
CDSU_THREAD_PRIORITY_DEF	include/cdsuthread.h	/^		CDSU_THREAD_PRIORITY_DEF = 0$/;"	e	enum:CdSuThread::Priority
CDSU_THREAD_SAFE_QUEUE_H_	include/cdsutsqueue.h	2;"	d
CDSU_THREAD_SCHED_DEF	include/cdsuthread.h	/^		CDSU_THREAD_SCHED_DEF = 0x00000001,$/;"	e	enum:CdSuThread::Flags
CDSU_THREAD_SCHED_FIFO	include/cdsuthread.h	/^		CDSU_THREAD_SCHED_FIFO = 0x00000002,$/;"	e	enum:CdSuThread::Flags
CDSU_THREAD_SCHED_MASK	include/cdsuthread.h	/^		CDSU_THREAD_SCHED_MASK = 0x0000000F,$/;"	e	enum:CdSuThread::Flags
CDSU_THREAD_SCHED_RR	include/cdsuthread.h	/^		CDSU_THREAD_SCHED_RR = 0x00000004,$/;"	e	enum:CdSuThread::Flags
CDSU_THREAD_STACK_SIZE_DEF	include/cdsuthread.h	/^		CDSU_THREAD_STACK_SIZE_DEF = 65536	\/\/ 2^16$/;"	e	enum:CdSuThread::StackSize
CDSU_TID_INVALID	include/cdsutask.h	/^	CDSU_TID_INVALID = 0xff $/;"	e	enum:__anon23
CDSU_TIMEWHEEL_HASH_TABLE_SIZE	include/cdsutimer.h	/^	CDSU_TIMEWHEEL_HASH_TABLE_SIZE = 6151$/;"	e	enum:__anon25
CDSU_TMR_INV_TIMER_ID	include/cdsutimer.h	/^	CDSU_TMR_INV_TIMER_ID = 0xffffffff, 		\/\/ Invalid Timer Id $/;"	e	enum:__anon25
CDSU_TMR_MAX_KEY	src/timer/cdsukeyallocator.h	/^	CDSU_TMR_MAX_KEY = 0xffffffff$/;"	e	enum:CdSuTimerFields
CDSU_TMR_MAX_USERINFO_NUM	include/cdsutimer.h	/^	CDSU_TMR_MAX_USERINFO_NUM = 8,	    		\/\/ Maximum number of $/;"	e	enum:__anon25
CDSU_TMR_RV_INV_CALLBACK	include/cdsutimer.h	/^	CDSU_TMR_RV_INV_CALLBACK,	\/\/ Invalid Call Back Function.$/;"	e	enum:CdSuTmrRetVal
CDSU_TMR_RV_INV_MODID	include/cdsutimer.h	/^	CDSU_TMR_RV_INV_MODID,		\/\/ ??$/;"	e	enum:CdSuTmrRetVal
CDSU_TMR_RV_INV_MUTEXLOCK	include/cdsutimer.h	/^	CDSU_TMR_RV_INV_MUTEXLOCK,	\/\/ Invalid Mutex Lock.$/;"	e	enum:CdSuTmrRetVal
CDSU_TMR_RV_INV_MUTEXUNLOCK	include/cdsutimer.h	/^	CDSU_TMR_RV_INV_MUTEXUNLOCK,	\/\/ Invalid Mutex Unlock.$/;"	e	enum:CdSuTmrRetVal
CDSU_TMR_RV_INV_TIME_COUNT	include/cdsutimer.h	/^	CDSU_TMR_RV_INV_TIME_COUNT,	\/\/ Invalid Time Count$/;"	e	enum:CdSuTmrRetVal
CDSU_TMR_RV_INV_TIME_UNIT	include/cdsutimer.h	/^	CDSU_TMR_RV_INV_TIME_UNIT,	\/\/ Invalid Time Unit.$/;"	e	enum:CdSuTmrRetVal
CDSU_TMR_RV_INV_TMRHASHDEL	include/cdsutimer.h	/^	CDSU_TMR_RV_INV_TMRHASHDEL,	\/\/ Invalid Timer Hash Delete.$/;"	e	enum:CdSuTmrRetVal
CDSU_TMR_RV_INV_TMRHASHINSERT	include/cdsutimer.h	/^	CDSU_TMR_RV_INV_TMRHASHINSERT$/;"	e	enum:CdSuTmrRetVal
CDSU_TMR_RV_INV_TMRID	include/cdsutimer.h	/^	CDSU_TMR_RV_INV_TMRID, 		\/\/ Invalid Timer Id.$/;"	e	enum:CdSuTmrRetVal
CDSU_TMR_RV_INV_TMRREPTYPE	include/cdsutimer.h	/^	CDSU_TMR_RV_INV_TMRREPTYPE,	\/\/ Invalid TimeOut Rep. Type.$/;"	e	enum:CdSuTmrRetVal
CDSU_TMR_RV_INV_TMRTYPE	include/cdsutimer.h	/^	CDSU_TMR_RV_INV_TMRTYPE,	\/\/ Invalid Timer type$/;"	e	enum:CdSuTmrRetVal
CDSU_TMR_RV_INV_TMRWHEELDEL	include/cdsutimer.h	/^	CDSU_TMR_RV_INV_TMRWHEELDEL,	\/\/ Invalid Timer Wheel Delete.$/;"	e	enum:CdSuTmrRetVal
CDSU_TMR_RV_SUCCESS	include/cdsutimer.h	/^	CDSU_TMR_RV_SUCCESS = 0,	\/\/ Success.$/;"	e	enum:CdSuTmrRetVal
CDSU_TMR_TRT_CALLBACK	include/cdsutimer.h	/^	CDSU_TMR_TRT_CALLBACK = 1,	\/\/ Invoke call back function on timeout.$/;"	e	enum:CdSuTimeoutReportType
CDSU_TMR_TRT_INVALID	include/cdsutimer.h	/^	CDSU_TMR_TRT_INVALID$/;"	e	enum:CdSuTimeoutReportType
CDSU_TMR_TRT_MESSAGE	include/cdsutimer.h	/^	CDSU_TMR_TRT_MESSAGE,		\/\/ Mail a message on timeout.$/;"	e	enum:CdSuTimeoutReportType
CDSU_TMR_TT_CYCLIC	include/cdsutimer.h	/^	CDSU_TMR_TT_CYCLIC,$/;"	e	enum:CdSuTimerType
CDSU_TMR_TT_INVALID	include/cdsutimer.h	/^	CDSU_TMR_TT_INVALID$/;"	e	enum:CdSuTimerType
CDSU_TMR_TT_TRIGGER_ONCE	include/cdsutimer.h	/^	CDSU_TMR_TT_TRIGGER_ONCE = 1,$/;"	e	enum:CdSuTimerType
CDSU_TMR_TU_HOUR	include/cdsutimer.h	/^        CDSU_TMR_TU_HOUR,           \/\/ 60 minutes$/;"	e	enum:CdSuTimeUnits
CDSU_TMR_TU_HUNDREDMS	include/cdsutimer.h	/^        CDSU_TMR_TU_HUNDREDMS,      \/\/ 100ms$/;"	e	enum:CdSuTimeUnits
CDSU_TMR_TU_INVALID	include/cdsutimer.h	/^	CDSU_TMR_TU_INVALID$/;"	e	enum:CdSuTimeUnits
CDSU_TMR_TU_MINUTE	include/cdsutimer.h	/^        CDSU_TMR_TU_MINUTE,         \/\/ 60s$/;"	e	enum:CdSuTimeUnits
CDSU_TMR_TU_SECOND	include/cdsutimer.h	/^        CDSU_TMR_TU_SECOND,         \/\/ 1s$/;"	e	enum:CdSuTimeUnits
CDSU_TMR_TU_TENMS	include/cdsutimer.h	/^        CDSU_TMR_TU_TENMS = 1,      \/\/ 10ms $/;"	e	enum:CdSuTimeUnits
CDSU_TRACE	include/cdsutrace.h	27;"	d
CDSU_TRACE	include/cdsutrace.h	36;"	d
CDSU_TRACE1	include/cdsutrace.h	28;"	d
CDSU_TRACE1	include/cdsutrace.h	37;"	d
CDSU_TRACE2	include/cdsutrace.h	29;"	d
CDSU_TRACE2	include/cdsutrace.h	38;"	d
CDSU_TRACE3	include/cdsutrace.h	30;"	d
CDSU_TRACE3	include/cdsutrace.h	39;"	d
CDSU_TRACE4	include/cdsutrace.h	31;"	d
CDSU_TRACE4	include/cdsutrace.h	40;"	d
CDSU_TRACE5	include/cdsutrace.h	32;"	d
CDSU_TRACE5	include/cdsutrace.h	41;"	d
CDSU_TRACE_H_	include/cdsutrace.h	2;"	d
CDSU_UDP_LISTEN_PORT_NO	src/msgdistr/cdsumd.h	/^	CDSU_UDP_LISTEN_PORT_NO = 8001$/;"	e	enum:__anon4
CDSU_UDP_TESTER1_LPN	test/bukmsgthrd.cpp	22;"	d	file:
CDSU_UDP_TESTER1_LPN	test/bukmsgthrd2.cpp	23;"	d	file:
CDSU_UDP_TESTER1_LPN	test/msgdistr-test.cpp	34;"	d	file:
CDSU_UDP_TESTER2_LPN	test/msgdistr2-test.cpp	30;"	d	file:
CDSU_UTILTYPES_H	include/cdsuutiltypes-c.h	2;"	d
CDSU_UTILTYPES_H	include/cdsuutiltypes.h	2;"	d
CDSU_UTIL_LIB	src/Makefile	/^CDSU_UTIL_LIB = libcdsuutil.a$/;"	m
CDSU_UTIL_MISC_LIB	src/misc/Makefile	/^CDSU_UTIL_MISC_LIB=libcdsumisc.a$/;"	m
CDSU_UTIL_MISC_OBJ_FILES	src/misc/Makefile	/^CDSU_UTIL_MISC_OBJ_FILES = $(CDSU_UTIL_MISC_SRC_FILES:.cpp=.o)$/;"	m
CDSU_UTIL_MISC_SRC_FILES	src/misc/Makefile	/^CDSU_UTIL_MISC_SRC_FILES = cdsutrace.cpp \\$/;"	m
CDSU_UTIL_MSGDISTR_LIB	src/msgdistr/Makefile	/^CDSU_UTIL_MSGDISTR_LIB=libcdsumd.a$/;"	m
CDSU_UTIL_MSGDISTR_OBJ_FILES	src/msgdistr/Makefile	/^CDSU_UTIL_MSGDISTR_OBJ_FILES = $(CDSU_UTIL_MSGDISTR_SRC_FILES:.cpp=.o)$/;"	m
CDSU_UTIL_MSGDISTR_SRC_FILES	src/msgdistr/Makefile	/^CDSU_UTIL_MSGDISTR_SRC_FILES = cdsumdapi.cpp \\$/;"	m
CDSU_UTIL_NHTCP_LIB	src/tcpnh/Makefile	/^CDSU_UTIL_NHTCP_LIB=libcdsunhtcp.a$/;"	m
CDSU_UTIL_NHTCP_LIB	src/udpnh/Makefile	/^CDSU_UTIL_NHTCP_LIB=libcdsunhudp.a$/;"	m
CDSU_UTIL_NHTCP_OBJ_FILES	src/tcpnh/Makefile	/^CDSU_UTIL_NHTCP_OBJ_FILES = $(CDSU_UTIL_NHTCP_SRC_FILES:.cpp=.o)$/;"	m
CDSU_UTIL_NHTCP_SRC_FILES	src/tcpnh/Makefile	/^CDSU_UTIL_NHTCP_SRC_FILES = cdsunhtcpinstmgr.cpp \\$/;"	m
CDSU_UTIL_NHUDP_OBJ_FILES	src/udpnh/Makefile	/^CDSU_UTIL_NHUDP_OBJ_FILES = $(CDSU_UTIL_NHUDP_SRC_FILES:.cpp=.o)$/;"	m
CDSU_UTIL_NHUDP_SRC_FILES	src/udpnh/Makefile	/^CDSU_UTIL_NHUDP_SRC_FILES = cdsunhudpapiparam.cpp \\$/;"	m
CDSU_UTIL_SUBDIR_LIB_FILES	src/Makefile	/^CDSU_UTIL_SUBDIR_LIB_FILES =  $(MISCLIB)\\$/;"	m
CDSU_UTIL_TEST_OBJ	test/Makefile	/^CDSU_UTIL_TEST_OBJ = $(CDSU_UTIL_TEST_SRC:.cpp=.o)$/;"	m
CDSU_UTIL_TEST_SRC	test/Makefile	/^CDSU_UTIL_TEST_SRC = thread-test.cpp \\$/;"	m
CDSU_UTIL_TEST_SRC_C	test/Makefile	/^CDSU_UTIL_TEST_SRC_C = utiltypes-test-c.c$/;"	m
CDSU_UTIL_TIMER_LIB	src/timer/Makefile	/^CDSU_UTIL_TIMER_LIB=libcdsutimer.a$/;"	m
CDSU_UTIL_TIMER_OBJ_FILES	src/timer/Makefile	/^CDSU_UTIL_TIMER_OBJ_FILES = $(CDSU_UTIL_TIMER_SRC_FILES:.cpp=.o)$/;"	m
CDSU_UTIL_TIMER_SRC_FILES	src/timer/Makefile	/^CDSU_UTIL_TIMER_SRC_FILES = cdsukeyallocator.cpp \\$/;"	m
CDTEST_END_NUM	test/tcpnh/basictest/testmenu.h	13;"	d
CDTEST_END_NUM	test/tcpnh/featuretest/testmenu.h	13;"	d
CDTEST_END_NUM	test/udpnh/basic-test/testmenu.h	13;"	d
CDTEST_END_NUM	test/udpnh/load-testing/testmenu.h	13;"	d
CDTEST_SERVER_IPADDR	test/tcpnh/basictest/testclient.cpp	19;"	d	file:
CDTEST_SERVER_IPADDR	test/tcpnh/featuretest/testclient.cpp	19;"	d	file:
CDTEST_SERVER_IPADDR	test/udpnh/basic-test/testclient.cpp	19;"	d	file:
CDTEST_SERVER_IPADDR	test/udpnh/load-testing/testclient.cpp	19;"	d	file:
CDTEST_SOCK_PORT	test/tcpnh/basictest/testmenu.h	14;"	d
CDTEST_SOCK_PORT	test/tcpnh/featuretest/testmenu.h	14;"	d
CDTEST_SOCK_PORT	test/udpnh/basic-test/testmenu.h	14;"	d
CDTEST_SOCK_PORT	test/udpnh/load-testing/testmenu.h	14;"	d
CD_APPLICATIONID_TYPE_INVALID	include/cdsuutiltypes-c.h	/^	CD_APPLICATIONID_TYPE_INVALID$/;"	e	enum:MgcApplicationType
CD_APPLICATIONID_TYPE_INVALID	include/cdsuutiltypes.h	/^	CD_APPLICATIONID_TYPE_INVALID$/;"	e	enum:MgcApplicationType
CD_APPLICATION_TYPE_MGC	include/cdsuutiltypes-c.h	/^	CD_APPLICATION_TYPE_MGC = 1,$/;"	e	enum:MgcApplicationType
CD_APPLICATION_TYPE_MGC	include/cdsuutiltypes.h	/^	CD_APPLICATION_TYPE_MGC = 1,$/;"	e	enum:MgcApplicationType
CHOICE	test/timer/timerListTest.cpp	/^enum CHOICE$/;"	g	file:
CHOICE_THRU_SOCK	test/timer/timerFuncTest.cpp	42;"	d	file:
CHOICE_THRU_SOCK	test/timer/timerListTest.cpp	44;"	d	file:
CIA_NUM_ATTEMPTS	src/tcpnh/cdsunhtcpdb.h	/^			CIA_NUM_ATTEMPTS = 10$/;"	e	enum:CdSuNhTcpDb::NhTcpConnIdAllocator::__anon11
CLIENT_OBJS	test/tcpnh/mp3Streamer/Makefile	/^CLIENT_OBJS = $(SRC_FILES:.cpp=.o)$/;"	m
CLIENT_OBJS	test/tcpnh/mp3Streamer/Makefile	/^CLIENT_OBJS = mp3StreamerClient.cpp$/;"	m
CYCLIC_TIMER	test/timer/timerListTest.cpp	/^	CYCLIC_TIMER$/;"	e	enum:CHOICE	file:
CallBackFunction	test/timer/timerBasic.cpp	/^void CallBackFunction (CdSuTimeout & tempTimeOut1)$/;"	f
CallBackFunction	test/timer/timerCascade.cpp	/^void CallBackFunction (CdSuTimeout & tempTimeOut1)$/;"	f
CallBackFunction	test/timer/timerFuncTest.cpp	/^void CallBackFunction (CdSuTimeout & tempTimeOut1)$/;"	f
CallBackFunction	test/timer/timerListTest.cpp	/^void CallBackFunction (CdSuTimeout & tempTimeOut1)$/;"	f
CallBackFunction	test/timer/timerPerfStartTest.cpp	/^void CallBackFunction (CdSuTimeout & tempTimeOut1)$/;"	f
CallBackFunction	test/timer/timerPerfStopTest.cpp	/^void CallBackFunction (CdSuTimeout & tempTimeOut1)$/;"	f
CdAppSrvcHlrId	include/cdsuutiltypes-c.h	/^typedef struct CdAppSrvcHlrId$/;"	s
CdAppSrvcHlrId	include/cdsuutiltypes-c.h	/^} CdAppSrvcHlrId; \/\/ __attribute__ ((packed)) appSrvcHlrId;$/;"	t	typeref:struct:CdAppSrvcHlrId
CdHardwareUnitId	include/cdsuutiltypes-c.h	/^typedef struct  CdHardwareUnitId$/;"	s
CdHardwareUnitId	include/cdsuutiltypes-c.h	/^} CdHardwareUnitId;$/;"	t	typeref:struct:CdHardwareUnitId
CdHardwareUnitId	include/cdsuutiltypes.h	/^struct  CdHardwareUnitId$/;"	s
CdMessage	include/cdsuutiltypes-c.h	/^typedef struct CdMessage$/;"	s
CdMessage	include/cdsuutiltypes-c.h	/^} CdMessage;$/;"	t	typeref:struct:CdMessage
CdMessage	include/cdsuutiltypes.h	/^struct CdMessage$/;"	s
CdMessageHdr	include/cdsuutiltypes-c.h	/^typedef struct CdMessageHdr$/;"	s
CdMessageHdr	include/cdsuutiltypes-c.h	/^} CdMessageHdr;$/;"	t	typeref:struct:CdMessageHdr
CdMessageHdr	include/cdsuutiltypes.h	/^struct CdMessageHdr$/;"	s
CdMessageHeader	include/cdsusanitymsgs.h	/^struct CdMessageHeader$/;"	s
CdModuleId	include/cdsuutiltypes-c.h	/^typedef struct CdModuleId$/;"	s
CdModuleId	include/cdsuutiltypes-c.h	/^} CdModuleId; \/\/ __attribute__ ((packed));$/;"	t	typeref:struct:CdModuleId
CdModuleId	include/cdsuutiltypes.h	/^struct CdModuleId$/;"	s
CdPtrFunc	test/tcpnh/basictest/testmenu.h	/^typedef void (*CdPtrFunc) ();$/;"	t
CdPtrFunc	test/tcpnh/featuretest/testmenu.h	/^typedef void (*CdPtrFunc) ();$/;"	t
CdPtrFunc	test/udpnh/basic-test/testmenu.h	/^typedef void (*CdPtrFunc) ();$/;"	t
CdPtrFunc	test/udpnh/load-testing/testmenu.h	/^typedef void (*CdPtrFunc) ();$/;"	t
CdServiceHandlerId	include/cdsuutiltypes-c.h	/^typedef struct CdServiceHandlerId$/;"	s
CdServiceHandlerId	include/cdsuutiltypes-c.h	/^} CdServiceHandlerId; $/;"	t	typeref:struct:CdServiceHandlerId
CdServiceHandlerId	include/cdsuutiltypes.h	/^struct CdServiceHandlerId$/;"	s
CdSuActorId	src/tcpnh/cdsunhtcptypes.h	/^typedef CdModuleId CdSuActorId;$/;"	t
CdSuActorId	src/udpnh/cdsunhudptypes.h	/^typedef CdModuleId CdSuActorId; 	\/\/ Each Module Has Actor ID.$/;"	t
CdSuCharHash	include/cdsucharhash.h	/^CdSuCharHash<ValType>::CdSuCharHash (CdSuCharHash::TableSize numBuckets,$/;"	f	class:CdSuCharHash
CdSuCharHash	include/cdsucharhash.h	/^CdSuCharHash<ValType>::CdSuCharHash (CdSuCharHash<ValType>& charHash)$/;"	f	class:CdSuCharHash
CdSuCharHash	include/cdsucharhash.h	/^class CdSuCharHash$/;"	c
CdSuCounter	test/timer/cdsu_counter.h	/^CdSuCounter::CdSuCounter()$/;"	f	class:CdSuCounter
CdSuCounter	test/timer/cdsu_counter.h	/^class CdSuCounter$/;"	c
CdSuIntHash	include/cdsuinthash.h	/^CdSuIntHash<ValType>::CdSuIntHash (CdSuIntHash::TableSize numBuckets)$/;"	f	class:CdSuIntHash
CdSuIntHash	include/cdsuinthash.h	/^CdSuIntHash<ValType>::CdSuIntHash (CdSuIntHash<ValType>& intHash)$/;"	f	class:CdSuIntHash
CdSuIntHash	include/cdsuinthash.h	/^class CdSuIntHash$/;"	c
CdSuIntraCardMsg	test/msgdistr-test.h	/^struct CdSuIntraCardMsg : public CdMessage$/;"	s
CdSuIpv4Addr	src/tcpnh/cdsunhtcptypes.h	/^typedef Uint32 CdSuIpv4Addr;$/;"	t
CdSuIpv4Addr	src/udpnh/cdsunhudptypes.h	/^typedef Uint32 CdSuIpv4Addr;		\/\/ Ipv4 Address $/;"	t
CdSuIpv4TcpPortNo	src/tcpnh/cdsunhtcptypes.h	/^typedef Uint16 CdSuIpv4TcpPortNo;$/;"	t
CdSuIpv4UdpPortNo	src/udpnh/cdsunhudptypes.h	/^typedef Uint16 CdSuIpv4UdpPortNo;	\/\/ Udp Port number;$/;"	t
CdSuKeyAllocator	src/timer/cdsukeyallocator.cpp	/^CdSuKeyAllocator::CdSuKeyAllocator()$/;"	f	class:CdSuKeyAllocator
CdSuKeyAllocator	src/timer/cdsukeyallocator.h	/^class CdSuKeyAllocator$/;"	c
CdSuList	include/cdsulist.h	/^CdSuList<ValType>::CdSuList () : count (0) $/;"	f	class:CdSuList
CdSuList	include/cdsulist.h	/^CdSuList<ValType>::CdSuList (CdSuList<ValType>& list): count (0)$/;"	f	class:CdSuList
CdSuList	include/cdsulist.h	/^class CdSuList$/;"	c
CdSuMdInitParam	include/cdsumdapi.h	/^struct CdSuMdInitParam$/;"	s
CdSuMdIpcpInfo	include/cdsumdapi.h	/^struct CdSuMdIpcpInfo$/;"	s
CdSuMdIpcpMech	include/cdsumdapi.h	/^enum CdSuMdIpcpMech$/;"	g
CdSuMdModuleId	src/msgdistr/cdsunhudpglobals.h	/^enum CdSuMdModuleId$/;"	g
CdSuMdUdpNhDelMsg	src/msgdistr/cdsunhudpglobals.h	/^	CdSuMdUdpNhDelMsg (const CdModuleId dest, const CdModuleId src)$/;"	f	struct:CdSuMdUdpNhDelMsg
CdSuMdUdpNhDelMsg	src/msgdistr/cdsunhudpglobals.h	/^struct CdSuMdUdpNhDelMsg : CdMessage $/;"	s
CdSuMdUdpNhEntity	src/msgdistr/cdsunhudpglobals.h	/^enum CdSuMdUdpNhEntity$/;"	g
CdSuMdUdpNhInitParam	src/msgdistr/cdsunhudpglobals.h	/^struct CdSuMdUdpNhInitParam$/;"	s
CdSuMdUdpNhOpcodes	src/msgdistr/cdsunhudpglobals.h	/^enum CdSuMdUdpNhOpcodes$/;"	g
CdSuMdUdpNhTxBufMsg	src/msgdistr/cdsunhudpglobals.h	/^	CdSuMdUdpNhTxBufMsg (const CdModuleId dst, const CdModuleId src, char* buf, Uint16 len, Uint32 ia, Uint16 pn)$/;"	f	struct:CdSuMdUdpNhTxBufMsg
CdSuMdUdpNhTxBufMsg	src/msgdistr/cdsunhudpglobals.h	/^struct CdSuMdUdpNhTxBufMsg: CdMessage $/;"	s
CdSuMdUdpPortInfo	include/cdsumdapi.h	/^struct CdSuMdUdpPortInfo$/;"	s
CdSuMsgDistributor	src/msgdistr/cdsumd.cpp	/^CdSuMsgDistributor::CdSuMsgDistributor (const CdSuMdInitParam& param)$/;"	f	class:CdSuMsgDistributor
CdSuMsgDistributor	src/msgdistr/cdsumd.h	/^class CdSuMsgDistributor$/;"	c
CdSuMultiByteHash	include/cdsumbhash.h	/^CdSuMultiByteHash<ValType>::CdSuMultiByteHash (CdSuMultiByteHash::TableSize numBuckets,$/;"	f	class:CdSuMultiByteHash
CdSuMultiByteHash	include/cdsumbhash.h	/^CdSuMultiByteHash<ValType>::CdSuMultiByteHash (CdSuMultiByteHash<ValType>& mbHash)$/;"	f	class:CdSuMultiByteHash
CdSuMultiByteHash	include/cdsumbhash.h	/^class CdSuMultiByteHash$/;"	c
CdSuNhTcp	src/tcpnh/cdsunhtcp.cpp	/^CdSuNhTcp::CdSuNhTcp (CdSuNhTcpDb* nhTcpDb)$/;"	f	class:CdSuNhTcp
CdSuNhTcp	src/tcpnh/cdsunhtcp.h	/^class CdSuNhTcp : public CdSuThread$/;"	c
CdSuNhTcpApiRetType	src/tcpnh/cdsunhtcptypes.h	/^enum CdSuNhTcpApiRetType$/;"	g
CdSuNhTcpCloseConReason	src/tcpnh/cdsunhtcptypes.h	/^enum CdSuNhTcpCloseConReason$/;"	g
CdSuNhTcpConnId	src/tcpnh/cdsunhtcptypes.h	/^typedef Uint32 CdSuNhTcpConnId;$/;"	t
CdSuNhTcpConnInfo	src/tcpnh/cdsunhtcp.h	/^struct CdSuNhTcpConnInfo$/;"	s
CdSuNhTcpConnKey	src/tcpnh/cdsunhtcpapiparam.h	/^struct CdSuNhTcpConnKey$/;"	s
CdSuNhTcpCtrType	src/tcpnh/cdsunhtcptypes.h	/^enum CdSuNhTcpCtrType$/;"	g
CdSuNhTcpDb	src/tcpnh/cdsunhtcpdb.cpp	/^CdSuNhTcpDb::CdSuNhTcpDb (const CdSuNhTcpMiInitParam& nhInitParam, CdSuNhTcpInstId nhId)$/;"	f	class:CdSuNhTcpDb
CdSuNhTcpDb	src/tcpnh/cdsunhtcpdb.h	/^class CdSuNhTcpDb$/;"	c
CdSuNhTcpEventHlr	src/tcpnh/cdsunhtcptypes.h	/^typedef void (*CdSuNhTcpEventHlr) (void*);$/;"	t
CdSuNhTcpFailCode	src/tcpnh/cdsunhtcptypes.h	/^enum CdSuNhTcpFailCode$/;"	g
CdSuNhTcpHandle	src/tcpnh/cdsunhtcptypes.h	/^typedef int CdSuNhTcpHandle;		$/;"	t
CdSuNhTcpInstId	src/tcpnh/cdsunhtcptypes.h	/^typedef Uint32 CdSuNhTcpInstId;		\/\/ TCP Network Handler Instance Id.$/;"	t
CdSuNhTcpInstMgr	src/tcpnh/cdsunhtcpinstmgr.cpp	/^CdSuNhTcpInstMgr::CdSuNhTcpInstMgr ()$/;"	f	class:CdSuNhTcpInstMgr
CdSuNhTcpInstMgr	src/tcpnh/cdsunhtcpinstmgr.h	/^class CdSuNhTcpInstMgr$/;"	c
CdSuNhTcpLstnId	src/tcpnh/cdsunhtcptypes.h	/^typedef Uint32 CdSuNhTcpLstnId;$/;"	t
CdSuNhTcpLstnInfo	src/tcpnh/cdsunhtcp.h	/^struct CdSuNhTcpLstnInfo$/;"	s
CdSuNhTcpLstnKey	src/tcpnh/cdsunhtcpapiparam.h	/^struct CdSuNhTcpLstnKey$/;"	s
CdSuNhTcpLstnQSize	src/tcpnh/cdsunhtcptypes.h	/^enum CdSuNhTcpLstnQSize$/;"	g
CdSuNhTcpMiCfgReqMsg	src/tcpnh/cdsunhtcpmsg.h	/^struct CdSuNhTcpMiCfgReqMsg : public CdMessage$/;"	s
CdSuNhTcpMiCfgReqParam	src/tcpnh/cdsunhtcpapiparam.h	/^struct CdSuNhTcpMiCfgReqParam$/;"	s
CdSuNhTcpMiCfgRspEvent	src/tcpnh/cdsunhtcpapiparam.h	/^struct CdSuNhTcpMiCfgRspEvent: public CdSuNhTcpMiEvent$/;"	s
CdSuNhTcpMiCfgRspMsg	src/tcpnh/cdsunhtcpmsg.h	/^struct CdSuNhTcpMiCfgRspMsg : public CdMessage$/;"	s
CdSuNhTcpMiCtrlReqMsg	src/tcpnh/cdsunhtcpmsg.h	/^struct CdSuNhTcpMiCtrlReqMsg : public CdMessage$/;"	s
CdSuNhTcpMiCtrlReqParam	src/tcpnh/cdsunhtcpapiparam.h	/^struct CdSuNhTcpMiCtrlReqParam$/;"	s
CdSuNhTcpMiCtrlRspEvent	src/tcpnh/cdsunhtcpapiparam.h	/^struct CdSuNhTcpMiCtrlRspEvent: public CdSuNhTcpMiEvent $/;"	s
CdSuNhTcpMiCtrlRspMsg	src/tcpnh/cdsunhtcpmsg.h	/^struct CdSuNhTcpMiCtrlRspMsg : public CdMessage$/;"	s
CdSuNhTcpMiDelNhParam	src/tcpnh/cdsunhtcpapiparam.h	/^struct CdSuNhTcpMiDelNhParam$/;"	s
CdSuNhTcpMiDelNhReqMsg	src/tcpnh/cdsunhtcpmsg.h	/^struct CdSuNhTcpMiDelNhReqMsg : public CdMessage$/;"	s
CdSuNhTcpMiDelNhRspEvent	src/tcpnh/cdsunhtcpapiparam.h	/^struct CdSuNhTcpMiDelNhRspEvent: public CdSuNhTcpMiEvent$/;"	s
CdSuNhTcpMiDelNhRspMsg	src/tcpnh/cdsunhtcpmsg.h	/^struct CdSuNhTcpMiDelNhRspMsg : public CdMessage$/;"	s
CdSuNhTcpMiEvent	src/tcpnh/cdsunhtcpapiparam.h	/^struct CdSuNhTcpMiEvent$/;"	s
CdSuNhTcpMiInitParam	src/tcpnh/cdsunhtcpapiparam.h	/^struct CdSuNhTcpMiInitParam$/;"	s
CdSuNhTcpMiInitReqMsg	src/tcpnh/cdsunhtcpmsg.h	/^struct CdSuNhTcpMiInitReqMsg : public CdMessage$/;"	s
CdSuNhTcpMiInitRspEvent	src/tcpnh/cdsunhtcpapiparam.h	/^struct CdSuNhTcpMiInitRspEvent: public CdSuNhTcpMiEvent$/;"	s
CdSuNhTcpMiInitRspMsg	src/tcpnh/cdsunhtcpmsg.h	/^struct CdSuNhTcpMiInitRspMsg : public CdMessage$/;"	s
CdSuNhTcpMiStatusReqMsg	src/tcpnh/cdsunhtcpmsg.h	/^struct CdSuNhTcpMiStatusReqMsg : public CdMessage$/;"	s
CdSuNhTcpMiStatusReqParam	src/tcpnh/cdsunhtcpapiparam.h	/^struct CdSuNhTcpMiStatusReqParam$/;"	s
CdSuNhTcpMiStatusRspEvent	src/tcpnh/cdsunhtcpapiparam.h	/^struct CdSuNhTcpMiStatusRspEvent: public CdSuNhTcpMiEvent$/;"	s
CdSuNhTcpMiStatusRspMsg	src/tcpnh/cdsunhtcpmsg.h	/^struct CdSuNhTcpMiStatusRspMsg : public CdMessage$/;"	s
CdSuNhTcpMiStsReqMsg	src/tcpnh/cdsunhtcpmsg.h	/^struct CdSuNhTcpMiStsReqMsg : public CdMessage$/;"	s
CdSuNhTcpMiStsReqParam	src/tcpnh/cdsunhtcpapiparam.h	/^struct CdSuNhTcpMiStsReqParam $/;"	s
CdSuNhTcpMiStsRspEvent	src/tcpnh/cdsunhtcpapiparam.h	/^struct CdSuNhTcpMiStsRspEvent: public CdSuNhTcpMiEvent$/;"	s
CdSuNhTcpMiStsRspMsg	src/tcpnh/cdsunhtcpmsg.h	/^struct CdSuNhTcpMiStsRspMsg : public CdMessage$/;"	s
CdSuNhTcpMiTerminateParam	src/tcpnh/cdsunhtcpapiparam.h	/^struct CdSuNhTcpMiTerminateParam$/;"	s
CdSuNhTcpMiUStaIndEvent	src/tcpnh/cdsunhtcpapiparam.h	/^struct CdSuNhTcpMiUStaIndEvent: public CdSuNhTcpMiEvent$/;"	s
CdSuNhTcpMiUStaIndMsg	src/tcpnh/cdsunhtcpmsg.h	/^struct CdSuNhTcpMiUStaIndMsg : public CdMessage$/;"	s
CdSuNhTcpOpcode	src/tcpnh/cdsunhtcptypes.h	/^enum CdSuNhTcpOpcode$/;"	g
CdSuNhTcpRspCode	src/tcpnh/cdsunhtcptypes.h	/^enum CdSuNhTcpRspCode$/;"	g
CdSuNhTcpState	src/tcpnh/cdsunhtcptypes.h	/^enum CdSuNhTcpState$/;"	g
CdSuNhTcpStatisticsPkg	src/tcpnh/cdsunhtcpstatspkg.h	/^	CdSuNhTcpStatisticsPkg ()$/;"	f	class:CdSuNhTcpStatisticsPkg
CdSuNhTcpStatisticsPkg	src/tcpnh/cdsunhtcpstatspkg.h	/^class CdSuNhTcpStatisticsPkg$/;"	c
CdSuNhTcpSubOpcode	src/tcpnh/cdsunhtcptypes.h	/^enum CdSuNhTcpSubOpcode$/;"	g
CdSuNhTcpUiAddLstnReqMsg	src/tcpnh/cdsunhtcpmsg.h	/^struct CdSuNhTcpUiAddLstnReqMsg : public CdMessage$/;"	s
CdSuNhTcpUiAddLstnReqParam	src/tcpnh/cdsunhtcpapiparam.h	/^struct CdSuNhTcpUiAddLstnReqParam$/;"	s
CdSuNhTcpUiAddLstnRspEvent	src/tcpnh/cdsunhtcpapiparam.h	/^struct CdSuNhTcpUiAddLstnRspEvent : public CdSuNhTcpUiLstnEvent $/;"	s
CdSuNhTcpUiAddLstnRspMsg	src/tcpnh/cdsunhtcpmsg.h	/^struct CdSuNhTcpUiAddLstnRspMsg : public CdMessage$/;"	s
CdSuNhTcpUiCloseConIndEvent	src/tcpnh/cdsunhtcpapiparam.h	/^struct  CdSuNhTcpUiCloseConIndEvent : public CdSuNhTcpUiConnEvent$/;"	s
CdSuNhTcpUiCloseConIndMsg	src/tcpnh/cdsunhtcpmsg.h	/^struct CdSuNhTcpUiCloseConIndMsg : public CdMessage$/;"	s
CdSuNhTcpUiCloseConReqMsg	src/tcpnh/cdsunhtcpmsg.h	/^struct CdSuNhTcpUiCloseConReqMsg : public CdMessage$/;"	s
CdSuNhTcpUiCloseConReqParam	src/tcpnh/cdsunhtcpapiparam.h	/^struct CdSuNhTcpUiCloseConReqParam$/;"	s
CdSuNhTcpUiCloseConRspEvent	src/tcpnh/cdsunhtcpapiparam.h	/^struct CdSuNhTcpUiCloseConRspEvent : public CdSuNhTcpUiConnEvent$/;"	s
CdSuNhTcpUiCloseConRspMsg	src/tcpnh/cdsunhtcpmsg.h	/^struct CdSuNhTcpUiCloseConRspMsg : public CdMessage$/;"	s
CdSuNhTcpUiConIndEvent	src/tcpnh/cdsunhtcpapiparam.h	/^struct CdSuNhTcpUiConIndEvent : public CdSuNhTcpUiLstnEvent$/;"	s
CdSuNhTcpUiConIndMsg	src/tcpnh/cdsunhtcpmsg.h	/^struct CdSuNhTcpUiConIndMsg : public CdMessage$/;"	s
CdSuNhTcpUiConReqMsg	src/tcpnh/cdsunhtcpmsg.h	/^struct CdSuNhTcpUiConReqMsg : public CdMessage$/;"	s
CdSuNhTcpUiConReqParam	src/tcpnh/cdsunhtcpapiparam.h	/^struct CdSuNhTcpUiConReqParam$/;"	s
CdSuNhTcpUiConRspEvent	src/tcpnh/cdsunhtcpapiparam.h	/^struct CdSuNhTcpUiConRspEvent: public CdSuNhTcpUiConnEvent $/;"	s
CdSuNhTcpUiConRspMsg	src/tcpnh/cdsunhtcpmsg.h	/^struct CdSuNhTcpUiConRspMsg : public CdMessage$/;"	s
CdSuNhTcpUiConnEvent	src/tcpnh/cdsunhtcpapiparam.h	/^struct CdSuNhTcpUiConnEvent$/;"	s
CdSuNhTcpUiDataIndEvent	src/tcpnh/cdsunhtcpapiparam.cpp	/^CdSuNhTcpUiDataIndEvent::CdSuNhTcpUiDataIndEvent ()$/;"	f	class:CdSuNhTcpUiDataIndEvent
CdSuNhTcpUiDataIndEvent	src/tcpnh/cdsunhtcpapiparam.h	/^struct CdSuNhTcpUiDataIndEvent : public CdSuNhTcpUiConnEvent$/;"	s
CdSuNhTcpUiDataIndMsg	src/tcpnh/cdsunhtcpmsg.h	/^struct CdSuNhTcpUiDataIndMsg : public CdMessage$/;"	s
CdSuNhTcpUiDataReqMsg	src/tcpnh/cdsunhtcpmsg.h	/^struct CdSuNhTcpUiDataReqMsg : public CdMessage$/;"	s
CdSuNhTcpUiDataReqParam	src/tcpnh/cdsunhtcpapiparam.cpp	/^CdSuNhTcpUiDataReqParam::CdSuNhTcpUiDataReqParam ()$/;"	f	class:CdSuNhTcpUiDataReqParam
CdSuNhTcpUiDataReqParam	src/tcpnh/cdsunhtcpapiparam.h	/^struct CdSuNhTcpUiDataReqParam$/;"	s
CdSuNhTcpUiDataRspEvent	src/tcpnh/cdsunhtcpapiparam.h	/^struct CdSuNhTcpUiDataRspEvent : public CdSuNhTcpUiConnEvent$/;"	s
CdSuNhTcpUiDataRspMsg	src/tcpnh/cdsunhtcpmsg.h	/^struct CdSuNhTcpUiDataRspMsg : public CdMessage$/;"	s
CdSuNhTcpUiLstnEvent	src/tcpnh/cdsunhtcpapiparam.h	/^struct CdSuNhTcpUiLstnEvent$/;"	s
CdSuNhTcpUiRemLstnReqMsg	src/tcpnh/cdsunhtcpmsg.h	/^struct CdSuNhTcpUiRemLstnReqMsg : public CdMessage$/;"	s
CdSuNhTcpUiRemLstnReqParam	src/tcpnh/cdsunhtcpapiparam.h	/^struct CdSuNhTcpUiRemLstnReqParam$/;"	s
CdSuNhTcpUiRemLstnRspEvent	src/tcpnh/cdsunhtcpapiparam.h	/^struct CdSuNhTcpUiRemLstnRspEvent : public CdSuNhTcpUiLstnEvent$/;"	s
CdSuNhTcpUiRemLstnRspMsg	src/tcpnh/cdsunhtcpmsg.h	/^struct CdSuNhTcpUiRemLstnRspMsg : public CdMessage$/;"	s
CdSuNhUdp	src/udpnh/cdsunhudp.cpp	/^CdSuNhUdp::CdSuNhUdp (CdSuNhUdpDb* nhUdpDb)$/;"	f	class:CdSuNhUdp
CdSuNhUdp	src/udpnh/cdsunhudp.h	/^class CdSuNhUdp : public CdSuThread$/;"	c
CdSuNhUdpApiRetType	src/udpnh/cdsunhudptypes.h	/^enum CdSuNhUdpApiRetType$/;"	g
CdSuNhUdpCtrType	src/udpnh/cdsunhudptypes.h	/^enum CdSuNhUdpCtrType$/;"	g
CdSuNhUdpDb	src/udpnh/cdsunhudpdb.cpp	/^CdSuNhUdpDb::CdSuNhUdpDb (const CdSuNhUdpMiInitParam& nhInitParam,$/;"	f	class:CdSuNhUdpDb
CdSuNhUdpDb	src/udpnh/cdsunhudpdb.h	/^class CdSuNhUdpDb$/;"	c
CdSuNhUdpEventHlr	src/udpnh/cdsunhudptypes.h	/^typedef void (*CdSuNhUdpEventHlr) (void*);$/;"	t
CdSuNhUdpHandle	src/udpnh/cdsunhudp.h	/^	typedef int CdSuNhUdpHandle;$/;"	t	class:CdSuNhUdp
CdSuNhUdpInstId	src/udpnh/cdsunhudptypes.h	/^typedef Uint32 CdSuNhUdpInstId;$/;"	t
CdSuNhUdpInstMgr	src/udpnh/cdsunhudpinstmgr.cpp	/^CdSuNhUdpInstMgr::CdSuNhUdpInstMgr ()$/;"	f	class:CdSuNhUdpInstMgr
CdSuNhUdpInstMgr	src/udpnh/cdsunhudpinstmgr.h	/^class CdSuNhUdpInstMgr$/;"	c
CdSuNhUdpMiCfgReqMsg	src/udpnh/cdsunhudpmsg.h	/^struct CdSuNhUdpMiCfgReqMsg : public CdMessage$/;"	s
CdSuNhUdpMiCfgReqParam	src/udpnh/cdsunhudpapiparam.h	/^struct CdSuNhUdpMiCfgReqParam$/;"	s
CdSuNhUdpMiCfgRspEvent	src/udpnh/cdsunhudpapiparam.h	/^struct CdSuNhUdpMiCfgRspEvent: public CdSuNhUdpMiEvent$/;"	s
CdSuNhUdpMiCfgRspMsg	src/udpnh/cdsunhudpmsg.h	/^struct CdSuNhUdpMiCfgRspMsg : public CdMessage$/;"	s
CdSuNhUdpMiCtrlReqMsg	src/udpnh/cdsunhudpmsg.h	/^struct CdSuNhUdpMiCtrlReqMsg : public CdMessage$/;"	s
CdSuNhUdpMiCtrlReqParam	src/udpnh/cdsunhudpapiparam.h	/^struct CdSuNhUdpMiCtrlReqParam$/;"	s
CdSuNhUdpMiCtrlRspEvent	src/udpnh/cdsunhudpapiparam.h	/^struct CdSuNhUdpMiCtrlRspEvent: public CdSuNhUdpMiEvent $/;"	s
CdSuNhUdpMiCtrlRspMsg	src/udpnh/cdsunhudpmsg.h	/^struct CdSuNhUdpMiCtrlRspMsg : public CdMessage$/;"	s
CdSuNhUdpMiDelNhParam	src/udpnh/cdsunhudpapiparam.h	/^struct CdSuNhUdpMiDelNhParam$/;"	s
CdSuNhUdpMiDelNhReqMsg	src/udpnh/cdsunhudpmsg.h	/^struct CdSuNhUdpMiDelNhReqMsg : public CdMessage$/;"	s
CdSuNhUdpMiDelNhRspEvent	src/udpnh/cdsunhudpapiparam.h	/^struct CdSuNhUdpMiDelNhRspEvent: public CdSuNhUdpMiEvent$/;"	s
CdSuNhUdpMiDelNhRspMsg	src/udpnh/cdsunhudpmsg.h	/^struct CdSuNhUdpMiDelNhRspMsg : public CdMessage$/;"	s
CdSuNhUdpMiEvent	src/udpnh/cdsunhudpapiparam.h	/^struct CdSuNhUdpMiEvent$/;"	s
CdSuNhUdpMiInitParam	src/udpnh/cdsunhudpapiparam.cpp	/^CdSuNhUdpMiInitParam:: CdSuNhUdpMiInitParam ()$/;"	f	class:CdSuNhUdpMiInitParam
CdSuNhUdpMiInitParam	src/udpnh/cdsunhudpapiparam.h	/^struct CdSuNhUdpMiInitParam$/;"	s
CdSuNhUdpMiInitRspEvent	src/udpnh/cdsunhudpapiparam.h	/^struct CdSuNhUdpMiInitRspEvent: public CdSuNhUdpMiEvent$/;"	s
CdSuNhUdpMiInitRspMsg	src/udpnh/cdsunhudpmsg.h	/^struct CdSuNhUdpMiInitRspMsg : public CdMessage$/;"	s
CdSuNhUdpMiStatusReqMsg	src/udpnh/cdsunhudpmsg.h	/^struct CdSuNhUdpMiStatusReqMsg : public CdMessage$/;"	s
CdSuNhUdpMiStatusReqParam	src/udpnh/cdsunhudpapiparam.h	/^struct CdSuNhUdpMiStatusReqParam$/;"	s
CdSuNhUdpMiStatusRspEvent	src/udpnh/cdsunhudpapiparam.h	/^struct CdSuNhUdpMiStatusRspEvent: public CdSuNhUdpMiEvent$/;"	s
CdSuNhUdpMiStatusRspMsg	src/udpnh/cdsunhudpmsg.h	/^struct CdSuNhUdpMiStatusRspMsg : public CdMessage$/;"	s
CdSuNhUdpMiStsReqMsg	src/udpnh/cdsunhudpmsg.h	/^struct CdSuNhUdpMiStsReqMsg : public CdMessage$/;"	s
CdSuNhUdpMiStsReqParam	src/udpnh/cdsunhudpapiparam.h	/^struct CdSuNhUdpMiStsReqParam $/;"	s
CdSuNhUdpMiStsRspEvent	src/udpnh/cdsunhudpapiparam.h	/^struct CdSuNhUdpMiStsRspEvent: public CdSuNhUdpMiEvent$/;"	s
CdSuNhUdpMiStsRspMsg	src/udpnh/cdsunhudpmsg.h	/^struct CdSuNhUdpMiStsRspMsg : public CdMessage$/;"	s
CdSuNhUdpMiTerminateParam	src/udpnh/cdsunhudpapiparam.h	/^struct CdSuNhUdpMiTerminateParam$/;"	s
CdSuNhUdpMiUStaIndEvent	src/udpnh/cdsunhudpapiparam.h	/^struct CdSuNhUdpMiUStaIndEvent: public CdSuNhUdpMiEvent$/;"	s
CdSuNhUdpOpcode	src/udpnh/cdsunhudptypes.h	/^enum CdSuNhUdpOpcode$/;"	g
CdSuNhUdpPortId	src/udpnh/cdsunhudptypes.h	/^typedef Uint32 CdSuNhUdpPortId;	$/;"	t
CdSuNhUdpPortInfo	src/udpnh/cdsunhudp.cpp	/^CdSuNhUdp::CdSuNhUdpPortInfo::CdSuNhUdpPortInfo ()$/;"	f	class:CdSuNhUdp::CdSuNhUdpPortInfo
CdSuNhUdpPortInfo	src/udpnh/cdsunhudp.h	/^	struct CdSuNhUdpPortInfo$/;"	s	class:CdSuNhUdp
CdSuNhUdpPortKey	src/udpnh/cdsunhudptypes.h	/^struct CdSuNhUdpPortKey$/;"	s
CdSuNhUdpRspCode	src/udpnh/cdsunhudptypes.h	/^enum CdSuNhUdpRspCode$/;"	g
CdSuNhUdpRspFailCode	src/udpnh/cdsunhudptypes.h	/^enum CdSuNhUdpRspFailCode$/;"	g
CdSuNhUdpState	src/udpnh/cdsunhudptypes.h	/^enum CdSuNhUdpState$/;"	g
CdSuNhUdpStatisticsPkg	src/udpnh/cdsunhudpstatspkg.h	/^	CdSuNhUdpStatisticsPkg ()$/;"	f	class:CdSuNhUdpStatisticsPkg
CdSuNhUdpStatisticsPkg	src/udpnh/cdsunhudpstatspkg.h	/^class CdSuNhUdpStatisticsPkg$/;"	c
CdSuNhUdpSubOpcode	src/udpnh/cdsunhudptypes.h	/^enum CdSuNhUdpSubOpcode$/;"	g
CdSuNhUdpUiAddUdpPortReqMsg	src/udpnh/cdsunhudpmsg.h	/^struct CdSuNhUdpUiAddUdpPortReqMsg : public CdMessage$/;"	s
CdSuNhUdpUiAddUdpPortReqParam	src/udpnh/cdsunhudpapiparam.cpp	/^CdSuNhUdpUiAddUdpPortReqParam::CdSuNhUdpUiAddUdpPortReqParam ()$/;"	f	class:CdSuNhUdpUiAddUdpPortReqParam
CdSuNhUdpUiAddUdpPortReqParam	src/udpnh/cdsunhudpapiparam.h	/^struct CdSuNhUdpUiAddUdpPortReqParam$/;"	s
CdSuNhUdpUiAddUdpPortRspEvent	src/udpnh/cdsunhudpapiparam.h	/^struct CdSuNhUdpUiAddUdpPortRspEvent : public CdSuNhUdpUiEvent$/;"	s
CdSuNhUdpUiAddUdpPortRspMsg	src/udpnh/cdsunhudpmsg.h	/^struct CdSuNhUdpUiAddUdpPortRspMsg : public CdMessage$/;"	s
CdSuNhUdpUiDataIndEvent	src/udpnh/cdsunhudpapiparam.h	/^struct CdSuNhUdpUiDataIndEvent : public CdSuNhUdpUiEvent$/;"	s
CdSuNhUdpUiDataIndMsg	src/udpnh/cdsunhudpmsg.h	/^struct CdSuNhUdpUiDataIndMsg : public CdMessage$/;"	s
CdSuNhUdpUiDataReqMsg	src/udpnh/cdsunhudpmsg.h	/^struct CdSuNhUdpUiDataReqMsg : public CdMessage$/;"	s
CdSuNhUdpUiDataReqParam	src/udpnh/cdsunhudpapiparam.cpp	/^CdSuNhUdpUiDataReqParam::CdSuNhUdpUiDataReqParam ()$/;"	f	class:CdSuNhUdpUiDataReqParam
CdSuNhUdpUiDataReqParam	src/udpnh/cdsunhudpapiparam.h	/^struct CdSuNhUdpUiDataReqParam$/;"	s
CdSuNhUdpUiDataRspEvent	src/udpnh/cdsunhudpapiparam.h	/^struct CdSuNhUdpUiDataRspEvent : public CdSuNhUdpUiEvent$/;"	s
CdSuNhUdpUiDataRspMsg	src/udpnh/cdsunhudpmsg.h	/^struct CdSuNhUdpUiDataRspMsg : public CdMessage$/;"	s
CdSuNhUdpUiEvent	src/udpnh/cdsunhudpapiparam.h	/^struct CdSuNhUdpUiEvent$/;"	s
CdSuNhUdpUiRemUdpPortReqMsg	src/udpnh/cdsunhudpmsg.h	/^struct CdSuNhUdpUiRemUdpPortReqMsg : public CdMessage$/;"	s
CdSuNhUdpUiRemUdpPortReqParam	src/udpnh/cdsunhudpapiparam.cpp	/^CdSuNhUdpUiRemUdpPortReqParam::CdSuNhUdpUiRemUdpPortReqParam ()$/;"	f	class:CdSuNhUdpUiRemUdpPortReqParam
CdSuNhUdpUiRemUdpPortReqParam	src/udpnh/cdsunhudpapiparam.h	/^struct CdSuNhUdpUiRemUdpPortReqParam$/;"	s
CdSuNhUdpUiRemUdpPortRspEvent	src/udpnh/cdsunhudpapiparam.h	/^struct CdSuNhUdpUiRemUdpPortRspEvent : public CdSuNhUdpUiEvent$/;"	s
CdSuNhUdpUiRemUdpPortRspMsg	src/udpnh/cdsunhudpmsg.h	/^struct CdSuNhUdpUiRemUdpPortRspMsg : public CdMessage$/;"	s
CdSuNhUdpUiSendReqMsg	src/udpnh/cdsunhudpmsg.h	/^struct CdSuNhUdpUiSendReqMsg : public CdMessage$/;"	s
CdSuNhUdpUiSendReqParam	src/udpnh/cdsunhudpapiparam.cpp	/^CdSuNhUdpUiSendReqParam::CdSuNhUdpUiSendReqParam ()$/;"	f	class:CdSuNhUdpUiSendReqParam
CdSuNhUdpUiSendReqParam	src/udpnh/cdsunhudpapiparam.h	/^struct CdSuNhUdpUiSendReqParam$/;"	s
CdSuNhUdpUiSendRspEvent	src/udpnh/cdsunhudpapiparam.h	/^struct CdSuNhUdpUiSendRspEvent : public CdSuNhUdpUiEvent$/;"	s
CdSuNhUdpUiSendRspMsg	src/udpnh/cdsunhudpmsg.h	/^struct CdSuNhUdpUiSendRspMsg : public CdMessage$/;"	s
CdSuNwhlrDb	src/msgdistr/cdsunhudpdb.h	/^	CdSuNwhlrDb () $/;"	f	class:CdSuNwhlrDb
CdSuNwhlrDb	src/msgdistr/cdsunhudpdb.h	/^class CdSuNwhlrDb$/;"	c
CdSuQueue	include/cdsuqueue.h	/^CdSuQueue<KeyType>::CdSuQueue (CdSuQueue<KeyType>& queue) $/;"	f	class:CdSuQueue
CdSuQueue	include/cdsuqueue.h	/^CdSuQueue<KeyType>::CdSuQueue (unsigned long maxqsize) : maxsize(maxqsize)$/;"	f	class:CdSuQueue
CdSuQueue	include/cdsuqueue.h	/^class CdSuQueue $/;"	c
CdSuTask	include/cdsutask.h	/^	CdSuTask (){};$/;"	f	class:CdSuTask
CdSuTask	include/cdsutask.h	/^class CdSuTask$/;"	c
CdSuTaskId	include/cdsutask.h	/^typedef Uint16 CdSuTaskId;$/;"	t
CdSuTaskScheduler	include/cdsutaskscheduler.h	/^class CdSuTaskScheduler$/;"	c
CdSuTaskScheduler	src/misc/cdsutaskscheduler.cpp	/^CdSuTaskScheduler::CdSuTaskScheduler (CdSuTsQueue<CdTaskMessage*>* msgQ, $/;"	f	class:CdSuTaskScheduler
CdSuTaskScheduler	src/misc/cdsutaskscheduler.cpp	/^CdSuTaskScheduler::CdSuTaskScheduler (const CdModuleId selfMid,$/;"	f	class:CdSuTaskScheduler
CdSuThread	include/cdsuthread.h	/^class CdSuThread$/;"	c
CdSuThread	src/misc/cdsuthread.cpp	/^CdSuThread::CdSuThread() : threadId (CDSU_THREAD_ID_INVALID)$/;"	f	class:CdSuThread
CdSuTimeCountType	include/cdsutimer.h	/^typedef Uint32 CdSuTimeCountType;$/;"	t
CdSuTimeUnits	include/cdsutimer.h	/^enum CdSuTimeUnits$/;"	g
CdSuTimeout	include/cdsutimer.h	/^struct CdSuTimeout$/;"	s
CdSuTimeoutDestId	include/cdsutimer.h	/^typedef Uint32 CdSuTimeoutDestId;$/;"	t
CdSuTimeoutReportType	include/cdsutimer.h	/^enum CdSuTimeoutReportType$/;"	g
CdSuTimerFields	src/timer/cdsukeyallocator.h	/^enum CdSuTimerFields $/;"	g
CdSuTimerHandler	include/cdsutimer.h	/^class CdSuTimerHandler$/;"	c
CdSuTimerHandler	src/timer/cdsutimer.cpp	/^CdSuTimerHandler::CdSuTimerHandler ()$/;"	f	class:CdSuTimerHandler
CdSuTimerId	include/cdsutimer.h	/^typedef Uint32 CdSuTimerId;$/;"	t
CdSuTimerInfo	include/cdsutimer.h	/^struct CdSuTimerInfo$/;"	s
CdSuTimerMsg	include/cdsutimer.h	/^struct CdSuTimerMsg : public CdMessage$/;"	s
CdSuTimerType	include/cdsutimer.h	/^enum CdSuTimerType$/;"	g
CdSuTimingWheel	src/timer/cdsutimingwheel.cpp	/^CdSuTimingWheel::CdSuTimingWheel (CdSuTimerHandler* th, Uint32 hts)$/;"	f	class:CdSuTimingWheel
CdSuTimingWheel	src/timer/cdsutimingwheel.h	/^class CdSuTimingWheel$/;"	c
CdSuTmrRetVal	include/cdsutimer.h	/^enum CdSuTmrRetVal$/;"	g
CdSuTnode	include/cdsutimer.h	/^struct CdSuTnode$/;"	s
CdSuTnode	src/timer/cdsutimer.cpp	/^CdSuTnode::CdSuTnode (const CdSuTimerInfo& timerInfo, CdSuTimerId timerId, Uint32 tempCount)$/;"	f	class:CdSuTnode
CdSuTrace	include/cdsutrace.h	/^class CdSuTrace$/;"	c
CdSuTsQueue	include/cdsutsqueue.h	/^CdSuTsQueue<KeyType>::CdSuTsQueue (CdSuTsQueue<KeyType>& queue)$/;"	f	class:CdSuTsQueue
CdSuTsQueue	include/cdsutsqueue.h	/^CdSuTsQueue<KeyType>::CdSuTsQueue (unsigned int maxqsize) : maxsize(maxqsize)$/;"	f	class:CdSuTsQueue
CdSuTsQueue	include/cdsutsqueue.h	/^class CdSuTsQueue $/;"	c
CdSuUdpTxptServices	src/msgdistr/cdsunhudptxptsrvc.cpp	/^CdSuUdpTxptServices::CdSuUdpTxptServices ()$/;"	f	class:CdSuUdpTxptServices
CdSuUdpTxptServices	src/msgdistr/cdsunhudptxptsrvc.h	/^class  CdSuUdpTxptServices $/;"	c
CdSuUnixMemoryMonitor	include/cdsuunixmemmon.h	/^	CdSuUnixMemoryMonitor ()$/;"	f	class:CdSuUnixMemoryMonitor
CdSuUnixMemoryMonitor	include/cdsuunixmemmon.h	/^class CdSuUnixMemoryMonitor$/;"	c
CdTaskMessage	include/cdsutask.h	/^struct CdTaskMessage : CdMessage$/;"	s
CdTestCases	test/tcpnh/basictest/testmenu.h	/^struct CdTestCases $/;"	s
CdTestCases	test/tcpnh/featuretest/testmenu.h	/^struct CdTestCases $/;"	s
CdTestCases	test/udpnh/basic-test/testmenu.h	/^struct CdTestCases $/;"	s
CdTestCases	test/udpnh/load-testing/testmenu.h	/^struct CdTestCases $/;"	s
ChannelInfo	test/tcpnh/mp3Streamer/mp3StreamServer.h	/^	ChannelInfo ()$/;"	f	struct:ChannelInfo
ChannelInfo	test/tcpnh/mp3Streamer/mp3StreamServer.h	/^struct ChannelInfo$/;"	s
Class-Diagram	docs/design/mdd/timer/index.html	/^ <h3> <a name="Class-Diagram"><\/a>3.1 Class Diagram:<\/h3>$/;"	a
Constraints	docs/verification/mtp/timer/index.html	/^<h3><a name="Constraints"><\/a>5.2 Constraints<\/h3>$/;"	a
CyclicTimer	test/timer/timerBasic.cpp	/^void* CyclicTimer (void*) $/;"	f
CyclicTimer	test/timer/timerCascade.cpp	/^void* CyclicTimer (void*) $/;"	f
DEFAULT_KEY_LEN	include/cdsucharhash.h	/^		DEFAULT_KEY_LEN = 128			$/;"	e	enum:CdSuCharHash::__anon24
DEFAULT_NO_OF_TASKS	include/cdsutaskscheduler.h	/^		DEFAULT_NO_OF_TASKS = 64 $/;"	e	enum:CdSuTaskScheduler::__anon19
DESTFIXEDPORT	test/udpnh/testing-mul-user-support/tester.cpp	29;"	d	file:
DESTPORT	test/udpnh/basic-test/parameter.h	31;"	d
DESTPORTOFBOTHFIXED	test/udpnh/testing-mul-user-support/tester.cpp	26;"	d	file:
DESTPORTOFLOCALFIXED	test/udpnh/testing-mul-user-support/tester.cpp	28;"	d	file:
DEST_DEFAULT	test/udpnh/basic-test/parameter.h	/^	DEST_DEFAULT$/;"	e	enum:DestPortType
DIF_DEST_PORT	test/udpnh/basic-test/parameter.h	/^	DIF_DEST_PORT,$/;"	e	enum:DestPortType
DIF_LCL_PORT	test/udpnh/basic-test/parameter.h	/^	DIF_LCL_PORT,$/;"	e	enum:LocalPortType
DOREPLY	test/udpnh/basic-test/parameter.h	22;"	d
Decomposition	docs/design/mdd/timer/index.html	/^<h3> <a name="Decomposition"><\/a>3.0 Decomposition Description<\/h3>$/;"	a
Def	docs/verification/mtp/timer/index.html	/^<h3><a name="Def"><\/a>1.3) Definitions, Acronyms and Abbreviations<\/h3>$/;"	a
Definitions	docs/design/mdd/timer/index.html	/^<p><a name="Definitions"><\/a><b>2.2 Definitions<\/b> <\/p>$/;"	a
Definitions	docs/reqs/srs/timer/index.html	/^<h3><a name="Definitions"><\/a>1.2 Definitions, Acronyms and Abbreviations<\/h3>$/;"	a
Deliverables	docs/reqs/srs/timer/index.html	/^<h3><a name="Deliverables"><\/a>3.7 Deliverables<\/h3>$/;"	a
Description	docs/design/mdd/timer/index.html	/^<h2><a name="Description"><\/a>2. Module Description<\/h2>$/;"	a
Description	docs/verification/mtp/timer/index.html	/^<h3><a name="Description"><\/a>5.1 Description<\/h3>$/;"	a
Design	docs/reqs/srs/timer/index.html	/^<a name="Design"><\/a>3.4 Design Constraints<br>$/;"	a
Design-Considerations	docs/design/mdd/timer/index.html	/^<h3> <a name="Design-Considerations"><\/a>4. Design Considerations<\/font><\/h3>$/;"	a
Design-Goal	docs/design/mdd/timer/index.html	/^<h3><a name="Design-Goal"><\/a>2.1 Design Goals and constraints:<\/h3>$/;"	a
DestModInfo	src/msgdistr/cdsumd.h	/^	struct DestModInfo$/;"	s	class:CdSuMsgDistributor
DestPortType	test/udpnh/basic-test/parameter.h	/^enum DestPortType$/;"	g
EPHERMAL	test/udpnh/basic-test/parameter.h	/^	EPHERMAL = 0,$/;"	e	enum:LocalPortType
EXTRADESTPORT	test/udpnh/basic-test/parameter.h	32;"	d
EXTRALOCALPORT	test/udpnh/basic-test/parameter.h	30;"	d
External-I	docs/reqs/srs/timer/index.html	/^<h3> <a name="External-I"><\/a>3.1 External Interface Requirements<\/h3>$/;"	a
Features-Not-Tested	docs/verification/mtp/timer/index.html	/^<a name="Features-Not-Tested"><\/a><h2>4.Features Not To Be Tested<\/h2><\/b> $/;"	a
Features-Tested	docs/verification/mtp/timer/index.html	/^<h2><a name="Features-Tested"><\/a>3. Features to be tested<\/h2>$/;"	a
Flags	include/cdsuthread.h	/^	enum Flags  $/;"	g	class:CdSuThread
Functional-Details	docs/design/mdd/timer/index.html	/^<a name="Functional-Details"><h3>2.3 Functional Details<\/h3><\/a>$/;"	a
Functional-R	docs/reqs/srs/timer/index.html	/^<h3><a name="Functional-R"><\/a>3.2 Functional Requirements<\/h3>$/;"	a
GII_CR2	test/udpnh/basic-test/tdmIf.h	33;"	d
GII_CR2	test/udpnh/load-testing/tdmIf.h	33;"	d
GPTModeRegValue	test/timer/cdsu_counter.h	/^	unsigned short GPTModeRegValue;$/;"	m	class:CdSuCounter
GPTModeRegValue	test/timer/hl_timer.h	/^	unsigned short GPTModeRegValue;$/;"	m	class:HL_Timer
GPTModeRegValue	test/timer/timerBasic.cpp	/^	unsigned short GPTModeRegValue;$/;"	m	class:HL_Timer	file:
GPTPreScalerValue	test/timer/cdsu_counter.h	/^	unsigned short GPTPreScalerValue ;$/;"	m	class:CdSuCounter
GPTPreScalerValue	test/timer/hl_timer.h	/^	unsigned short GPTPreScalerValue ;$/;"	m	class:HL_Timer
GPTPreScalerValue	test/timer/timerBasic.cpp	/^	unsigned short GPTPreScalerValue ;$/;"	m	class:HL_Timer	file:
GPT_TIMER_VAL_30_SECS	test/timer/timerBasic.cpp	/^		GPT_TIMER_VAL_30_SECS = 537$/;"	e	enum:HL_Timer::GptTimerValues	file:
GPTimer2	test/timer/hl_timer.h	/^	GPTimer *GPTimer2 ;$/;"	m	class:HL_Timer
GPTimer2	test/timer/timerBasic.cpp	/^	GPTimer *GPTimer2 ;$/;"	m	class:HL_Timer	file:
GPTimer3	test/timer/cdsu_counter.h	/^	GPTimer *GPTimer3;$/;"	m	class:CdSuCounter
GPTimer4	test/timer/cdsu_counter.h	/^	GPTimer *GPTimer4;$/;"	m	class:CdSuCounter
GSC_CR2	test/udpnh/basic-test/tdmIf.h	29;"	d
GSC_CR2	test/udpnh/load-testing/tdmIf.h	29;"	d
General	docs/reqs/srs/timer/index.html	/^<h2><a name="General"><\/a>2. General System Description<\/h2>$/;"	a
General-Constraints	docs/reqs/srs/timer/index.html	/^<h3><a name="General-Constraints"><\/a>2.4 General Constraints<\/h3>$/;"	a
GptTimerValues	test/timer/timerBasic.cpp	/^	enum GptTimerValues$/;"	g	class:HL_Timer	file:
HFT_DEFAULT	include/cdsucharhash.h	/^		HFT_DEFAULT,$/;"	e	enum:CdSuCharHash::HashFunctionType
HFT_DEFAULT	include/cdsumbhash.h	/^		HFT_DEFAULT,$/;"	e	enum:CdSuMultiByteHash::HashFunctionType
HFT_ONE	include/cdsucharhash.h	/^		HFT_ONE,$/;"	e	enum:CdSuCharHash::HashFunctionType
HFT_ONE	include/cdsumbhash.h	/^		HFT_ONE,$/;"	e	enum:CdSuMultiByteHash::HashFunctionType
HFT_TWO	include/cdsucharhash.h	/^		HFT_TWO$/;"	e	enum:CdSuCharHash::HashFunctionType
HFT_TWO	include/cdsumbhash.h	/^		HFT_TWO$/;"	e	enum:CdSuMultiByteHash::HashFunctionType
HL_Timer	test/timer/hl_timer.h	/^HL_Timer::HL_Timer()$/;"	f	class:HL_Timer
HL_Timer	test/timer/hl_timer.h	/^class HL_Timer$/;"	c
HL_Timer	test/timer/timerBasic.cpp	/^HL_Timer::HL_Timer()$/;"	f	class:HL_Timer
HL_Timer	test/timer/timerBasic.cpp	/^class HL_Timer$/;"	c	file:
HashBucket	include/cdsucharhash.h	/^	struct HashBucket$/;"	s	class:CdSuCharHash
HashBucket	include/cdsuinthash.h	/^	struct HashBucket$/;"	s	class:CdSuIntHash
HashBucket	include/cdsumbhash.h	/^	struct HashBucket$/;"	s	class:CdSuMultiByteHash
HashElement	include/cdsucharhash.h	/^	struct HashElement$/;"	s	class:CdSuCharHash
HashElement	include/cdsuinthash.h	/^	struct HashElement$/;"	s	class:CdSuIntHash
HashElement	include/cdsumbhash.h	/^	struct HashElement$/;"	s	class:CdSuMultiByteHash
HashFunctionType	include/cdsucharhash.h	/^	enum HashFunctionType$/;"	g	class:CdSuCharHash
HashFunctionType	include/cdsumbhash.h	/^	enum HashFunctionType$/;"	g	class:CdSuMultiByteHash
INVALBUFFERLEN	test/tcpnh/basictest/parameter.h	29;"	d
INVALBUFFERLEN	test/tcpnh/featuretest/parameter.h	28;"	d
INVALBUFFERLEN	test/udpnh/basic-test/parameter.h	27;"	d
INVALDATAPTR	test/tcpnh/basictest/parameter.h	31;"	d
INVALDATAPTR	test/tcpnh/featuretest/parameter.h	30;"	d
INVALDATAPTR	test/udpnh/basic-test/parameter.h	28;"	d
INVALLSTNQSZ	test/tcpnh/basictest/parameter.h	30;"	d
INVALLSTNQSZ	test/tcpnh/featuretest/parameter.h	29;"	d
INVALMODID	test/tcpnh/basictest/parameter.h	27;"	d
INVALMODID	test/tcpnh/featuretest/parameter.h	26;"	d
INVALMODID	test/udpnh/basic-test/parameter.h	24;"	d
INVALNHINSTID	test/tcpnh/basictest/parameter.h	28;"	d
INVALNHINSTID	test/tcpnh/featuretest/parameter.h	27;"	d
INVALNHINSTID	test/udpnh/basic-test/parameter.h	25;"	d
INVALUDPPORTID	test/udpnh/basic-test/parameter.h	26;"	d
ISMIMSGINTF	test/tcpnh/basictest/parameter.h	24;"	d
ISMIMSGINTF	test/tcpnh/featuretest/parameter.h	24;"	d
ISMIMSGINTF	test/udpnh/basic-test/parameter.h	20;"	d
ISUIMSGINTF	test/tcpnh/basictest/parameter.h	25;"	d
ISUIMSGINTF	test/tcpnh/featuretest/parameter.h	25;"	d
ISUIMSGINTF	test/udpnh/basic-test/parameter.h	21;"	d
Input	test/timer/timerBasic.cpp	/^struct Input$/;"	s	file:
Input	test/timer/timerCascade.cpp	/^struct Input$/;"	s	file:
Instance	test/timer/cdsu_counter.h	/^CdSuCounter* CdSuCounter::Instance()$/;"	f	class:CdSuCounter
Internal-Architecture	docs/design/mdd/timer/index.html	/^<h3> <a name="Internal-Architecture"><\/a>3.2 Internal Architecture<\/h3>$/;"	a
Introduction	docs/design/mdd/timer/index.html	/^<hr ><a name="Introduction"><\/a><h2>1. Introduction<\/h2>$/;"	a
Introduction	docs/reqs/srs/timer/index.html	/^<a name="Introduction"><\/a><h2>1. Introduction<\/h2>$/;"	a
Introduction	docs/verification/mtp/timer/index.html	/^<a name="Introduction"><\/a><h2>1.Introduction<\/h2>$/;"	a
Issues	docs/design/mdd/timer/index.html	/^<h3> <a name="Issues"><\/a>5. Issues<\/h3>$/;"	a
Items	docs/verification/mtp/timer/index.html	/^<h2><a name="Items"><\/a>2.Test Items<\/h2>$/;"	a
KeyGenerator	src/timer/cdsukeyallocator.cpp	/^Uint32 CdSuKeyAllocator::KeyGenerator()$/;"	f	class:CdSuKeyAllocator
LIA_NUM_ATTEMPTS	src/tcpnh/cdsunhtcpdb.h	/^			LIA_NUM_ATTEMPTS = 10$/;"	e	enum:CdSuNhTcpDb::NhTcpLstnIdAllocator::__anon12
LIBS	test/Makefile	/^LIBS = $(CDSU_UTIL_SRC_DIR)\/libcdsuutil.a$/;"	m
LIBS	test/timer/Makefile	/^LIBS=$(CDSU_UTIL_SRC_DIR)\/libcdsuutil.a$/;"	m
LISTENERSERVERPORT	test/tcpnh/mp3Streamer/mp3StreamServer.cpp	28;"	d	file:
LOCALPORT	test/udpnh/basic-test/parameter.h	29;"	d
LOCALPORTOFBOTHFIXED	test/udpnh/testing-mul-user-support/tester.cpp	25;"	d	file:
LOCALPORTOFLOCALFIXED	test/udpnh/testing-mul-user-support/tester.cpp	27;"	d	file:
LOCAL_DEFAULT	test/udpnh/basic-test/parameter.h	/^	LOCAL_DEFAULT,$/;"	e	enum:LocalPortType
ListElement	include/cdsulist.h	/^	struct ListElement$/;"	s	class:CdSuList
LocalPortType	test/udpnh/basic-test/parameter.h	/^enum LocalPortType$/;"	g
MAX	test/timer/timerFuncTest.cpp	/^int MAX = 0;$/;"	v
MAX	test/timer/timerListTest.cpp	/^int MAX = 0;$/;"	v
MAXDATA	test/tcpnh/mp3Streamer/mp3StreamerClient.cpp	41;"	d	file:
MAXINST	test/udpnh/load-testing/parameter.h	25;"	d
MAXPORT	test/udpnh/load-testing/parameter.h	23;"	d
MAXSOCKADDR	src/tcpnh/cdsunhtcp.h	/^	MAXSOCKADDR = 128	\/\/ max socket address structure size$/;"	e	enum:__anon13
MAX_NO_CONN	test/tcpnh/basictest/parameter.h	22;"	d
MAX_NO_CONN	test/tcpnh/featuretest/parameter.h	21;"	d
MAX_NO_CONN	test/tcpnh/featuretest/testfunctions.cpp	37;"	d	file:
MAX_NO_LSTN	test/tcpnh/basictest/parameter.h	32;"	d
MAX_NO_LSTN	test/tcpnh/featuretest/parameter.h	22;"	d
MAX_NUM_OF_TESTS	test/timer/test-funcclient.cpp	42;"	d	file:
MAX_NUM_OF_TESTS	test/timer/test-listclient.cpp	42;"	d	file:
MAX_RXBUF_LEN	src/misc/netPrintServer.cpp	/^	MAX_RXBUF_LEN = 1024$/;"	e	enum:__anon6	file:
MAX_SEND_DATA_ATTEMPT	test/tcpnh/basictest/parameter.h	23;"	d
MAX_THREAD1_TIMERS	test/timer/timerBasic.cpp	43;"	d	file:
MAX_THREAD1_TIMERS	test/timer/timerCascade.cpp	55;"	d	file:
MAX_THREAD1_TIMERS	test/timer/timerPerfStartTest.cpp	34;"	d	file:
MAX_THREAD1_TIMERS	test/timer/timerPerfStopTest.cpp	34;"	d	file:
MAX_THREAD2_TIMERS	test/timer/timerPerfStartTest.cpp	35;"	d	file:
MAX_THREAD2_TIMERS	test/timer/timerPerfStopTest.cpp	35;"	d	file:
MAX_THREAD3_TIMERS	test/timer/timerPerfStartTest.cpp	36;"	d	file:
MAX_THREAD3_TIMERS	test/timer/timerPerfStopTest.cpp	36;"	d	file:
MAX_TIMERS	test/timer/timerBasic.cpp	44;"	d	file:
MAX_TIMERS	test/timer/timerCascade.cpp	56;"	d	file:
MAX_TIMERS	test/timer/timerPerfStartTest.cpp	37;"	d	file:
MAX_TIMERS	test/timer/timerPerfStopTest.cpp	37;"	d	file:
MISCDIR	src/Makefile	/^MISCDIR = .\/misc$/;"	m
MODULE_P	test/timer/timerBasic.cpp	/^	MODULE_P = 1,$/;"	e	enum:Modules	file:
MODULE_P	test/timer/timerCascade.cpp	/^	MODULE_P = 1,$/;"	e	enum:Modules	file:
MODULE_P	test/timer/timerFuncTest.cpp	/^	MODULE_P = 1,$/;"	e	enum:Modules	file:
MODULE_P	test/timer/timerListTest.cpp	/^	MODULE_P = 1,$/;"	e	enum:Modules	file:
MODULE_P	test/timer/timerPerfStartTest.cpp	/^	MODULE_P = 1,$/;"	e	enum:Modules	file:
MODULE_P	test/timer/timerPerfStopTest.cpp	/^	MODULE_P = 1,$/;"	e	enum:Modules	file:
MODULE_Q	test/timer/timerBasic.cpp	/^	MODULE_Q,$/;"	e	enum:Modules	file:
MODULE_Q	test/timer/timerCascade.cpp	/^	MODULE_Q,$/;"	e	enum:Modules	file:
MODULE_Q	test/timer/timerFuncTest.cpp	/^	MODULE_Q,$/;"	e	enum:Modules	file:
MODULE_Q	test/timer/timerListTest.cpp	/^	MODULE_Q,$/;"	e	enum:Modules	file:
MODULE_Q	test/timer/timerPerfStartTest.cpp	/^	MODULE_Q,$/;"	e	enum:Modules	file:
MODULE_Q	test/timer/timerPerfStopTest.cpp	/^	MODULE_Q,$/;"	e	enum:Modules	file:
MODULE_R	test/timer/timerBasic.cpp	/^	MODULE_R$/;"	e	enum:Modules	file:
MODULE_R	test/timer/timerCascade.cpp	/^	MODULE_R$/;"	e	enum:Modules	file:
MODULE_R	test/timer/timerFuncTest.cpp	/^	MODULE_R$/;"	e	enum:Modules	file:
MODULE_R	test/timer/timerListTest.cpp	/^	MODULE_R$/;"	e	enum:Modules	file:
MODULE_R	test/timer/timerPerfStartTest.cpp	/^	MODULE_R$/;"	e	enum:Modules	file:
MODULE_R	test/timer/timerPerfStopTest.cpp	/^	MODULE_R$/;"	e	enum:Modules	file:
MSGDISTRDIR	src/Makefile	/^MSGDISTRDIR = .\/msgdistr$/;"	m
MSGDISTUDPPORT	test/udpnh/load-testing/parameter.h	27;"	d
MSG_DIST_UDP_PORT	test/tcpnh/mp3Streamer/mp3StreamServer.cpp	29;"	d	file:
MgcApplicationType	include/cdsuutiltypes-c.h	/^typedef enum MgcApplicationType$/;"	g
MgcApplicationType	include/cdsuutiltypes-c.h	/^} MgcApplicationType;$/;"	t	typeref:enum:MgcApplicationType
MgcApplicationType	include/cdsuutiltypes.h	/^enum MgcApplicationType$/;"	g
Modules	test/timer/timerBasic.cpp	/^enum Modules$/;"	g	file:
Modules	test/timer/timerCascade.cpp	/^enum Modules$/;"	g	file:
Modules	test/timer/timerFuncTest.cpp	/^enum Modules$/;"	g	file:
Modules	test/timer/timerListTest.cpp	/^enum Modules$/;"	g	file:
Modules	test/timer/timerPerfStartTest.cpp	/^enum Modules$/;"	g	file:
Modules	test/timer/timerPerfStopTest.cpp	/^enum Modules$/;"	g	file:
Mp3StreamServer	test/tcpnh/mp3Streamer/mp3StreamServer.cpp	/^Mp3StreamServer::Mp3StreamServer ()$/;"	f	class:Mp3StreamServer
Mp3StreamServer	test/tcpnh/mp3Streamer/mp3StreamServer.h	/^class Mp3StreamServer$/;"	c
MyTestMsg	test/msgdistr-test.h	/^struct MyTestMsg : CdMessage$/;"	s
NET_PRINT_IPADDR	src/misc/cdsutrace.cpp	52;"	d	file:
NET_PRINT_PORTNO	src/misc/cdsutrace.cpp	53;"	d	file:
NUM_DTEST	test/inthash-test.cpp	152;"	d	file:
NUM_OUTPUT	test/timer/timerPerfStartTest.cpp	32;"	d	file:
NUM_OUTPUT	test/timer/timerPerfStopTest.cpp	32;"	d	file:
NUM_READINGS	test/timer/timerPerfStartTest.cpp	31;"	d	file:
NUM_READINGS	test/timer/timerPerfStopTest.cpp	31;"	d	file:
NetPrintServer	src/misc/netPrintServer.cpp	/^NetPrintServer::NetPrintServer (char* ip, unsigned short port)$/;"	f	class:NetPrintServer
NetPrintServer	src/misc/netPrintServer.cpp	/^class NetPrintServer$/;"	c	file:
NhTcpConnIdAllocator	src/tcpnh/cdsunhtcpdb.cpp	/^CdSuNhTcpDb::NhTcpConnIdAllocator::NhTcpConnIdAllocator (Uint32 maxNoOfConns)$/;"	f	class:CdSuNhTcpDb::NhTcpConnIdAllocator
NhTcpConnIdAllocator	src/tcpnh/cdsunhtcpdb.h	/^	class NhTcpConnIdAllocator $/;"	c	class:CdSuNhTcpDb
NhTcpLstnIdAllocator	src/tcpnh/cdsunhtcpdb.cpp	/^CdSuNhTcpDb::NhTcpLstnIdAllocator::NhTcpLstnIdAllocator (Uint32 maxNoOfLstns)$/;"	f	class:CdSuNhTcpDb::NhTcpLstnIdAllocator
NhTcpLstnIdAllocator	src/tcpnh/cdsunhtcpdb.h	/^	class NhTcpLstnIdAllocator $/;"	c	class:CdSuNhTcpDb
NhUdpPortIdAllocator	src/udpnh/cdsunhudpdb.cpp	/^CdSuNhUdpDb::NhUdpPortIdAllocator::NhUdpPortIdAllocator (Uint32 maxNoOfUdpPort)$/;"	f	class:CdSuNhUdpDb::NhUdpPortIdAllocator
NhUdpPortIdAllocator	src/udpnh/cdsunhudpdb.h	/^	class NhUdpPortIdAllocator $/;"	c	class:CdSuNhUdpDb
Node	include/cdsuqueue.h	/^	struct Node $/;"	s	class:CdSuQueue
Node	include/cdsutsqueue.h	/^	struct Node $/;"	s	class:CdSuTsQueue
NwThreadStackSpace	src/msgdistr/cdsumd.cpp	/^char NwThreadStackSpace [1024 * 256];$/;"	v
Other-Requirements	docs/reqs/srs/timer/index.html	/^<h3><a name="Other-Requirements"><\/a>3.6 Other Requirements<\/h3>$/;"	a
OutPut	test/timer/timerBasic.cpp	/^struct OutPut$/;"	s	file:
OutPut	test/timer/timerCascade.cpp	/^struct OutPut$/;"	s	file:
OutPut	test/timer/timerPerfStartTest.cpp	/^struct OutPut$/;"	s	file:
OutPut	test/timer/timerPerfStopTest.cpp	/^struct OutPut$/;"	s	file:
Overview	docs/reqs/srs/timer/index.html	/^<h3><a name="Overview"><\/a>1.4 Overview<\/h3>$/;"	a
PARAMETER_H_	test/tcpnh/basictest/parameter.h	2;"	d
PARAMETER_H_	test/tcpnh/featuretest/parameter.h	2;"	d
PARAMETER_H_	test/udpnh/basic-test/parameter.h	2;"	d
PARAMETER_H_	test/udpnh/load-testing/parameter.h	2;"	d
PIA_NUM_ATTEMPTS	src/udpnh/cdsunhudpdb.h	/^			PIA_NUM_ATTEMPTS = 10$/;"	e	enum:CdSuNhUdpDb::NhUdpPortIdAllocator::__anon8
PRINT_SERVER_PORT_NO	src/misc/netPrintServer.cpp	/^	PRINT_SERVER_PORT_NO = 9060,$/;"	e	enum:__anon6	file:
Performance-R	docs/reqs/srs/timer/index.html	/^<h3><a name="Performance-R"><\/a>3.3 Performance Requirements<\/h3>$/;"	a
Priority	include/cdsuthread.h	/^	enum Priority$/;"	g	class:CdSuThread
Processing	docs/design/mdd/timer/index.html	/^<h3> <a name="Processing"><\/a>6.Processing\/Algorithm\/Pseudocode<\/h3>$/;"	a
Product	docs/reqs/srs/timer/index.html	/^<h3><a name="Product"><\/a>2.1 Product Perspective<\/h3>$/;"	a
Product-Functions	docs/reqs/srs/timer/index.html	/^<h3><a name="Product-Functions"><\/a>2.2 Product Functions<\/h3>$/;"	a
PtrFunc	test/queue-test.cpp	/^typedef bool (*PtrFunc) ();$/;"	t	file:
PtrFunc	test/timer/test-funcclient.cpp	/^typedef void (*PtrFunc) ();$/;"	t	file:
PtrFunc	test/timer/test-listclient.cpp	/^typedef void (*PtrFunc) ();$/;"	t	file:
PtrFunc	test/timer/timerFuncTest.cpp	/^typedef void (*PtrFunc) ();$/;"	t	file:
PtrFunc	test/tsqueue-test.cpp	/^typedef bool (*PtrFunc) ();$/;"	t	file:
Purpose	docs/design/mdd/timer/index.html	/^<h3><a name="Purpose"><\/a>1.1 Purpose and Scope:<\/h3>$/;"	a
Purpose	docs/reqs/srs/timer/index.html	/^<h3><a name="Purpose"><\/a>1.1 Purpose & Scope<\/h3>$/;"	a
REMOTEMAXPORT	test/udpnh/load-testing/parameter.h	24;"	d
RTP_TESTS	test/timer/Makefile	/^RTP_TESTS = timerCascade.out  timerListTest.out  timerFuncTest.out funcClient.out listClient.out$/;"	m
References	docs/design/mdd/timer/index.html	/^<h3><a name="References"><\/a>1.3 References<\/h3>$/;"	a
References	docs/reqs/srs/timer/index.html	/^<h3><a name="References"><\/a>1.3 References<\/h3>$/;"	a
References	docs/verification/mtp/timer/index.html	/^<h3><a name="References"><\/a>1.2) References<\/h3>$/;"	a
Result	test/timer/timerBasic.cpp	/^struct Result$/;"	s	file:
Result	test/timer/timerCascade.cpp	/^struct Result$/;"	s	file:
Result	test/timer/timerPerfStartTest.cpp	/^struct Result$/;"	s	file:
Result	test/timer/timerPerfStopTest.cpp	/^struct Result$/;"	s	file:
RetVal	include/cdsuthread.h	/^	enum RetVal$/;"	g	class:CdSuThread
Risks-Contingencies	docs/verification/mtp/timer/index.html	/^<h2><a name="Risks-Contingencies"><\/a>8. Risks and contingencies<\/h2>$/;"	a
SA	src/msgdistr/cdsunhudpglobals.h	24;"	d
SANITY_FAILURE_MSG	include/cdsusanitymsgs.h	/^    	SANITY_FAILURE_MSG, 		\/\/ Sanity Failure msg$/;"	e	enum:SanityMessageOpcode
SANITY_MSG	include/cdsusanitymsgs.h	/^	SANITY_MSG = 50,			\/\/ Sanity msg$/;"	e	enum:SanityMessageOpcode
SANITY_RX_TI_MSG	include/cdsusanitymsgs.h	/^	SANITY_RX_TI_MSG$/;"	e	enum:SanityMessageOpcode
SANITY_TIMEOUT_MSG	include/cdsusanitymsgs.h	/^	SANITY_TIMEOUT_MSG,$/;"	e	enum:SanityMessageOpcode
SANITY_TX_TI_MSG	include/cdsusanitymsgs.h	/^	SANITY_TX_TI_MSG,$/;"	e	enum:SanityMessageOpcode
SELF_PORT	test/udpnh/basic-test/parameter.h	/^	SELF_PORT,$/;"	e	enum:DestPortType
SENDATTEMPT	test/udpnh/load-testing/parameter.h	26;"	d
SM_RSRC_TYPE_APP	include/cdsuutiltypes-c.h	/^        SM_RSRC_TYPE_APP,       \/\/ Resource is an app.$/;"	e	enum:SmRsrcType
SM_RSRC_TYPE_APP	include/cdsuutiltypes.h	/^        SM_RSRC_TYPE_APP,       \/\/ Resource is an app.$/;"	e	enum:SmRsrcType
SM_RSRC_TYPE_DEV	include/cdsuutiltypes-c.h	/^        SM_RSRC_TYPE_DEV,       \/\/ Resource is a device.$/;"	e	enum:SmRsrcType
SM_RSRC_TYPE_DEV	include/cdsuutiltypes.h	/^        SM_RSRC_TYPE_DEV,       \/\/ Resource is a device.$/;"	e	enum:SmRsrcType
SM_RSRC_TYPE_INVALID	include/cdsuutiltypes-c.h	/^        SM_RSRC_TYPE_INVALID,$/;"	e	enum:SmRsrcType
SM_RSRC_TYPE_INVALID	include/cdsuutiltypes.h	/^        SM_RSRC_TYPE_INVALID,$/;"	e	enum:SmRsrcType
SM_RSRC_TYPE_MAX	include/cdsuutiltypes-c.h	/^        SM_RSRC_TYPE_MAX$/;"	e	enum:SmRsrcType
SM_RSRC_TYPE_MAX	include/cdsuutiltypes.h	/^        SM_RSRC_TYPE_MAX$/;"	e	enum:SmRsrcType
SM_SERVICE_TYPE_APPLICATION_SERVICE	include/cdsuutiltypes-c.h	/^	SM_SERVICE_TYPE_APPLICATION_SERVICE,$/;"	e	enum:SmServiceType
SM_SERVICE_TYPE_APPLICATION_SERVICE	include/cdsuutiltypes.h	/^	SM_SERVICE_TYPE_APPLICATION_SERVICE,$/;"	e	enum:SmServiceType
SM_SERVICE_TYPE_INVALID	include/cdsuutiltypes-c.h	/^	SM_SERVICE_TYPE_INVALID,		\/\/ Invalid service type$/;"	e	enum:SmServiceType
SM_SERVICE_TYPE_INVALID	include/cdsuutiltypes.h	/^	SM_SERVICE_TYPE_INVALID,		\/\/ Invalid service type$/;"	e	enum:SmServiceType
SM_SERVICE_TYPE_MAX	include/cdsuutiltypes-c.h	/^	SM_SERVICE_TYPE_MAX,$/;"	e	enum:SmServiceType
SM_SERVICE_TYPE_MAX	include/cdsuutiltypes.h	/^	SM_SERVICE_TYPE_MAX,$/;"	e	enum:SmServiceType
SM_SERVICE_TYPE_PLATFORM_SERVICE	include/cdsuutiltypes-c.h	/^	SM_SERVICE_TYPE_PLATFORM_SERVICE,$/;"	e	enum:SmServiceType
SM_SERVICE_TYPE_PLATFORM_SERVICE	include/cdsuutiltypes.h	/^	SM_SERVICE_TYPE_PLATFORM_SERVICE,$/;"	e	enum:SmServiceType
SRCDIR	Makefile	/^SRCDIR=.\/src$/;"	m
SRCSUBDIRS	src/Makefile	/^SRCSUBDIRS = $(MISCDIR)\\$/;"	m
SRCSUBDIRS	test/tcpnh/Makefile	/^SRCSUBDIRS = basictest \\$/;"	m
SRCSUBDIRS	test/udpnh/Makefile	/^SRCSUBDIRS = basic-test \\$/;"	m
SRC_FILES	test/tcpnh/mp3Streamer/Makefile	/^SRC_FILES = mp3StreamerServer.cpp \\$/;"	m
SRC_OBJS	test/tcpnh/mp3Streamer/Makefile	/^SRC_OBJS = $(SRC_FILES:.cpp=.o)$/;"	m
STANDARD	test/udpnh/basic-test/parameter.h	/^	STANDARD,$/;"	e	enum:LocalPortType
STOP_FIRST_NODE	test/timer/timerListTest.cpp	/^	STOP_FIRST_NODE,$/;"	e	enum:CHOICE	file:
STOP_LAST_NODE	test/timer/timerListTest.cpp	/^	STOP_LAST_NODE,$/;"	e	enum:CHOICE	file:
STOP_MIDDLE_NODE	test/timer/timerListTest.cpp	/^	STOP_MIDDLE_NODE,$/;"	e	enum:CHOICE	file:
STREAMSERVERPORT	test/tcpnh/mp3Streamer/mp3StreamServer.cpp	27;"	d	file:
SanityFailureMsg	include/cdsusanitymsgs.h	/^	SanityFailureMsg (){};$/;"	f	struct:SanityFailureMsg
SanityFailureMsg	include/cdsusanitymsgs.h	/^struct SanityFailureMsg : CdMessage$/;"	s
SanityMessageOpcode	include/cdsusanitymsgs.h	/^enum SanityMessageOpcode$/;"	g
SanityModule	include/cdsusanity.h	/^class SanityModule$/;"	c
SanityModule	src/misc/cdsusanity.cpp	/^SanityModule::SanityModule (const SanityParams& ci, CdSuTimerHandler*$/;"	f	class:SanityModule
SanityMsg	include/cdsusanitymsgs.h	/^	SanityMsg (){}; $/;"	f	struct:SanityMsg
SanityMsg	include/cdsusanitymsgs.h	/^struct SanityMsg : CdMessage$/;"	s
SanityParams	include/cdsusanity.h	/^struct SanityParams$/;"	s
SanityTimeoutMsg	include/cdsusanitymsgs.h	/^	SanityTimeoutMsg (){};$/;"	f	struct:SanityTimeoutMsg
SanityTimeoutMsg	include/cdsusanitymsgs.h	/^struct SanityTimeoutMsg : CdMessage$/;"	s
Schedule	docs/verification/mtp/timer/index.html	/^<h2><a name="Schedule"><\/a>7.Schedule<\/h2>$/;"	a
Scope	docs/verification/mtp/timer/index.html	/^<h3><a name="Scope"><\/a>1.1) Purpose and Scope<\/h3>$/;"	a
Sint16	include/cdsuutiltypes-c.h	/^typedef signed short Sint16;  	\/\/ 16-bit signed int (Range: -32768 to +32767)$/;"	t
Sint16	include/cdsuutiltypes.h	/^typedef signed short Sint16;  	\/\/ 16-bit signed int (Range: -32768 to +32767)$/;"	t
Sint32	include/cdsuutiltypes-c.h	/^typedef int Sint32;	   	\/\/ 32-bit signed int (Range:-2147483648,2147483647)$/;"	t
Sint32	include/cdsuutiltypes.h	/^typedef int Sint32;	   	\/\/ 32-bit signed int (Range:-2147483648,2147483647)$/;"	t
Sint8	include/cdsuutiltypes-c.h	/^typedef char Sint8;          	\/\/ signed byte (Range: -128 to +127)$/;"	t
Sint8	include/cdsuutiltypes.h	/^typedef char Sint8;          	\/\/ signed byte (Range: -128 to +127)$/;"	t
SmRsrcType	include/cdsuutiltypes-c.h	/^typedef enum SmRsrcType$/;"	g
SmRsrcType	include/cdsuutiltypes-c.h	/^} SmRsrcType;$/;"	t	typeref:enum:SmRsrcType
SmRsrcType	include/cdsuutiltypes.h	/^enum SmRsrcType$/;"	g
SmServiceType	include/cdsuutiltypes-c.h	/^typedef enum SmServiceType$/;"	g
SmServiceType	include/cdsuutiltypes-c.h	/^} SmServiceType;$/;"	t	typeref:enum:SmServiceType
SmServiceType	include/cdsuutiltypes.h	/^enum SmServiceType$/;"	g
Software-Sys-Attr	docs/reqs/srs/timer/index.html	/^<h3><a name="Software-Sys-Attr"><\/a>3.5 Software System Attributes<\/h3>$/;"	a
Specific-Requirements	docs/reqs/srs/timer/index.html	/^<h2> <a name="Specific-Requirements"><\/a>3. Specific Requirements<\/h2>$/;"	a
StackSize	include/cdsuthread.h	/^	enum StackSize$/;"	g	class:CdSuThread
StartTime	test/timer/timerBasic.cpp	/^	timeval StartTime;$/;"	m	struct:OutPut	file:
StartTime	test/timer/timerCascade.cpp	/^	timeval StartTime;$/;"	m	struct:OutPut	file:
StartTime	test/timer/timerPerfStartTest.cpp	/^	timeval StartTime;$/;"	m	struct:OutPut	file:
StartTime	test/timer/timerPerfStopTest.cpp	/^	timeval StartTime;$/;"	m	struct:OutPut	file:
StopTime	test/timer/timerPerfStartTest.cpp	/^	timeval StopTime;$/;"	m	struct:OutPut	file:
StopTime	test/timer/timerPerfStopTest.cpp	/^	timeval StopTime;$/;"	m	struct:OutPut	file:
TARGET_IP_ADDR	test/tcpnh/basictest/testserver.cpp	36;"	d	file:
TARGET_IP_ADDR	test/tcpnh/featuretest/testserver.cpp	36;"	d	file:
TARGET_IP_ADDR	test/udpnh/basic-test/testserver.cpp	40;"	d	file:
TARGET_IP_ADDR	test/udpnh/load-testing/testserver.cpp	40;"	d	file:
TARGET_IP_PORT	test/tcpnh/basictest/testserver.cpp	37;"	d	file:
TARGET_IP_PORT	test/tcpnh/featuretest/testserver.cpp	37;"	d	file:
TARGET_IP_PORT	test/udpnh/basic-test/testserver.cpp	41;"	d	file:
TARGET_IP_PORT	test/udpnh/load-testing/testserver.cpp	41;"	d	file:
TCPNHDIR	src/Makefile	/^TCPNHDIR = .\/tcpnh$/;"	m
TESTDIR	Makefile	/^TESTDIR=.\/test$/;"	m
TESTER_THREAD_ONE_MOD_ID	test/msgdistr-test.cpp	/^	TESTER_THREAD_ONE_MOD_ID = 1,$/;"	e	enum:__anon1	file:
TESTER_THREAD_ONE_MOD_ID	test/msgdistr2-test.cpp	/^	TESTER_THREAD_ONE_MOD_ID = 1,$/;"	e	enum:__anon3	file:
TESTER_THREAD_TWO_MOD_ID	test/msgdistr-test.cpp	/^	TESTER_THREAD_TWO_MOD_ID $/;"	e	enum:__anon1	file:
TESTER_THREAD_TWO_MOD_ID	test/msgdistr2-test.cpp	/^	TESTER_THREAD_TWO_MOD_ID $/;"	e	enum:__anon3	file:
TESTOBJS	test/timer/Makefile	/^TESTOBJS = $(TESTSRC:.cpp=.o)$/;"	m
TESTSRC	test/timer/Makefile	/^TESTSRC = timerFuncTest.cpp \\$/;"	m
TEST_CALLHLR_ID_LEN	test/mbhash-test.cpp	/^	TEST_CALLHLR_ID_LEN = 16$/;"	e	enum:__anon2	file:
TEST_CLIENT_FILES	test/tcpnh/basictest/Makefile	/^TEST_CLIENT_FILES = testclient.cpp \\$/;"	m
TEST_CLIENT_FILES	test/tcpnh/featuretest/Makefile	/^TEST_CLIENT_FILES = testclient.cpp \\$/;"	m
TEST_CLIENT_FILES	test/udpnh/basic-test/Makefile	/^TEST_CLIENT_FILES = testclient.cpp \\$/;"	m
TEST_CLIENT_FILES	test/udpnh/load-testing/Makefile	/^TEST_CLIENT_FILES = testclient.cpp \\$/;"	m
TEST_CLIENT_OBJS	test/tcpnh/basictest/Makefile	/^TEST_CLIENT_OBJS = $(TEST_CLIENT_FILES:.cpp=.o)$/;"	m
TEST_CLIENT_OBJS	test/tcpnh/featuretest/Makefile	/^TEST_CLIENT_OBJS = $(TEST_CLIENT_FILES:.cpp=.o)$/;"	m
TEST_CLIENT_OBJS	test/udpnh/basic-test/Makefile	/^TEST_CLIENT_OBJS = $(TEST_CLIENT_FILES:.cpp=.o)$/;"	m
TEST_CLIENT_OBJS	test/udpnh/load-testing/Makefile	/^TEST_CLIENT_OBJS = $(TEST_CLIENT_FILES:.cpp=.o)$/;"	m
TEST_FUNCTIONS_H_	test/tcpnh/basictest/testfunctions.h	2;"	d
TEST_FUNCTIONS_H_	test/tcpnh/featuretest/testfunctions.h	2;"	d
TEST_FUNCTIONS_H_	test/udpnh/basic-test/testfunctions.h	2;"	d
TEST_FUNCTIONS_H_	test/udpnh/load-testing/testfunctions.h	2;"	d
TEST_MENU_H_	test/tcpnh/basictest/testmenu.h	2;"	d
TEST_MENU_H_	test/tcpnh/featuretest/testmenu.h	2;"	d
TEST_MENU_H_	test/udpnh/basic-test/testmenu.h	2;"	d
TEST_MENU_H_	test/udpnh/load-testing/testmenu.h	2;"	d
TEST_SERVER_FILES	test/tcpnh/basictest/Makefile	/^TEST_SERVER_FILES = testserver.cpp \\$/;"	m
TEST_SERVER_FILES	test/tcpnh/featuretest/Makefile	/^TEST_SERVER_FILES = testserver.cpp \\$/;"	m
TEST_SERVER_FILES	test/udpnh/basic-test/Makefile	/^TEST_SERVER_FILES = testserver.cpp \\$/;"	m
TEST_SERVER_FILES	test/udpnh/load-testing/Makefile	/^TEST_SERVER_FILES = testserver.cpp \\$/;"	m
TEST_SERVER_IPADDR	test/timer/test-funcclient.cpp	39;"	d	file:
TEST_SERVER_IPADDR	test/timer/test-listclient.cpp	39;"	d	file:
TEST_SERVER_OBJS	test/tcpnh/basictest/Makefile	/^TEST_SERVER_OBJS = $(TEST_SERVER_FILES:.cpp=.o)$/;"	m
TEST_SERVER_OBJS	test/tcpnh/featuretest/Makefile	/^TEST_SERVER_OBJS = $(TEST_SERVER_FILES:.cpp=.o)$/;"	m
TEST_SERVER_OBJS	test/udpnh/basic-test/Makefile	/^TEST_SERVER_OBJS = $(TEST_SERVER_FILES:.cpp=.o)$/;"	m
TEST_SERVER_OBJS	test/udpnh/load-testing/Makefile	/^TEST_SERVER_OBJS = $(TEST_SERVER_FILES:.cpp=.o)$/;"	m
TEST_SOCK_PORT	test/timer/test-funcclient.cpp	41;"	d	file:
TEST_SOCK_PORT	test/timer/test-listclient.cpp	41;"	d	file:
TEST_SOCK_PORT	test/timer/timerFuncTest.cpp	43;"	d	file:
TEST_SOCK_PORT	test/timer/timerListTest.cpp	45;"	d	file:
TEST_SRC_FILES	test/udpnh/testing-mul-nh-support/Makefile	/^TEST_SRC_FILES = tester.cpp $/;"	m
TEST_SRC_FILES	test/udpnh/testing-mul-nh-usr-support/Makefile	/^TEST_SRC_FILES = tester.cpp $/;"	m
TEST_SRC_FILES	test/udpnh/testing-mul-user-support/Makefile	/^TEST_SRC_FILES = tester.cpp $/;"	m
TEST_SRC_OBJS	test/udpnh/testing-mul-nh-support/Makefile	/^TEST_SRC_OBJS = $(TEST_SRC_FILES:.cpp=.o)$/;"	m
TEST_SRC_OBJS	test/udpnh/testing-mul-nh-usr-support/Makefile	/^TEST_SRC_OBJS = $(TEST_SRC_FILES:.cpp=.o)$/;"	m
TEST_SRC_OBJS	test/udpnh/testing-mul-user-support/Makefile	/^TEST_SRC_OBJS = $(TEST_SRC_FILES:.cpp=.o)$/;"	m
TIF_E1_LINK_NO	test/udpnh/basic-test/tdmIf.h	38;"	d
TIF_E1_LINK_NO	test/udpnh/load-testing/tdmIf.h	38;"	d
TIF_E1_SLOT_SIG	test/udpnh/basic-test/tdmIf.h	39;"	d
TIF_E1_SLOT_SIG	test/udpnh/load-testing/tdmIf.h	39;"	d
TIF_E1_SLOT_VOICE	test/udpnh/basic-test/tdmIf.h	40;"	d
TIF_E1_SLOT_VOICE	test/udpnh/load-testing/tdmIf.h	40;"	d
TIF_H110_RX_CHAN	test/udpnh/basic-test/tdmIf.h	48;"	d
TIF_H110_RX_CHAN	test/udpnh/load-testing/tdmIf.h	48;"	d
TIF_H110_RX_LINK	test/udpnh/basic-test/tdmIf.h	49;"	d
TIF_H110_RX_LINK	test/udpnh/load-testing/tdmIf.h	49;"	d
TIF_H110_TX_CHAN	test/udpnh/basic-test/tdmIf.h	45;"	d
TIF_H110_TX_CHAN	test/udpnh/load-testing/tdmIf.h	45;"	d
TIF_H110_TX_LINK	test/udpnh/basic-test/tdmIf.h	46;"	d
TIF_H110_TX_LINK	test/udpnh/load-testing/tdmIf.h	46;"	d
TIF_MCC_CHAN_SIG	test/udpnh/basic-test/tdmIf.h	42;"	d
TIF_MCC_CHAN_SIG	test/udpnh/load-testing/tdmIf.h	42;"	d
TIF_MCC_CHAN_VOICE	test/udpnh/basic-test/tdmIf.h	43;"	d
TIF_MCC_CHAN_VOICE	test/udpnh/load-testing/tdmIf.h	43;"	d
TIF_SIGNALING	test/udpnh/basic-test/tdmIf.h	/^		TIF_SIGNALING,$/;"	e	enum:TdmInterface::TdmIntfType
TIF_SIGNALING	test/udpnh/load-testing/tdmIf.h	/^		TIF_SIGNALING,$/;"	e	enum:TdmInterface::TdmIntfType
TIF_VOICE	test/udpnh/basic-test/tdmIf.h	/^		TIF_VOICE,$/;"	e	enum:TdmInterface::TdmIntfType
TIF_VOICE	test/udpnh/load-testing/tdmIf.h	/^		TIF_VOICE,$/;"	e	enum:TdmInterface::TdmIntfType
TIF_VOICE_ONLY	test/udpnh/basic-test/tdmIf.h	/^		TIF_VOICE_ONLY$/;"	e	enum:TdmInterface::TdmIntfType
TIF_VOICE_ONLY	test/udpnh/load-testing/tdmIf.h	/^		TIF_VOICE_ONLY$/;"	e	enum:TdmInterface::TdmIntfType
TIMERDIR	src/Makefile	/^TIMERDIR = .\/timer$/;"	m
TIMER_ANY	test/tcpnh/basictest/timerdef.cpp	32;"	d	file:
TIMER_ANY	test/tcpnh/featuretest/timerdef.cpp	32;"	d	file:
TIMER_ANY	test/timer/sup-test.cpp	46;"	d	file:
TIMER_ANY	test/udpnh/basic-test/timerdef.cpp	32;"	d	file:
TIMER_ANY	test/udpnh/load-testing/timerdef.cpp	32;"	d	file:
TIMER_DEF_H_	test/tcpnh/basictest/timerdef.h	2;"	d
TIMER_DEF_H_	test/tcpnh/featuretest/timerdef.h	2;"	d
TIMER_DEF_H_	test/udpnh/basic-test/timerdef.h	2;"	d
TIMER_DEF_H_	test/udpnh/load-testing/timerdef.h	2;"	d
TOTAL_THREADS	test/timer/timerBasic.cpp	42;"	d	file:
TOTAL_THREADS	test/timer/timerCascade.cpp	54;"	d	file:
TOTAL_THREADS	test/timer/timerPerfStartTest.cpp	33;"	d	file:
TOTAL_THREADS	test/timer/timerPerfStopTest.cpp	33;"	d	file:
TO_FIRST_NODE	test/timer/timerListTest.cpp	/^	TO_FIRST_NODE,$/;"	e	enum:CHOICE	file:
TO_diff	test/timer/timerBasic.cpp	/^	int TO_diff;$/;"	m	struct:Result	file:
TO_diff	test/timer/timerCascade.cpp	/^	int TO_diff;$/;"	m	struct:Result	file:
TT_CALL_BACK_INV	test/timer/test-funcclient.cpp	/^void TT_CALL_BACK_INV() {}$/;"	f
TT_CALL_BACK_INV	test/timer/timerFuncTest.cpp	/^void TT_CALL_BACK_INV()$/;"	f
TT_CALL_BACK_V	test/timer/test-funcclient.cpp	/^void TT_CALL_BACK_V() {}$/;"	f
TT_CALL_BACK_V	test/timer/timerFuncTest.cpp	/^void TT_CALL_BACK_V()$/;"	f
TT_DEST_MODULE_ID_INV	test/timer/test-funcclient.cpp	/^void TT_DEST_MODULE_ID_INV () {}$/;"	f
TT_DEST_MODULE_ID_INV	test/timer/timerFuncTest.cpp	/^void TT_DEST_MODULE_ID_INV()$/;"	f
TT_DEST_MODULE_ID_V	test/timer/test-funcclient.cpp	/^void TT_DEST_MODULE_ID_V () {}$/;"	f
TT_DEST_MODULE_ID_V	test/timer/timerFuncTest.cpp	/^void TT_DEST_MODULE_ID_V()$/;"	f
TT_OPCODE_INV	test/timer/test-funcclient.cpp	/^void TT_OPCODE_INV () {}$/;"	f
TT_OPCODE_INV	test/timer/timerFuncTest.cpp	/^void TT_OPCODE_INV()$/;"	f
TT_OPCODE_V	test/timer/test-funcclient.cpp	/^void TT_OPCODE_V () {}$/;"	f
TT_OPCODE_V	test/timer/timerFuncTest.cpp	/^void TT_OPCODE_V()$/;"	f
TT_START_TIMER_V	test/timer/test-funcclient.cpp	/^void TT_START_TIMER_V () {}	$/;"	f
TT_START_TIMER_V	test/timer/timerFuncTest.cpp	/^void TT_START_TIMER_V () $/;"	f
TT_STOP_TIMER_INV	test/timer/test-funcclient.cpp	/^void TT_STOP_TIMER_INV () {}$/;"	f
TT_STOP_TIMER_INV	test/timer/timerFuncTest.cpp	/^void TT_STOP_TIMER_INV()$/;"	f
TT_STOP_TIMER_V	test/timer/test-funcclient.cpp	/^void TT_STOP_TIMER_V () {}$/;"	f
TT_STOP_TIMER_V	test/timer/timerFuncTest.cpp	/^void TT_STOP_TIMER_V()$/;"	f
TT_TIMER_TYPE_INV	test/timer/test-funcclient.cpp	/^void TT_TIMER_TYPE_INV () {}$/;"	f
TT_TIMER_TYPE_INV	test/timer/timerFuncTest.cpp	/^void TT_TIMER_TYPE_INV()$/;"	f
TT_TIMER_TYPE_V_001	test/timer/test-funcclient.cpp	/^void TT_TIMER_TYPE_V_001 (){}$/;"	f
TT_TIMER_TYPE_V_001	test/timer/timerFuncTest.cpp	/^void TT_TIMER_TYPE_V_001()$/;"	f
TT_TIMER_TYPE_V_002	test/timer/test-funcclient.cpp	/^void TT_TIMER_TYPE_V_002 () {}$/;"	f
TT_TIMER_TYPE_V_002	test/timer/timerFuncTest.cpp	/^void TT_TIMER_TYPE_V_002()$/;"	f
TT_TIME_COUNT_INV	test/timer/test-funcclient.cpp	/^void TT_TIME_COUNT_INV () {}$/;"	f
TT_TIME_COUNT_INV	test/timer/timerFuncTest.cpp	/^void TT_TIME_COUNT_INV()$/;"	f
TT_TIME_COUNT_V	test/timer/test-funcclient.cpp	/^void TT_TIME_COUNT_V () {}$/;"	f
TT_TIME_COUNT_V	test/timer/timerFuncTest.cpp	/^void TT_TIME_COUNT_V()$/;"	f
TT_TIME_OUT_REP_TYPE_INV	test/timer/test-funcclient.cpp	/^void TT_TIME_OUT_REP_TYPE_INV() {}$/;"	f
TT_TIME_OUT_REP_TYPE_INV	test/timer/timerFuncTest.cpp	/^void TT_TIME_OUT_REP_TYPE_INV()$/;"	f
TT_TIME_OUT_REP_TYPE_V_001	test/timer/test-funcclient.cpp	/^void TT_TIME_OUT_REP_TYPE_V_001 () {}$/;"	f
TT_TIME_OUT_REP_TYPE_V_001	test/timer/timerFuncTest.cpp	/^void TT_TIME_OUT_REP_TYPE_V_001()$/;"	f
TT_TIME_OUT_REP_TYPE_V_002	test/timer/test-funcclient.cpp	/^void TT_TIME_OUT_REP_TYPE_V_002 () {}$/;"	f
TT_TIME_OUT_REP_TYPE_V_002	test/timer/timerFuncTest.cpp	/^void TT_TIME_OUT_REP_TYPE_V_002()$/;"	f
TT_TIME_UNIT_INV	test/timer/test-funcclient.cpp	/^void TT_TIME_UNIT_INV () {}$/;"	f
TT_TIME_UNIT_INV	test/timer/timerFuncTest.cpp	/^void TT_TIME_UNIT_INV()$/;"	f
TT_TIME_UNIT_V_001	test/timer/test-funcclient.cpp	/^void TT_TIME_UNIT_V_001 () {}$/;"	f
TT_TIME_UNIT_V_001	test/timer/timerFuncTest.cpp	/^void TT_TIME_UNIT_V_001()$/;"	f
TT_TIME_UNIT_V_002	test/timer/test-funcclient.cpp	/^void TT_TIME_UNIT_V_002 () {}$/;"	f
TT_TIME_UNIT_V_002	test/timer/timerFuncTest.cpp	/^void TT_TIME_UNIT_V_002()$/;"	f
TT_TIME_UNIT_V_003	test/timer/test-funcclient.cpp	/^void TT_TIME_UNIT_V_003 () {}$/;"	f
TT_TIME_UNIT_V_003	test/timer/timerFuncTest.cpp	/^void TT_TIME_UNIT_V_003()$/;"	f
TT_TIME_UNIT_V_004	test/timer/test-funcclient.cpp	/^void TT_TIME_UNIT_V_004 () {}$/;"	f
TT_TIME_UNIT_V_004	test/timer/timerFuncTest.cpp	/^void TT_TIME_UNIT_V_004()$/;"	f
TT_TIME_UNIT_V_005	test/timer/test-funcclient.cpp	/^void TT_TIME_UNIT_V_005 () {}$/;"	f
TT_TIME_UNIT_V_005	test/timer/timerFuncTest.cpp	/^void TT_TIME_UNIT_V_005()$/;"	f
TZ_1021	include/cdsucharhash.h	/^		TZ_1021	 = 1021,$/;"	e	enum:CdSuCharHash::TableSize
TZ_1021	include/cdsuinthash.h	/^		TZ_1021	 = 1021,$/;"	e	enum:CdSuIntHash::TableSize
TZ_1021	include/cdsumbhash.h	/^		TZ_1021	 = 1021,$/;"	e	enum:CdSuMultiByteHash::TableSize
TZ_16381	include/cdsucharhash.h	/^		TZ_16381 = 16381$/;"	e	enum:CdSuCharHash::TableSize
TZ_16381	include/cdsuinthash.h	/^		TZ_16381 = 16381$/;"	e	enum:CdSuIntHash::TableSize
TZ_16381	include/cdsumbhash.h	/^		TZ_16381 = 16381$/;"	e	enum:CdSuMultiByteHash::TableSize
TZ_2039	include/cdsucharhash.h	/^		TZ_2039 = 2039,$/;"	e	enum:CdSuCharHash::TableSize
TZ_2039	include/cdsuinthash.h	/^		TZ_2039 = 2039,$/;"	e	enum:CdSuIntHash::TableSize
TZ_2039	include/cdsumbhash.h	/^		TZ_2039 = 2039,$/;"	e	enum:CdSuMultiByteHash::TableSize
TZ_251	include/cdsucharhash.h	/^		TZ_251 = 251,$/;"	e	enum:CdSuCharHash::TableSize
TZ_251	include/cdsuinthash.h	/^		TZ_251 = 251,$/;"	e	enum:CdSuIntHash::TableSize
TZ_251	include/cdsumbhash.h	/^		TZ_251 = 251,$/;"	e	enum:CdSuMultiByteHash::TableSize
TZ_4093	include/cdsucharhash.h	/^		TZ_4093 = 4093,$/;"	e	enum:CdSuCharHash::TableSize
TZ_4093	include/cdsuinthash.h	/^		TZ_4093 = 4093,$/;"	e	enum:CdSuIntHash::TableSize
TZ_4093	include/cdsumbhash.h	/^		TZ_4093 = 4093,$/;"	e	enum:CdSuMultiByteHash::TableSize
TZ_509	include/cdsucharhash.h	/^		TZ_509 = 509,$/;"	e	enum:CdSuCharHash::TableSize
TZ_509	include/cdsuinthash.h	/^		TZ_509 = 509,$/;"	e	enum:CdSuIntHash::TableSize
TZ_509	include/cdsumbhash.h	/^		TZ_509 = 509,$/;"	e	enum:CdSuMultiByteHash::TableSize
TZ_8191	include/cdsucharhash.h	/^		TZ_8191 = 8191,$/;"	e	enum:CdSuCharHash::TableSize
TZ_8191	include/cdsuinthash.h	/^		TZ_8191 = 8191,$/;"	e	enum:CdSuIntHash::TableSize
TZ_8191	include/cdsumbhash.h	/^		TZ_8191 = 8191,$/;"	e	enum:CdSuMultiByteHash::TableSize
TableSize	include/cdsucharhash.h	/^	enum TableSize$/;"	g	class:CdSuCharHash
TableSize	include/cdsuinthash.h	/^	enum TableSize$/;"	g	class:CdSuIntHash
TableSize	include/cdsumbhash.h	/^	enum TableSize$/;"	g	class:CdSuMultiByteHash
TdmInterface	test/udpnh/basic-test/tdmIf.cpp	/^TdmInterface::TdmInterface ()$/;"	f	class:TdmInterface
TdmInterface	test/udpnh/basic-test/tdmIf.h	/^class TdmInterface {$/;"	c
TdmInterface	test/udpnh/load-testing/tdmIf.cpp	/^TdmInterface::TdmInterface ()$/;"	f	class:TdmInterface
TdmInterface	test/udpnh/load-testing/tdmIf.h	/^class TdmInterface {$/;"	c
TdmIntfType	test/udpnh/basic-test/tdmIf.h	/^	enum TdmIntfType {$/;"	g	class:TdmInterface
TdmIntfType	test/udpnh/load-testing/tdmIf.h	/^	enum TdmIntfType {$/;"	g	class:TdmInterface
Test-Cases	docs/verification/mtp/timer/index.html	/^<h2><a name="Test-Cases"><\/a>9.Test Cases and its Specification<\/h2>$/;"	a
Test-Menu.	docs/verification/mtp/timer/index.html	/^<h3><a name="Test-Menu."><\/a>6.3 Test Menu.<\/h3>$/;"	a
TestBpTransId	test/mbhash-test.cpp	/^	TestBpTransId () {}$/;"	f	struct:TestBpTransId
TestBpTransId	test/mbhash-test.cpp	/^	TestBpTransId (unsigned int servHlrId, unsigned int txnSeq)$/;"	f	struct:TestBpTransId
TestBpTransId	test/mbhash-test.cpp	/^struct TestBpTransId$/;"	s	file:
TestCallHlr	test/mbhash-test.cpp	/^	TestCallHlr () {}$/;"	f	struct:TestCallHlr
TestCallHlr	test/mbhash-test.cpp	/^	TestCallHlr (TestCallHlrId chid)$/;"	f	struct:TestCallHlr
TestCallHlr	test/mbhash-test.cpp	/^struct TestCallHlr $/;"	s	file:
TestCallHlrId	test/mbhash-test.cpp	/^	TestCallHlrId () {}$/;"	f	struct:TestCallHlrId
TestCallHlrId	test/mbhash-test.cpp	/^	TestCallHlrId (char* callId)$/;"	f	struct:TestCallHlrId
TestCallHlrId	test/mbhash-test.cpp	/^struct  TestCallHlrId$/;"	s	file:
TestCases	test/queue-test.cpp	/^struct TestCases$/;"	s	file:
TestCases	test/timer/test-funcclient.cpp	/^struct TestCases $/;"	s	file:
TestCases	test/timer/test-listclient.cpp	/^struct TestCases $/;"	s	file:
TestCases	test/timer/timerFuncTest.cpp	/^struct TestCases $/;"	s	file:
TestCases	test/tsqueue-test.cpp	/^struct TestCases$/;"	s	file:
TestThread	test/bukmsgthrd.cpp	/^class TestThread:public CdSuThread$/;"	c	file:
TestThread	test/bukmsgthrd2.cpp	/^class TestThread:public CdSuThread$/;"	c	file:
TestThread	test/thread-test.cpp	/^class TestThread:public CdSuThread$/;"	c	file:
TesterTask1	test/taskscheduler-test.cpp	/^	TesterTask1 () {}$/;"	f	class:TesterTask1
TesterTask1	test/taskscheduler-test.cpp	/^class TesterTask1 : public CdSuTask$/;"	c	file:
TesterTask2	test/taskscheduler-test.cpp	/^	TesterTask2 () {}$/;"	f	class:TesterTask2
TesterTask2	test/taskscheduler-test.cpp	/^class TesterTask2 : public CdSuTask $/;"	c	file:
Testing-Environment	docs/verification/mtp/timer/index.html	/^<h2><a name="Testing-Environment"><\/a>6. Testing Environment<\/h2>$/;"	a
TimeOutTime	test/timer/timerBasic.cpp	/^	timeval TimeOutTime;$/;"	m	struct:OutPut	file:
TimeOutTime	test/timer/timerCascade.cpp	/^	timeval TimeOutTime;$/;"	m	struct:OutPut	file:
TimeOutTime	test/timer/timerPerfStartTest.cpp	/^	timeval TimeOutTime;$/;"	m	struct:OutPut	file:
Timezone	test/timer/timerBasic.cpp	/^struct timezone* Timezone;$/;"	v	typeref:struct:timezone
Timezone	test/timer/timerCascade.cpp	/^struct timezone* Timezone;$/;"	v	typeref:struct:timezone
Timezone	test/timer/timerPerfStartTest.cpp	/^struct timezone* Timezone;$/;"	v	typeref:struct:timezone
Timezone	test/timer/timerPerfStopTest.cpp	/^struct timezone* Timezone;$/;"	v	typeref:struct:timezone
UDPNHDIR	src/Makefile	/^UDPNHDIR = .\/udpnh$/;"	m
Uchar	include/cdsuutiltypes-c.h	/^typedef unsigned char Uchar; 	\/\/ unsigned char (Range: 0 - 255)$/;"	t
Uchar	include/cdsuutiltypes.h	/^typedef unsigned char Uchar; 	\/\/ unsigned char (Range: 0 - 255)$/;"	t
Uint16	include/cdsuutiltypes-c.h	/^typedef unsigned short Uint16;	\/\/ 16-bit unsigned int (Range: 0 to 65535)$/;"	t
Uint16	include/cdsuutiltypes-c.h	27;"	d
Uint16	include/cdsuutiltypes.h	/^typedef unsigned short Uint16;	\/\/ 16-bit unsigned int (Range: 0 to 65535)$/;"	t
Uint16	src/msgdistr/cdsunhudpglobals.h	/^typedef unsigned short int Uint16;$/;"	t
Uint32	include/cdsuutiltypes-c.h	/^typedef unsigned int Uint32; 	\/\/ 32-bit unsigned int (Range: 0 to 4294967295$/;"	t
Uint32	include/cdsuutiltypes-c.h	28;"	d
Uint32	include/cdsuutiltypes.h	/^typedef unsigned int Uint32; 	\/\/ 32-bit unsigned int (Range: 0 to 4294967295$/;"	t
Uint32	src/timer/cdsukeyallocator.h	/^typedef unsigned int Uint32;$/;"	t
Uint8	include/cdsuutiltypes-c.h	/^typedef unsigned char Uint8; 	\/\/ unsigned byte (Range: 0 - 255)$/;"	t
Uint8	include/cdsuutiltypes-c.h	26;"	d
Uint8	include/cdsuutiltypes.h	/^typedef unsigned char Uint8; 	\/\/ unsigned byte (Range: 0 - 255)$/;"	t
Ulong	include/cdsuutiltypes-c.h	/^typedef unsigned long Ulong;	\/\/ Ulong-32 bit unsigned integer in 32 bit m\/c and 64 bit integer in 64 bit m\/c$/;"	t
Ulong	include/cdsuutiltypes.h	/^typedef unsigned long Ulong;	\/\/ Ulong-32 bit unsigned integer in 32 bit m\/c and 64 bit integer in 64 bit m\/c$/;"	t
Usage-Exle	docs/design/mdd/timer/index.html	/^<h3><a name="Usage-Exle"><\/a>7.Usage Exle<\/h3>$/;"	a
User-Characteristics	docs/reqs/srs/timer/index.html	/^<h3><a name="User-Characteristics"><\/a>2.3 User Characteristics<\/h3>$/;"	a
VALID	test/udpnh/basic-test/parameter.h	/^	VALID,$/;"	e	enum:DestPortType
ZERO	test/udpnh/basic-test/parameter.h	/^	ZERO = 0,$/;"	e	enum:DestPortType
_CDSU_TIMER_H_	include/cdsutimer.h	2;"	d
__CDSUQUEUE_H_	include/cdsuqueue.h	3;"	d
__CDSUTMR_H_	src/timer/cdsutimingwheel.h	2;"	d
__CDSU_NHSTSDB_H	src/tcpnh/cdsunhtcpstatspkg.h	2;"	d
__CDSU_NHSTSDB_H	src/udpnh/cdsunhudpstatspkg.h	2;"	d
__CDSU_NHTCPAPI_H	src/tcpnh/cdsunhtcptypes.h	2;"	d
__CDSU_NHTCPAPI_H__	include/cdsunhtcpapi.h	2;"	d
__CDSU_NHTCPAPI_PARAM_H	src/tcpnh/cdsunhtcpapiparam.h	2;"	d
__CDSU_NHTCPDB_H	src/tcpnh/cdsunhtcpdb.h	2;"	d
__CDSU_NHTCP_APIPARAM_CHK	src/tcpnh/cdsunhtcpapiparamchk.h	2;"	d
__CDSU_NHTCP_FUNC_H	src/tcpnh/cdsunhtcpfunc.h	2;"	d
__CDSU_NHTCP_INSTMGR_	src/tcpnh/cdsunhtcpinstmgr.h	2;"	d
__CDSU_NHTCP_MESSAGE_H_	src/tcpnh/cdsunhtcpmsg.h	2;"	d
__CDSU_NHUDPAPI_H__	include/cdsunhudpapi.h	2;"	d
__CDSU_NHUDPDB_H	src/udpnh/cdsunhudpdb.h	2;"	d
__CDSU_NHUDPFUNC_H__	src/udpnh/cdsunhudpfunc.h	2;"	d
__CDSU_NHUDPPARAM_H__	src/udpnh/cdsunhudpapiparam.h	2;"	d
__CDSU_NHUDPTYPES_H__	src/udpnh/cdsunhudptypes.h	2;"	d
__CDSU_NHUDP_APIPARAM_CHK	src/udpnh/cdsunhudpapiparamchk.h	2;"	d
__CDSU_NHUDP_DB_H__	src/msgdistr/cdsunhudpdb.h	2;"	d
__CDSU_NHUDP_INSTMGR_	src/udpnh/cdsunhudpinstmgr.h	2;"	d
__CDSU_NHUDP_MESSAGE_H_	src/udpnh/cdsunhudpmsg.h	2;"	d
__CDSU_NHUDP_TXPT_SERVICES_H__	src/msgdistr/cdsunhudptxptsrvc.h	2;"	d
__CDSU_SANITY_H__	include/cdsusanity.h	2;"	d
__CDSU_SANITY_MSGS_H__	include/cdsusanitymsgs.h	2;"	d
__CDSU_TCP_NETWORK_HANDLER_H	src/tcpnh/cdsunhtcp.h	2;"	d
__CDSU_THREAD_H_	include/cdsuthread.h	2;"	d
__CDSU_UDP_NETWORK_HANDLER_H	src/udpnh/cdsunhudp.h	2;"	d
__CDSU_UNIXMEMMON_H__	include/cdsuunixmemmon.h	2;"	d
__CDSU__NHUDP_GLOBALS_H__	src/msgdistr/cdsunhudpglobals.h	2;"	d
__KeyAllocator_H_	src/timer/cdsukeyallocator.h	2;"	d
_instance	test/timer/cdsu_counter.h	/^	static CdSuCounter* _instance;$/;"	m	class:CdSuCounter
_instance	test/timer/cdsu_counter.h	/^CdSuCounter* CdSuCounter::_instance = 0;$/;"	m	class:CdSuCounter
a	test/msgdistr-test.h	/^	unsigned int a;$/;"	m	struct:MyTestMsg
activityFlag	src/tcpnh/cdsunhtcp.h	/^	bool activityFlag;$/;"	m	class:CdSuNhTcp
activityFlag	src/udpnh/cdsunhudp.h	/^	bool activityFlag;			\/\/ Activity Flag$/;"	m	class:CdSuNhUdp
add	include/cdsuqueue.h	/^bool CdSuQueue<KeyType>::add (const KeyType& x)$/;"	f	class:CdSuQueue
add	include/cdsutsqueue.h	/^bool CdSuTsQueue<KeyType>::add (const KeyType& x)$/;"	f	class:CdSuTsQueue
add	src/timer/cdsutimingwheel.cpp	/^CdSuTnode* CdSuTimingWheel::add (const CdSuTimerInfo& timerInfo, CdSuTimerId& timerId )$/;"	f	class:CdSuTimingWheel
add-com	docs/reqs/srs/nhtcp/index.html	/^<h3><a name="add-com">3.8 Additional Comments<\/a><\/h3>$/;"	a
add-com	docs/reqs/srs/nhudp/index.html	/^<h3><a name="add-com">3.8 Additional Comments<\/a><\/h3>$/;"	a
addAUdpPort	test/udpnh/load-testing/testfunctions.cpp	/^void addAUdpPort ()$/;"	f
addFullQueueTest	test/queue-test.cpp	/^bool addFullQueueTest ()$/;"	f
addFullQueueTest	test/tsqueue-test.cpp	/^bool addFullQueueTest ()$/;"	f
addListener	src/tcpnh/cdsunhtcp.cpp	/^CdSuNhTcpFailCode CdSuNhTcp::addListener (CdSuIpv4Addr selfIpAddr, $/;"	f	class:CdSuNhTcp
addListener	test/tcpnh/basictest/testfunctions.cpp	/^void addListener ()$/;"	f
addListener	test/tcpnh/featuretest/testfunctions.cpp	/^bool addListener (bool flag)$/;"	f
addListnInValid	test/tcpnh/featuretest/testfunctions.cpp	/^void addListnInValid ()$/;"	f
addListnValid	test/tcpnh/featuretest/testfunctions.cpp	/^void addListnValid ()$/;"	f
addLstnMsgHlr	src/tcpnh/cdsunhtcp.cpp	/^void CdSuNhTcp::addLstnMsgHlr (CdMessage* msg)$/;"	f	class:CdSuNhTcp
addLstnReqParam	src/tcpnh/cdsunhtcpmsg.h	/^	CdSuNhTcpUiAddLstnReqParam addLstnReqParam;$/;"	m	struct:CdSuNhTcpUiAddLstnReqMsg
addLstnRspEvent	src/tcpnh/cdsunhtcpmsg.h	/^	CdSuNhTcpUiAddLstnRspEvent addLstnRspEvent;$/;"	m	struct:CdSuNhTcpUiAddLstnRspMsg
addNUdpPort	test/udpnh/load-testing/testfunctions.cpp	/^void addNUdpPort ()$/;"	f
addNhTcpInst	src/tcpnh/cdsunhtcpinstmgr.cpp	/^CdSuNhTcpInstId CdSuNhTcpInstMgr::addNhTcpInst (const CdSuNhTcpMiInitParam& iparam)$/;"	f	class:CdSuNhTcpInstMgr
addNhUdpInst	src/udpnh/cdsunhudpinstmgr.cpp	/^CdSuNhUdpInstId CdSuNhUdpInstMgr::addNhUdpInst (const CdSuNhUdpMiInitParam& initParam)$/;"	f	class:CdSuNhUdpInstMgr
addPopBlockingTest	test/tsqueue-test.cpp	/^bool addPopBlockingTest ()$/;"	f
addPopNonBlockingTest	test/tsqueue-test.cpp	/^bool addPopNonBlockingTest ()$/;"	f
addPopTest	test/queue-test.cpp	/^bool addPopTest ()$/;"	f
addTask	src/misc/cdsutaskscheduler.cpp	/^CdSuTaskId CdSuTaskScheduler::addTask (CdSuTask* task)$/;"	f	class:CdSuTaskScheduler
addUdpPort	src/udpnh/cdsunhudp.cpp	/^CdSuNhUdpRspFailCode CdSuNhUdp::addUdpPort (const CdSuNhUdpPortId& udpPortId,$/;"	f	class:CdSuNhUdp
addUdpPort	test/udpnh/basic-test/testfunctions.cpp	/^void addUdpPort ()$/;"	f
addUdpPortReqMsgHlr	src/udpnh/cdsunhudp.cpp	/^void CdSuNhUdp::addUdpPortReqMsgHlr (CdMessage* msg)$/;"	f	class:CdSuNhUdp
addUdpPortReqParam	src/udpnh/cdsunhudpmsg.h	/^	CdSuNhUdpUiAddUdpPortReqParam addUdpPortReqParam;	\/\/ Add Udp Port Request Param$/;"	m	struct:CdSuNhUdpUiAddUdpPortReqMsg
addUdpPortReqParam	test/udpnh/basic-test/parameter.h	/^CdSuNhUdpUiAddUdpPortReqParam addUdpPortReqParam;$/;"	v
addUdpPortReqParam	test/udpnh/load-testing/parameter.h	/^CdSuNhUdpUiAddUdpPortReqParam addUdpPortReqParam;$/;"	v
addUdpPortRspEvent	src/udpnh/cdsunhudpmsg.h	/^	CdSuNhUdpUiAddUdpPortRspEvent addUdpPortRspEvent;	\/\/ Add Udp Port Response Event Param.$/;"	m	struct:CdSuNhUdpUiAddUdpPortRspMsg
afterTO	test/timer/timerBasic.cpp	/^	int afterTO;$/;"	m	struct:Input	file:
afterTO	test/timer/timerCascade.cpp	/^	int afterTO;$/;"	m	struct:Input	file:
alarm_action	test/tcpnh/basictest/timerdef.cpp	/^void alarm_action (Cyg_Alarm *ca, CYG_ADDRWORD data)$/;"	f
alarm_action	test/tcpnh/featuretest/timerdef.cpp	/^void alarm_action (Cyg_Alarm *ca, CYG_ADDRWORD data)$/;"	f
alarm_action	test/timer/sup-test.cpp	/^void alarm_action (Cyg_Alarm *ca, CYG_ADDRWORD data)$/;"	f
alarm_action	test/udpnh/basic-test/timerdef.cpp	/^void alarm_action (Cyg_Alarm *ca, CYG_ADDRWORD data)$/;"	f
alarm_action	test/udpnh/load-testing/timerdef.cpp	/^void alarm_action (Cyg_Alarm *ca, CYG_ADDRWORD data)$/;"	f
alarm_obj	test/tcpnh/basictest/timerdef.cpp	/^static cyg_uint8 alarm_obj [sizeof(Cyg_Alarm)];$/;"	v	file:
alarm_obj	test/tcpnh/featuretest/timerdef.cpp	/^static cyg_uint8 alarm_obj [sizeof(Cyg_Alarm)];$/;"	v	file:
alarm_obj	test/timer/sup-test.cpp	/^static cyg_uint8 alarm_obj [sizeof(Cyg_Alarm)];$/;"	v	file:
alarm_obj	test/udpnh/basic-test/timerdef.cpp	/^static cyg_uint8 alarm_obj [sizeof(Cyg_Alarm)];$/;"	v	file:
alarm_obj	test/udpnh/load-testing/timerdef.cpp	/^static cyg_uint8 alarm_obj [sizeof(Cyg_Alarm)];$/;"	v	file:
allocConnId	src/tcpnh/cdsunhtcpdb.cpp	/^CdSuNhTcpConnId CdSuNhTcpDb::NhTcpConnIdAllocator::allocConnId ()$/;"	f	class:CdSuNhTcpDb::NhTcpConnIdAllocator
allocConnId	src/tcpnh/cdsunhtcpdb.h	/^	inline CdSuNhTcpConnId allocConnId () $/;"	f	class:CdSuNhTcpDb
allocLstnId	src/tcpnh/cdsunhtcpdb.cpp	/^CdSuNhTcpLstnId CdSuNhTcpDb::NhTcpLstnIdAllocator::allocLstnId ()$/;"	f	class:CdSuNhTcpDb::NhTcpLstnIdAllocator
allocLstnId	src/tcpnh/cdsunhtcpdb.h	/^	inline CdSuNhTcpLstnId allocLstnId ()$/;"	f	class:CdSuNhTcpDb
allocUdpPortId	src/udpnh/cdsunhudpdb.cpp	/^CdSuNhUdpPortId CdSuNhUdpDb::NhUdpPortIdAllocator::allocUdpPortId ()$/;"	f	class:CdSuNhUdpDb::NhUdpPortIdAllocator
allocUdpPortId	src/udpnh/cdsunhudpdb.h	/^	inline CdSuNhUdpPortId allocUdpPortId () $/;"	f	class:CdSuNhUdpDb
api	docs/reqs/srs/nhtcp/index.html	/^<h3><a name="api">2.1.5 API<\/a><\/h3>$/;"	a
apiRtTypeString	test/tcpnh/basictest/parameter.h	/^char apiRtTypeString  [] [100] =$/;"	v
apiRtTypeString	test/tcpnh/featuretest/parameter.h	/^char apiRtTypeString  [] [100] =$/;"	v
apiRtTypeString	test/udpnh/basic-test/parameter.h	/^char apiRtTypeString  [] [100] =$/;"	v
apiRtTypeString	test/udpnh/load-testing/parameter.h	/^char apiRtTypeString  [] [100] =$/;"	v
apiif	docs/design/mdd/nhtcp/index.html	/^<A NAME="apiif"><\/A>$/;"	a
apiif	docs/design/mdd/nhudp/index.html	/^<A NAME="apiif"><\/A>$/;"	a
appId	include/cdsuutiltypes-c.h	/^	Uint8   appId;          \/\/ Instance number$/;"	m	struct:CdAppSrvcHlrId
appId	include/cdsuutiltypes.h	/^                        Uint8   appId;          \/\/ Instance number$/;"	m	struct:CdServiceHandlerId::__anon20::__anon21
appModuleId	include/cdsuutiltypes-c.h	/^	Uint8   appModuleId;    \/\/ indicates submodules $/;"	m	struct:CdAppSrvcHlrId
appModuleId	include/cdsuutiltypes.h	/^                        Uint8   appModuleId;    \/\/ indicates submodules $/;"	m	struct:CdServiceHandlerId::__anon20::__anon21
appSrvcHlrId	include/cdsuutiltypes-c.h	/^	CdAppSrvcHlrId appSrvcHlrId;$/;"	m	struct:CdServiceHandlerId
appSrvcHlrId	include/cdsuutiltypes.h	/^                } __attribute__ ((packed)) appSrvcHlrId;$/;"	m	union:CdServiceHandlerId::__anon20	typeref:struct:CdServiceHandlerId::__anon20::__anon21
appType	include/cdsuutiltypes-c.h	/^	Uint8   appType;        \/\/ Application type$/;"	m	struct:CdAppSrvcHlrId
appType	include/cdsuutiltypes.h	/^                        Uint8   appType;        \/\/ Application type$/;"	m	struct:CdServiceHandlerId::__anon20::__anon21
applActorId	src/tcpnh/cdsunhtcp.h	/^	CdSuActorId applActorId;		\/\/ Application Actor Id.		$/;"	m	struct:CdSuNhTcpConnInfo
applActorId	src/tcpnh/cdsunhtcp.h	/^	CdSuActorId applActorId;		\/\/ Application Actor Id.		$/;"	m	struct:CdSuNhTcpLstnInfo
applActorId	src/tcpnh/cdsunhtcpapiparam.h	/^	CdSuActorId applActorId;		\/\/ Report Events to this actor.$/;"	m	struct:CdSuNhTcpUiCloseConReqParam
applActorId	src/tcpnh/cdsunhtcpapiparam.h	/^	CdSuActorId applActorId;		\/\/ Report Events to this actor.$/;"	m	struct:CdSuNhTcpUiConReqParam
applActorId	src/tcpnh/cdsunhtcpapiparam.h	/^	CdSuActorId applActorId;		\/\/ Report Events to this actor.$/;"	m	struct:CdSuNhTcpUiConnEvent
applActorId	src/tcpnh/cdsunhtcpapiparam.h	/^	CdSuActorId applActorId;		\/\/ Report Events to this actor.$/;"	m	struct:CdSuNhTcpUiDataReqParam
applActorId	src/tcpnh/cdsunhtcpapiparam.h	/^	CdSuActorId applActorId;		\/\/ Report Events to this actor.$/;"	m	struct:CdSuNhTcpUiLstnEvent
applActorId	src/tcpnh/cdsunhtcpapiparam.h	/^	CdSuActorId applActorId;		\/\/ Report events to this actor.$/;"	m	struct:CdSuNhTcpUiAddLstnReqParam
applActorId	src/tcpnh/cdsunhtcpapiparam.h	/^	CdSuActorId applActorId;		\/\/ Report events to this actor.$/;"	m	struct:CdSuNhTcpUiRemLstnReqParam
applActorId	src/udpnh/cdsunhudp.h	/^		CdSuActorId applActorId;	\/\/ Application Actor Id who opened udp port.		$/;"	m	struct:CdSuNhUdp::CdSuNhUdpPortInfo
applActorId	src/udpnh/cdsunhudpapiparam.h	/^	CdSuActorId applActorId;		\/\/ Application Actor ID.$/;"	m	struct:CdSuNhUdpUiAddUdpPortReqParam
applActorId	src/udpnh/cdsunhudpapiparam.h	/^	CdSuActorId applActorId;		\/\/ Application Actor ID.$/;"	m	struct:CdSuNhUdpUiRemUdpPortReqParam
applActorId	src/udpnh/cdsunhudpapiparam.h	/^	CdSuActorId applActorId;	\/\/ Application Actor ID.$/;"	m	struct:CdSuNhUdpUiDataReqParam
applActorId	src/udpnh/cdsunhudpapiparam.h	/^	CdSuActorId applActorId;	\/\/ Application Actor ID.$/;"	m	struct:CdSuNhUdpUiEvent
applActorId	src/udpnh/cdsunhudpapiparam.h	/^	CdSuActorId applActorId;	\/\/ Where to response.$/;"	m	struct:CdSuNhUdpUiSendReqParam
applEventHlr	src/udpnh/cdsunhudp.h	/^		CdSuNhUdpEventHlr applEventHlr; \/\/ Event Handler to be notified for events on$/;"	m	struct:CdSuNhUdp::CdSuNhUdpPortInfo
applEventHlr	src/udpnh/cdsunhudpapiparam.h	/^	CdSuNhUdpEventHlr applEventHlr;		\/\/ Callback function pointer.$/;"	m	struct:CdSuNhUdpUiAddUdpPortReqParam
applEventHlr	src/udpnh/cdsunhudpapiparam.h	/^	CdSuNhUdpEventHlr applEventHlr; 	\/\/ Callback Function Pointer. $/;"	m	struct:CdSuNhUdpUiRemUdpPortReqParam
applEventHlr	src/udpnh/cdsunhudpapiparam.h	/^	CdSuNhUdpEventHlr applEventHlr; \/\/ Callback function Pointer.$/;"	m	struct:CdSuNhUdpUiSendReqParam
applEventHlr	src/udpnh/cdsunhudpapiparam.h	/^	CdSuNhUdpEventHlr applEventHlr; \/\/ check whether it is required. $/;"	m	struct:CdSuNhUdpUiDataReqParam
applEventHlr	test/udpnh/basic-test/testfunctions.cpp	/^void applEventHlr (void* arg)$/;"	f
applEventHlr	test/udpnh/load-testing/testfunctions.cpp	/^void applEventHlr (void* arg)$/;"	f
applEventHlr	test/udpnh/testing-mul-nh-support/tester.cpp	/^void applEventHlr (void* arg)$/;"	f
applEventHlrForMsgIntf	test/udpnh/testing-mul-nh-support/tester.cpp	/^void applEventHlrForMsgIntf (void* arg)$/;"	f
applEventHlrForMsgIntf	test/udpnh/testing-mul-nh-usr-support/tester.cpp	/^void applEventHlrForMsgIntf (void* arg)$/;"	f
applEventHlrForMsgIntf	test/udpnh/testing-mul-user-support/tester.cpp	/^void applEventHlrForMsgIntf (void* arg)$/;"	f
applMid	src/msgdistr/cdsunhudpdb.h	/^	CdModuleId applMid;$/;"	m	class:CdSuNwhlrDb
applMid1	test/bukmsgthrd.cpp	/^CdModuleId applMid1;$/;"	v
applMid1	test/bukmsgthrd2.cpp	/^CdModuleId applMid1;$/;"	v
applMid1	test/msgdistr-test.cpp	/^CdModuleId applMid1;$/;"	v
applMid2	test/bukmsgthrd.cpp	/^CdModuleId applMid2;$/;"	v
applMid2	test/bukmsgthrd2.cpp	/^CdModuleId applMid2;$/;"	v
applMid2	test/msgdistr-test.cpp	/^CdModuleId applMid2;$/;"	v
applMid2	test/msgdistr2-test.cpp	/^CdModuleId applMid2;$/;"	v
applMid3	test/msgdistr-test.cpp	/^CdModuleId applMid3;$/;"	v
applMid3	test/msgdistr2-test.cpp	/^CdModuleId applMid3;$/;"	v
applMid4	test/msgdistr-test.cpp	/^CdModuleId applMid4;$/;"	v
applQ	src/msgdistr/cdsunhudpdb.h	/^	CdSuTsQueue<CdMessage*>* applQ;$/;"	m	class:CdSuNwhlrDb
applReqStart	test/udpnh/testing-mul-nh-usr-support/tester.cpp	/^void* applReqStart (void* arg)$/;"	f
applSemaphore	test/udpnh/testing-mul-nh-usr-support/tester.cpp	/^sem_t applSemaphore [2];$/;"	v
applStart	test/udpnh/basic-test/testfunctions.cpp	/^void* applStart (void* arg)$/;"	f
applStart	test/udpnh/load-testing/testfunctions.cpp	/^void* applStart (void* arg)$/;"	f
applStart	test/udpnh/testing-mul-nh-support/tester.cpp	/^void* applStart (void* arg)$/;"	f
applStart	test/udpnh/testing-mul-nh-usr-support/tester.cpp	/^void* applStart (void* arg)$/;"	f
applStart	test/udpnh/testing-mul-user-support/tester.cpp	/^void* applStart (void* arg)$/;"	f
applThrdStart	test/tcpnh/basictest/testfunctions.cpp	/^void* applThrdStart (void*)$/;"	f
applThrdStart	test/tcpnh/featuretest/testfunctions.cpp	/^void* applThrdStart (void*)$/;"	f
applThread1	test/msgdistr-test.cpp	/^pthread_t applThread1;$/;"	v
applThread2	test/msgdistr-test.cpp	/^pthread_t applThread2;$/;"	v
applThread2	test/msgdistr2-test.cpp	/^pthread_t applThread2;$/;"	v
applThreadSpace	test/msgdistr2-test.cpp	/^char applThreadSpace [1024 * 16];$/;"	v
applThreadSpace	test/udpnh/basic-test/testfunctions.cpp	/^char applThreadSpace[PTHREAD_STACK_MIN * 32];$/;"	v
applThreadSpace	test/udpnh/load-testing/testfunctions.cpp	/^char applThreadSpace[PTHREAD_STACK_MIN * 32];$/;"	v
applThreadSpace	test/udpnh/testing-mul-nh-support/tester.cpp	/^char applThreadSpace[PTHREAD_STACK_MIN * 32];$/;"	v
applThreadSpace	test/udpnh/testing-mul-user-support/tester.cpp	/^char applThreadSpace[PTHREAD_STACK_MIN * 32];$/;"	v
applThreadSpace1	test/msgdistr-test.cpp	/^char applThreadSpace1 [1024 * 16];$/;"	v
applThreadSpace2	test/msgdistr-test.cpp	/^char applThreadSpace2 [1024 * 16];$/;"	v
applicationStart1	test/bukmsgthrd.cpp	/^void* TestThread::applicationStart1 (void* dummy1)$/;"	f	class:TestThread
applicationStart1	test/msgdistr-test.cpp	/^void* applicationStart1 (void* dummy1)$/;"	f
applicationStart2	test/bukmsgthrd2.cpp	/^void* TestThread::applicationStart2 (void* dummy2)$/;"	f	class:TestThread
applicationStart2	test/msgdistr-test.cpp	/^void* applicationStart2 (void* dummy2)$/;"	f
applicationStart2	test/msgdistr2-test.cpp	/^void* applicationStart2 (void*)$/;"	f
applnModId	test/tcpnh/basictest/parameter.h	/^CdSuActorId applnModId;			\/\/ Application Actor ID.$/;"	v
applnModId	test/tcpnh/featuretest/parameter.h	/^CdSuActorId applnModId;			\/\/ Application Actor ID.$/;"	v
applnModId	test/tcpnh/mp3Streamer/mp3StreamServer.cpp	/^CdSuActorId Mp3StreamServer::applnModId;		\/\/ Application Mod Id$/;"	m	class:Mp3StreamServer	file:
applnModId	test/tcpnh/mp3Streamer/mp3StreamServer.h	/^	static CdSuActorId applnModId;$/;"	m	class:Mp3StreamServer
applnModId	test/udpnh/basic-test/parameter.h	/^CdSuActorId applnModId;		\/\/ Application Actor ID.$/;"	v
applnModId	test/udpnh/load-testing/parameter.h	/^CdSuActorId applnModId;		\/\/ Application Actor ID.$/;"	v
applnModId	test/udpnh/testing-mul-nh-support/tester.cpp	/^CdSuActorId applnModId;		\/\/ Application Actor ID.$/;"	v
applnModId	test/udpnh/testing-mul-nh-usr-support/tester.cpp	/^CdSuActorId applnModId [2];		\/\/ Application Actor ID.$/;"	v
applnModId	test/udpnh/testing-mul-user-support/tester.cpp	/^CdSuActorId applnModId [4];	\/\/ Application Actor ID.$/;"	v
apr	docs/reqs/srs/nhudp/index.html	/^<a name="apr"><h3>2.6 Apportioning of Requirements<\/h3><\/a>$/;"	a
apx	docs/design/mdd/nhtcp/index.html	/^<a name="apx"><\/a>$/;"	a
apx	docs/design/mdd/nhudp/index.html	/^<a name="apx"><\/a>$/;"	a
asd	docs/reqs/srs/nhtcp/index.html	/^<a name="asd"><h3>2.5 Assumptions and Dependencies<\/h3><\/a>$/;"	a
asd	docs/reqs/srs/nhudp/index.html	/^<a name="asd"><h3>2.5 Assumptions and Dependencies<\/h3><\/a>$/;"	a
attr	docs/reqs/srs/nhtcp/index.html	/^<h3><a name="attr">3.6 Attributes<\/a><\/h3>$/;"	a
attr	docs/reqs/srs/nhudp/index.html	/^<h3><a name="attr">3.6 Software System Attributes<\/a><\/h3>$/;"	a
attr-aval	docs/reqs/srs/nhtcp/index.html	/^<h3><a name="attr-aval">3.6.1 Availability<\/a><\/h3>$/;"	a
attr-aval	docs/reqs/srs/nhudp/index.html	/^<h3><a name="attr-aval">3.6.2 Availability<\/a><\/h3>$/;"	a
attr-cau	docs/reqs/srs/nhtcp/index.html	/^<h3><a name="attr-cau">3.6.5 Caution<\/a><\/h3>$/;"	a
attr-man	docs/reqs/srs/nhtcp/index.html	/^<h3><a name="attr-man">3.6.3 Maintainability<\/a><\/h3>$/;"	a
attr-man	docs/reqs/srs/nhudp/index.html	/^<h3><a name="attr-man">3.6.4 Maintainability<\/a><\/h3>$/;"	a
attr-rel	docs/reqs/srs/nhudp/index.html	/^<h3><a name="attr-rel">3.6.1 Reliability<\/a><\/h3>$/;"	a
attr-sec	docs/reqs/srs/nhtcp/index.html	/^<h3><a name="attr-sec">3.6.2 Security<\/a><\/h3>$/;"	a
attr-sec	docs/reqs/srs/nhudp/index.html	/^<h3><a name="attr-sec">3.6.3 Security<\/a><\/h3>$/;"	a
attr-tran	docs/reqs/srs/nhtcp/index.html	/^<h3><a name="attr-tran">3.6.4 Portability<\/a><\/h3>$/;"	a
attr-tran	docs/reqs/srs/nhudp/index.html	/^<h3><a name="attr-tran">3.6.5 Portability<\/a><\/h3>$/;"	a
b	test/msgdistr-test.h	/^	unsigned int b;$/;"	m	struct:MyTestMsg
back	include/cdsulist.h	/^ValType& CdSuList<ValType>::back ()$/;"	f	class:CdSuList
beforeStart	test/timer/timerBasic.cpp	/^	int beforeStart;$/;"	m	struct:Input	file:
beforeStart	test/timer/timerCascade.cpp	/^	int beforeStart;$/;"	m	struct:Input	file:
begin	include/cdsucharhash.h	/^typename CdSuCharHash<ValType>::iterator CdSuCharHash<ValType>::begin () const $/;"	f	class:CdSuCharHash
begin	include/cdsuinthash.h	/^typename CdSuIntHash<ValType>::iterator CdSuIntHash<ValType>::begin () const $/;"	f	class:CdSuIntHash
begin	include/cdsulist.h	/^typename CdSuList<ValType>::iterator CdSuList<ValType>::begin () const $/;"	f	class:CdSuList
begin	include/cdsumbhash.h	/^typename CdSuMultiByteHash<ValType>::iterator CdSuMultiByteHash<ValType>::begin () const $/;"	f	class:CdSuMultiByteHash
begin	include/cdsuqueue.h	/^typename CdSuQueue<KeyType>::iterator CdSuQueue<KeyType>::begin () const $/;"	f	class:CdSuQueue
begin	include/cdsutsqueue.h	/^typename CdSuTsQueue<KeyType>::iterator CdSuTsQueue<KeyType>::begin () const $/;"	f	class:CdSuTsQueue
bg	docs/reqs/srs/nhtcp/index.html	/^<h3><a name="bg">2.1.1 Background<\/a><\/h3>$/;"	a
bg	docs/reqs/srs/nhudp/index.html	/^<h3><a name="bg">2.1.1 Background<\/a><\/h3>$/;"	a
buckets	include/cdsucharhash.h	/^	HashBucket* buckets;$/;"	m	class:CdSuCharHash
buckets	include/cdsuinthash.h	/^	HashBucket* buckets;$/;"	m	class:CdSuIntHash
buckets	include/cdsumbhash.h	/^	HashBucket* buckets;$/;"	m	class:CdSuMultiByteHash
buffer	src/tcpnh/cdsunhtcp.h	/^	char* buffer;				\/\/ Buffer to receive data.$/;"	m	struct:CdSuNhTcpConnInfo
buffer	test/msgdistr-test.h	/^	char* buffer;$/;"	m	struct:CdSuIntraCardMsg
buflen	test/msgdistr-test.h	/^	unsigned int buflen;$/;"	m	struct:MyTestMsg
buildCloseConIndEvent	src/tcpnh/cdsunhtcp.cpp	/^CdSuNhTcpUiCloseConIndEvent* CdSuNhTcp::buildCloseConIndEvent$/;"	f	class:CdSuNhTcp
buildConnIndEvent	src/tcpnh/cdsunhtcp.cpp	/^CdSuNhTcpUiConIndEvent* CdSuNhTcp::buildConnIndEvent $/;"	f	class:CdSuNhTcp
buildConnInfo	src/tcpnh/cdsunhtcp.cpp	/^CdSuNhTcpConnInfo* CdSuNhTcp::buildConnInfo $/;"	f	class:CdSuNhTcp
buildConnInfo	src/tcpnh/cdsunhtcp.cpp	/^CdSuNhTcpConnInfo* CdSuNhTcp::buildConnInfo (CdSuNhTcpHandle tcpHandle, $/;"	f	class:CdSuNhTcp
buildDataIndEvent	src/tcpnh/cdsunhtcp.cpp	/^CdSuNhTcpUiDataIndEvent* CdSuNhTcp::buildDataIndEvent ($/;"	f	class:CdSuNhTcp
buildListenInfo	src/tcpnh/cdsunhtcp.cpp	/^CdSuNhTcpLstnInfo* CdSuNhTcp::buildListenInfo (CdSuNhTcpHandle tcpHandle, $/;"	f	class:CdSuNhTcp
c	test/msgdistr-test.h	/^	unsigned int c;$/;"	m	struct:MyTestMsg
cache	include/cdsucharhash.h	/^	HashElement* cache;	$/;"	m	class:CdSuCharHash
cache	include/cdsuinthash.h	/^	HashElement* cache;	$/;"	m	class:CdSuIntHash
cache	include/cdsumbhash.h	/^	HashElement* cache;	$/;"	m	class:CdSuMultiByteHash
calcNumTicks	src/timer/cdsutimingwheel.cpp	/^Uint32 CdSuTimingWheel::calcNumTicks (Uint32 timeUnits, Uint32 timeCounts)$/;"	f	class:CdSuTimingWheel
calc_ecos	test/timer/timerBasic.cpp	/^void calc_ecos(void)$/;"	f
calc_ecos	test/timer/timerCascade.cpp	/^void calc_ecos(void)$/;"	f
calc_linux	test/timer/timerBasic.cpp	/^void calc_linux(void)$/;"	f
calc_linux	test/timer/timerCascade.cpp	/^void calc_linux(void)$/;"	f
callHlrId	test/mbhash-test.cpp	/^	TestCallHlrId callHlrId;$/;"	m	struct:TestCallHlr	file:
callHlrId	test/mbhash-test.cpp	/^	char callHlrId [TEST_CALLHLR_ID_LEN];$/;"	m	struct:TestCallHlrId	file:
callHlrNo	test/mbhash-test.cpp	/^	int callHlrNo;$/;"	m	struct:TestCallHlr	file:
canTrace	src/misc/cdsutrace.cpp	/^bool CdSuTrace::canTrace (unsigned level)$/;"	f	class:CdSuTrace
cdApplReceiverThread	test/udpnh/basic-test/testreceiver.cpp	/^void* cdApplReceiverThread (void * arg)$/;"	f
cdApplReceiverThread	test/udpnh/load-testing/testreceiver.cpp	/^void* cdApplReceiverThread (void * arg)$/;"	f
cdCloseTestConn	test/tcpnh/basictest/testmenu.cpp	/^int cdCloseTestConn (int testSock)$/;"	f
cdCloseTestConn	test/tcpnh/featuretest/testmenu.cpp	/^int cdCloseTestConn (int testSock)$/;"	f
cdCloseTestConn	test/udpnh/basic-test/testmenu.cpp	/^int cdCloseTestConn (int testSock)$/;"	f
cdCloseTestConn	test/udpnh/load-testing/testmenu.cpp	/^int cdCloseTestConn (int testSock)$/;"	f
cdCreateApplReceiverThread	test/udpnh/basic-test/testreceiver.cpp	/^void cdCreateApplReceiverThread (CdModuleId* mId)$/;"	f
cdCreateApplReceiverThread	test/udpnh/load-testing/testreceiver.cpp	/^void cdCreateApplReceiverThread (CdModuleId* mId)$/;"	f
cdCreateManagerReceiverThread	test/udpnh/basic-test/testreceiver.cpp	/^void cdCreateManagerReceiverThread (CdModuleId* mId)$/;"	f
cdCreateManagerReceiverThread	test/udpnh/load-testing/testreceiver.cpp	/^void cdCreateManagerReceiverThread (CdModuleId* mId)$/;"	f
cdCreateTestConn	test/tcpnh/basictest/testmenu.cpp	/^int cdCreateTestConn ()$/;"	f
cdCreateTestConn	test/tcpnh/featuretest/testmenu.cpp	/^int cdCreateTestConn ()$/;"	f
cdCreateTestConn	test/udpnh/basic-test/testmenu.cpp	/^int cdCreateTestConn ()$/;"	f
cdCreateTestConn	test/udpnh/load-testing/testmenu.cpp	/^int cdCreateTestConn ()$/;"	f
cdCreateTimerHandler	test/tcpnh/basictest/timerdef.cpp	/^int cdCreateTimerHandler ()$/;"	f
cdCreateTimerHandler	test/tcpnh/featuretest/timerdef.cpp	/^int cdCreateTimerHandler ()$/;"	f
cdCreateTimerHandler	test/udpnh/basic-test/timerdef.cpp	/^int cdCreateTimerHandler ()$/;"	f
cdCreateTimerHandler	test/udpnh/load-testing/timerdef.cpp	/^int cdCreateTimerHandler ()$/;"	f
cdCreateTimerThread	test/tcpnh/basictest/timerdef.cpp	/^int cdCreateTimerThread ()$/;"	f
cdCreateTimerThread	test/tcpnh/featuretest/timerdef.cpp	/^int cdCreateTimerThread ()$/;"	f
cdCreateTimerThread	test/udpnh/basic-test/timerdef.cpp	/^int cdCreateTimerThread ()$/;"	f
cdCreateTimerThread	test/udpnh/load-testing/timerdef.cpp	/^int cdCreateTimerThread ()$/;"	f
cdDeleteTimerHandler	test/tcpnh/basictest/timerdef.cpp	/^int cdDeleteTimerHandler ()$/;"	f
cdDeleteTimerHandler	test/tcpnh/featuretest/timerdef.cpp	/^int cdDeleteTimerHandler ()$/;"	f
cdDeleteTimerHandler	test/udpnh/basic-test/timerdef.cpp	/^int cdDeleteTimerHandler ()$/;"	f
cdDeleteTimerHandler	test/udpnh/load-testing/timerdef.cpp	/^int cdDeleteTimerHandler ()$/;"	f
cdDeleteTimerThread	test/tcpnh/basictest/timerdef.cpp	/^int cdDeleteTimerThread ()$/;"	f
cdDeleteTimerThread	test/tcpnh/featuretest/timerdef.cpp	/^int cdDeleteTimerThread ()$/;"	f
cdDeleteTimerThread	test/udpnh/basic-test/timerdef.cpp	/^int cdDeleteTimerThread ()$/;"	f
cdDeleteTimerThread	test/udpnh/load-testing/timerdef.cpp	/^int cdDeleteTimerThread ()$/;"	f
cdExecuteTests	test/tcpnh/basictest/testmenu.cpp	/^void cdExecuteTests (int testSock)$/;"	f
cdExecuteTests	test/tcpnh/featuretest/testmenu.cpp	/^void cdExecuteTests (int testSock)$/;"	f
cdExecuteTests	test/udpnh/basic-test/testmenu.cpp	/^void cdExecuteTests (int testSock)$/;"	f
cdExecuteTests	test/udpnh/load-testing/testmenu.cpp	/^void cdExecuteTests (int testSock)$/;"	f
cdGetChoiceFromSock	test/tcpnh/basictest/testmenu.cpp	/^int cdGetChoiceFromSock (int testSock)$/;"	f
cdGetChoiceFromSock	test/tcpnh/featuretest/testmenu.cpp	/^int cdGetChoiceFromSock (int testSock)$/;"	f
cdGetChoiceFromSock	test/udpnh/basic-test/testmenu.cpp	/^int cdGetChoiceFromSock (int testSock)$/;"	f
cdGetChoiceFromSock	test/udpnh/load-testing/testmenu.cpp	/^int cdGetChoiceFromSock (int testSock)$/;"	f
cdGetNumTests	test/tcpnh/basictest/testmenu.cpp	/^int cdGetNumTests ()$/;"	f
cdGetNumTests	test/tcpnh/featuretest/testmenu.cpp	/^int cdGetNumTests ()$/;"	f
cdGetNumTests	test/udpnh/basic-test/testmenu.cpp	/^int cdGetNumTests ()$/;"	f
cdGetNumTests	test/udpnh/load-testing/testmenu.cpp	/^int cdGetNumTests ()$/;"	f
cdManagerReceiverThread	test/udpnh/basic-test/testreceiver.cpp	/^void* cdManagerReceiverThread (void * arg)$/;"	f
cdManagerReceiverThread	test/udpnh/load-testing/testreceiver.cpp	/^void* cdManagerReceiverThread (void * arg)$/;"	f
cdPrintTestMenu	test/tcpnh/basictest/testmenu.cpp	/^void cdPrintTestMenu ()$/;"	f
cdPrintTestMenu	test/tcpnh/featuretest/testmenu.cpp	/^void cdPrintTestMenu ()$/;"	f
cdPrintTestMenu	test/udpnh/basic-test/testmenu.cpp	/^void cdPrintTestMenu ()$/;"	f
cdPrintTestMenu	test/udpnh/load-testing/testmenu.cpp	/^void cdPrintTestMenu ()$/;"	f
cdRecvThreadStackSpace	test/udpnh/basic-test/testreceiver.cpp	/^char cdRecvThreadStackSpace [1024 * 128];$/;"	v
cdRecvThreadStackSpace	test/udpnh/load-testing/testreceiver.cpp	/^char cdRecvThreadStackSpace [1024 * 128];$/;"	v
cdSetTraceLevel0	test/tcpnh/basictest/testfunctions.cpp	/^void cdSetTraceLevel0 ()$/;"	f
cdSetTraceLevel0	test/tcpnh/featuretest/testfunctions.cpp	/^void cdSetTraceLevel0 ()$/;"	f
cdSetTraceLevel0	test/udpnh/basic-test/testfunctions.cpp	/^void cdSetTraceLevel0 ()$/;"	f
cdSetTraceLevel0	test/udpnh/load-testing/testfunctions.cpp	/^void cdSetTraceLevel0 ()$/;"	f
cdSetTraceLevel1	test/tcpnh/basictest/testfunctions.cpp	/^void cdSetTraceLevel1 ()$/;"	f
cdSetTraceLevel1	test/tcpnh/featuretest/testfunctions.cpp	/^void cdSetTraceLevel1 ()$/;"	f
cdSetTraceLevel1	test/udpnh/basic-test/testfunctions.cpp	/^void cdSetTraceLevel1 ()$/;"	f
cdSetTraceLevel1	test/udpnh/load-testing/testfunctions.cpp	/^void cdSetTraceLevel1 ()$/;"	f
cdSetTraceLevel2	test/tcpnh/basictest/testfunctions.cpp	/^void cdSetTraceLevel2 ()$/;"	f
cdSetTraceLevel2	test/tcpnh/featuretest/testfunctions.cpp	/^void cdSetTraceLevel2 ()$/;"	f
cdSetTraceLevel2	test/udpnh/basic-test/testfunctions.cpp	/^void cdSetTraceLevel2 ()$/;"	f
cdSetTraceLevel2	test/udpnh/load-testing/testfunctions.cpp	/^void cdSetTraceLevel2 ()$/;"	f
cdSetTraceLevel3	test/tcpnh/basictest/testfunctions.cpp	/^void cdSetTraceLevel3 ()$/;"	f
cdSetTraceLevel3	test/tcpnh/featuretest/testfunctions.cpp	/^void cdSetTraceLevel3 ()$/;"	f
cdSetTraceLevel3	test/udpnh/basic-test/testfunctions.cpp	/^void cdSetTraceLevel3 ()$/;"	f
cdSetTraceLevel3	test/udpnh/load-testing/testfunctions.cpp	/^void cdSetTraceLevel3 ()$/;"	f
cdSetTraceLevel4	test/tcpnh/basictest/testfunctions.cpp	/^void cdSetTraceLevel4 ()$/;"	f
cdSetTraceLevel4	test/tcpnh/featuretest/testfunctions.cpp	/^void cdSetTraceLevel4 ()$/;"	f
cdSetTraceLevel4	test/udpnh/basic-test/testfunctions.cpp	/^void cdSetTraceLevel4 ()$/;"	f
cdSetTraceLevel4	test/udpnh/load-testing/testfunctions.cpp	/^void cdSetTraceLevel4 ()$/;"	f
cdSetTraceLevel5	test/tcpnh/basictest/testfunctions.cpp	/^void cdSetTraceLevel5 ()$/;"	f
cdSetTraceLevel5	test/tcpnh/featuretest/testfunctions.cpp	/^void cdSetTraceLevel5 ()$/;"	f
cdSetTraceLevel5	test/udpnh/basic-test/testfunctions.cpp	/^void cdSetTraceLevel5 ()$/;"	f
cdSetTraceLevel5	test/udpnh/load-testing/testfunctions.cpp	/^void cdSetTraceLevel5 ()$/;"	f
cdSuExit	test/tcpnh/basictest/testfunctions.cpp	/^void cdSuExit ()$/;"	f
cdSuFreeMsgBuf	include/cdsumdapi.h	/^inline void cdSuFreeMsgBuf (void* buf) { delete [] (char*) buf; }$/;"	f
cdSuGetMsgBuf	include/cdsumdapi.h	/^inline void* cdSuGetMsgBuf (int size) { return new char [size];}$/;"	f
cdSuMdCondSem	src/msgdistr/cdsumd.cpp	/^sem_t cdSuMdCondSem;$/;"	v
cdSuMdInit	src/msgdistr/cdsumdapi.cpp	/^bool cdSuMdInit (const CdSuMdInitParam& param)$/;"	f
cdSuMdRecvMsg	src/msgdistr/cdsumdapi.cpp	/^bool cdSuMdRecvMsg (CdMessage** msg, const CdModuleId& mid)$/;"	f
cdSuMdRecvMsgNonBlock	src/msgdistr/cdsumdapi.cpp	/^bool cdSuMdRecvMsgNonBlock (CdMessage** msg, const CdModuleId& mid)$/;"	f
cdSuMdRegisterHwUnit	src/msgdistr/cdsumdapi.cpp	/^bool cdSuMdRegisterHwUnit (const CdHardwareUnitId& hwid, CdSuMdIpcpInfo ipcpInfo)$/;"	f
cdSuMdRegisterMid	src/msgdistr/cdsumdapi.cpp	/^bool cdSuMdRegisterMid (const CdModuleId& modId)$/;"	f
cdSuMdRegisterMid	src/msgdistr/cdsumdapi.cpp	/^bool cdSuMdRegisterMid (const CdModuleId& modId, CdSuMdIpcpInfo ipcpInfo)$/;"	f
cdSuMdSendMsg	src/msgdistr/cdsumdapi.cpp	/^bool cdSuMdSendMsg (CdMessage* msg, int priority)$/;"	f
cdSuMdTerminate	src/msgdistr/cdsumdapi.cpp	/^bool cdSuMdTerminate ()$/;"	f
cdSuMdTxptSrvcThrdStatus	src/msgdistr/cdsunhudpthrd.cpp	/^bool cdSuMdTxptSrvcThrdStatus;$/;"	v
cdSuMdUdpThrdCondSem	src/msgdistr/cdsunhudpthrd.cpp	/^sem_t cdSuMdUdpThrdCondSem;	 $/;"	v
cdSuMdUdpThrdStatus	src/msgdistr/cdsunhudpthrd.cpp	/^bool cdSuMdUdpThrdStatus = false;$/;"	v
cdSuMdUnregisterMid	src/msgdistr/cdsumdapi.cpp	/^bool cdSuMdUnregisterMid (const CdModuleId& modId)$/;"	f
cdSuMsgDistributor	src/msgdistr/cdsumdapi.cpp	/^static CdSuMsgDistributor* cdSuMsgDistributor = NULL;$/;"	v	file:
cdSuNhTcpDefConEventHlr	src/tcpnh/cdsunhtcpapi.cpp	/^bool cdSuNhTcpDefConEventHlr (const CdSuNhTcpUiConnEvent& conEvent)$/;"	f
cdSuNhTcpDefLstnEventHlr	src/tcpnh/cdsunhtcpapi.cpp	/^bool cdSuNhTcpDefLstnEventHlr (const CdSuNhTcpUiLstnEvent& lstnEvent)$/;"	f
cdSuNhTcpDefSmEventHlr	src/tcpnh/cdsunhtcpapi.cpp	/^bool cdSuNhTcpDefSmEventHlr (const CdSuNhTcpMiEvent& smEvent)$/;"	f
cdSuNhTcpInstMgr	src/tcpnh/cdsunhtcpapi.cpp	/^CdSuNhTcpInstMgr* cdSuNhTcpInstMgr;$/;"	v
cdSuNhTcpMiCfgReq	src/tcpnh/cdsunhtcpapi.cpp	/^CdSuNhTcpApiRetType cdSuNhTcpMiCfgReq (const CdSuNhTcpMiCfgReqParam& cfgReqParam)$/;"	f
cdSuNhTcpMiCtrlReq	src/tcpnh/cdsunhtcpapi.cpp	/^CdSuNhTcpApiRetType cdSuNhTcpMiCtrlReq (const CdSuNhTcpMiCtrlReqParam& ctrlReqParam)$/;"	f
cdSuNhTcpMiDelNhReq	src/tcpnh/cdsunhtcpapi.cpp	/^CdSuNhTcpApiRetType cdSuNhTcpMiDelNhReq (const CdSuNhTcpMiDelNhParam& delNhParam)$/;"	f
cdSuNhTcpMiInit	src/tcpnh/cdsunhtcpapi.cpp	/^CdSuNhTcpApiRetType cdSuNhTcpMiInit (const CdSuNhTcpMiInitParam& initParam, $/;"	f
cdSuNhTcpMiStatusReq	src/tcpnh/cdsunhtcpapi.cpp	/^CdSuNhTcpApiRetType cdSuNhTcpMiStatusReq (const CdSuNhTcpMiStatusReqParam& statusReqParam)$/;"	f
cdSuNhTcpMiStsReq	src/tcpnh/cdsunhtcpapi.cpp	/^CdSuNhTcpApiRetType cdSuNhTcpMiStsReq (const CdSuNhTcpMiStsReqParam& stsReqParam)$/;"	f
cdSuNhTcpMiTerminate	src/tcpnh/cdsunhtcpapi.cpp	/^CdSuNhTcpApiRetType cdSuNhTcpMiTerminate (const CdSuNhTcpMiTerminateParam& termParam)$/;"	f
cdSuNhTcpUiAddLstnReq	src/tcpnh/cdsunhtcpapi.cpp	/^CdSuNhTcpApiRetType cdSuNhTcpUiAddLstnReq (const CdSuNhTcpUiAddLstnReqParam& arp, $/;"	f
cdSuNhTcpUiCloseConReq	src/tcpnh/cdsunhtcpapi.cpp	/^CdSuNhTcpApiRetType cdSuNhTcpUiCloseConReq (const CdSuNhTcpUiCloseConReqParam& closeConReqParam)$/;"	f
cdSuNhTcpUiConReq	src/tcpnh/cdsunhtcpapi.cpp	/^CdSuNhTcpApiRetType cdSuNhTcpUiConReq (const CdSuNhTcpUiConReqParam& crp,CdSuNhTcpConnKey& ckey)$/;"	f
cdSuNhTcpUiDataReq	src/tcpnh/cdsunhtcpapi.cpp	/^CdSuNhTcpApiRetType cdSuNhTcpUiDataReq (const CdSuNhTcpUiDataReqParam& dataReqParam)$/;"	f
cdSuNhTcpUiRemLstnReq	src/tcpnh/cdsunhtcpapi.cpp	/^CdSuNhTcpApiRetType cdSuNhTcpUiRemLstnReq (const CdSuNhTcpUiRemLstnReqParam& remLstnReqParam)$/;"	f
cdSuNhUdpConvInt2Addr	test/udpnh/basic-test/testfunctions.cpp	/^char* cdSuNhUdpConvInt2Addr (Uint32 a)$/;"	f
cdSuNhUdpConvInt2Addr	test/udpnh/load-testing/testfunctions.cpp	/^char* cdSuNhUdpConvInt2Addr (Uint32 a)$/;"	f
cdSuNhUdpConvInt2Addr	test/udpnh/testing-mul-nh-support/tester.cpp	/^char* cdSuNhUdpConvInt2Addr (Uint32 a)$/;"	f
cdSuNhUdpConvInt2Addr	test/udpnh/testing-mul-nh-usr-support/tester.cpp	/^char* cdSuNhUdpConvInt2Addr (Uint32 a)$/;"	f
cdSuNhUdpConvInt2Addr	test/udpnh/testing-mul-user-support/tester.cpp	/^char* cdSuNhUdpConvInt2Addr (Uint32 a)$/;"	f
cdSuNhUdpConvInt2Ip	test/udpnh/basic-test/testfunctions.cpp	/^void cdSuNhUdpConvInt2Ip (char* ipaddr,  Uint32 a)$/;"	f
cdSuNhUdpConvInt2Ip	test/udpnh/load-testing/testfunctions.cpp	/^void cdSuNhUdpConvInt2Ip (char* ipaddr,  Uint32 a)$/;"	f
cdSuNhUdpConvInt2Ip	test/udpnh/testing-mul-nh-support/tester.cpp	/^void cdSuNhUdpConvInt2Ip (char* ipaddr,  Uint32 a)$/;"	f
cdSuNhUdpConvInt2Ip	test/udpnh/testing-mul-nh-usr-support/tester.cpp	/^void cdSuNhUdpConvInt2Ip (char* ipaddr,  Uint32 a)$/;"	f
cdSuNhUdpConvInt2Ip	test/udpnh/testing-mul-user-support/tester.cpp	/^void cdSuNhUdpConvInt2Ip (char* ipaddr,  Uint32 a)$/;"	f
cdSuNhUdpConvIp2Int	test/udpnh/basic-test/testfunctions.cpp	/^Uint32 cdSuNhUdpConvIp2Int (const char* ipaddr)$/;"	f
cdSuNhUdpConvIp2Int	test/udpnh/load-testing/testfunctions.cpp	/^Uint32 cdSuNhUdpConvIp2Int (const char* ipaddr)$/;"	f
cdSuNhUdpConvIp2Int	test/udpnh/testing-mul-nh-support/tester.cpp	/^Uint32 cdSuNhUdpConvIp2Int (const char* ipaddr)$/;"	f
cdSuNhUdpConvIp2Int	test/udpnh/testing-mul-nh-usr-support/tester.cpp	/^Uint32 cdSuNhUdpConvIp2Int (const char* ipaddr)$/;"	f
cdSuNhUdpConvIp2Int	test/udpnh/testing-mul-user-support/tester.cpp	/^Uint32 cdSuNhUdpConvIp2Int (const char* ipaddr)$/;"	f
cdSuNhUdpDefApplEventHlr	src/udpnh/cdsunhudpdefeventhlr.cpp	/^void cdSuNhUdpDefApplEventHlr (void* arg)$/;"	f
cdSuNhUdpDefSmEventHlr	src/udpnh/cdsunhudpdefeventhlr.cpp	/^void cdSuNhUdpDefSmEventHlr (void* arg)$/;"	f
cdSuNhUdpInstMgr	src/udpnh/cdsunhudpapi.cpp	/^CdSuNhUdpInstMgr* cdSuNhUdpInstMgr = NULL;$/;"	v
cdSuNhUdpMiCfgReq	src/udpnh/cdsunhudpapi.cpp	/^CdSuNhUdpApiRetType cdSuNhUdpMiCfgReq (const CdSuNhUdpMiCfgReqParam& cfgReqParam)$/;"	f
cdSuNhUdpMiCtrlReq	src/udpnh/cdsunhudpapi.cpp	/^CdSuNhUdpApiRetType cdSuNhUdpMiCtrlReq (const CdSuNhUdpMiCtrlReqParam& ctrlReqParam)$/;"	f
cdSuNhUdpMiDelNhReq	src/udpnh/cdsunhudpapi.cpp	/^CdSuNhUdpApiRetType cdSuNhUdpMiDelNhReq (const CdSuNhUdpMiDelNhParam& delNhParam)$/;"	f
cdSuNhUdpMiInit	src/udpnh/cdsunhudpapi.cpp	/^CdSuNhUdpApiRetType cdSuNhUdpMiInit (const CdSuNhUdpMiInitParam& initParam, $/;"	f
cdSuNhUdpMiStatusReq	src/udpnh/cdsunhudpapi.cpp	/^CdSuNhUdpApiRetType cdSuNhUdpMiStatusReq (const CdSuNhUdpMiStatusReqParam& statusReqParam)$/;"	f
cdSuNhUdpMiStsReq	src/udpnh/cdsunhudpapi.cpp	/^CdSuNhUdpApiRetType cdSuNhUdpMiStsReq (const CdSuNhUdpMiStsReqParam& stsReqParam)$/;"	f
cdSuNhUdpMiTerminate	src/udpnh/cdsunhudpapi.cpp	/^CdSuNhUdpApiRetType cdSuNhUdpMiTerminate (const CdSuNhUdpMiTerminateParam& termParam)$/;"	f
cdSuNhUdpUiAddUdpPortReq	src/udpnh/cdsunhudpapi.cpp	/^CdSuNhUdpApiRetType cdSuNhUdpUiAddUdpPortReq (const CdSuNhUdpUiAddUdpPortReqParam& aupReqParam, CdSuNhUdpPortKey& nhUdpPortKey)$/;"	f
cdSuNhUdpUiDataReq	src/udpnh/cdsunhudpapi.cpp	/^CdSuNhUdpApiRetType cdSuNhUdpUiDataReq (const CdSuNhUdpUiDataReqParam& dataReqParam)$/;"	f
cdSuNhUdpUiRemUdpPortReq	src/udpnh/cdsunhudpapi.cpp	/^CdSuNhUdpApiRetType cdSuNhUdpUiRemUdpPortReq (const CdSuNhUdpUiRemUdpPortReqParam& rupReqParam)$/;"	f
cdSuTimerHandler	test/tcpnh/basictest/timerdef.cpp	/^CdSuTimerHandler* cdSuTimerHandler;$/;"	v
cdSuTimerHandler	test/tcpnh/featuretest/timerdef.cpp	/^CdSuTimerHandler* cdSuTimerHandler;$/;"	v
cdSuTimerHandler	test/udpnh/basic-test/timerdef.cpp	/^CdSuTimerHandler* cdSuTimerHandler;$/;"	v
cdSuTimerHandler	test/udpnh/load-testing/timerdef.cpp	/^CdSuTimerHandler* cdSuTimerHandler;$/;"	v
cdSuUserTimeoutHlr	test/tcpnh/basictest/timerdef.cpp	/^void cdSuUserTimeoutHlr (CdSuTimeout toData)$/;"	f
cdSuUserTimeoutHlr	test/tcpnh/featuretest/timerdef.cpp	/^void cdSuUserTimeoutHlr (CdSuTimeout toData)$/;"	f
cdSuUserTimeoutHlr	test/timer/timerBasic.cpp	/^void cdSuUserTimeoutHlr (CdSuTimeout tempTimeOut)$/;"	f
cdSuUserTimeoutHlr	test/timer/timerCascade.cpp	/^void cdSuUserTimeoutHlr (CdSuTimeout tempTimeOut)$/;"	f
cdSuUserTimeoutHlr	test/timer/timerFuncTest.cpp	/^void cdSuUserTimeoutHlr (CdSuTimeout tempTimeOut)$/;"	f
cdSuUserTimeoutHlr	test/timer/timerListTest.cpp	/^void cdSuUserTimeoutHlr (CdSuTimeout tempTimeOut)$/;"	f
cdSuUserTimeoutHlr	test/timer/timerPerfStartTest.cpp	/^void cdSuUserTimeoutHlr (CdSuTimeout tempTimeOut)$/;"	f
cdSuUserTimeoutHlr	test/timer/timerPerfStopTest.cpp	/^void cdSuUserTimeoutHlr (CdSuTimeout tempTimeOut)$/;"	f
cdSuUserTimeoutHlr	test/udpnh/basic-test/timerdef.cpp	/^void cdSuUserTimeoutHlr (CdSuTimeout toData)$/;"	f
cdSuUserTimeoutHlr	test/udpnh/load-testing/timerdef.cpp	/^void cdSuUserTimeoutHlr (CdSuTimeout toData)$/;"	f
cdTests	test/tcpnh/basictest/testmenu.cpp	/^CdTestCases cdTests [] = {$/;"	v
cdTests	test/tcpnh/featuretest/testmenu.cpp	/^CdTestCases cdTests [] = {$/;"	v
cdTests	test/udpnh/basic-test/testmenu.cpp	/^CdTestCases cdTests [] = {$/;"	v
cdTests	test/udpnh/load-testing/testmenu.cpp	/^CdTestCases cdTests [] = {$/;"	v
cdTimerThreadAttr	test/tcpnh/basictest/timerdef.cpp	/^pthread_attr_t cdTimerThreadAttr;$/;"	v
cdTimerThreadAttr	test/tcpnh/featuretest/timerdef.cpp	/^pthread_attr_t cdTimerThreadAttr;$/;"	v
cdTimerThreadAttr	test/udpnh/basic-test/timerdef.cpp	/^pthread_attr_t cdTimerThreadAttr;$/;"	v
cdTimerThreadAttr	test/udpnh/load-testing/timerdef.cpp	/^pthread_attr_t cdTimerThreadAttr;$/;"	v
cdTimerThreadEntry	test/tcpnh/basictest/timerdef.cpp	/^void* cdTimerThreadEntry (void*)$/;"	f
cdTimerThreadEntry	test/tcpnh/featuretest/timerdef.cpp	/^void* cdTimerThreadEntry (void*)$/;"	f
cdTimerThreadEntry	test/udpnh/basic-test/timerdef.cpp	/^void* cdTimerThreadEntry (void*)$/;"	f
cdTimerThreadEntry	test/udpnh/load-testing/timerdef.cpp	/^void* cdTimerThreadEntry (void*)$/;"	f
cdTimerThreadId	test/tcpnh/basictest/timerdef.cpp	/^pthread_t cdTimerThreadId;$/;"	v
cdTimerThreadId	test/tcpnh/featuretest/timerdef.cpp	/^pthread_t cdTimerThreadId;$/;"	v
cdTimerThreadId	test/udpnh/basic-test/timerdef.cpp	/^pthread_t cdTimerThreadId;$/;"	v
cdTimerThreadId	test/udpnh/load-testing/timerdef.cpp	/^pthread_t cdTimerThreadId;$/;"	v
cdsuMdUdpNwHlrStart	src/msgdistr/cdsunhudpthrd.cpp	/^void* cdsuMdUdpNwHlrStart (void* iPrm)$/;"	f
cdsuMdUdpRxThrdStart	src/msgdistr/cdsunhudpthrd.cpp	/^void* cdsuMdUdpRxThrdStart(void* args)$/;"	f
cfgParam	test/udpnh/basic-test/parameter.h	/^CdSuNhUdpMiCfgReqParam cfgParam;$/;"	v
cfgParam	test/udpnh/load-testing/parameter.h	/^CdSuNhUdpMiCfgReqParam cfgParam;$/;"	v
cfgReqParam	src/tcpnh/cdsunhtcpmsg.h	/^	CdSuNhTcpMiCfgReqParam cfgReqParam;$/;"	m	struct:CdSuNhTcpMiCfgReqMsg
cfgReqParam	src/udpnh/cdsunhudpmsg.h	/^	CdSuNhUdpMiCfgReqParam cfgReqParam;	\/\/ Config Request Param$/;"	m	struct:CdSuNhUdpMiCfgReqMsg
cfgReqParam	test/tcpnh/basictest/parameter.h	/^CdSuNhTcpMiCfgReqParam cfgReqParam;$/;"	v
cfgReqParam	test/tcpnh/featuretest/parameter.h	/^CdSuNhTcpMiCfgReqParam cfgReqParam;$/;"	v
cfgRspEvent	src/tcpnh/cdsunhtcpmsg.h	/^	CdSuNhTcpMiCfgRspEvent cfgRspEvent;$/;"	m	struct:CdSuNhTcpMiCfgRspMsg
cfgRspEvent	src/udpnh/cdsunhudpmsg.h	/^	CdSuNhUdpMiCfgRspEvent cfgRspEvent;	\/\/ Config Response Event Param.$/;"	m	struct:CdSuNhUdpMiCfgRspMsg
chain	include/cdsucharhash.h	/^	HashBucket chain;$/;"	m	class:CdSuCharHash
chain	include/cdsuinthash.h	/^	HashBucket chain;$/;"	m	class:CdSuIntHash
chain	include/cdsumbhash.h	/^	HashBucket chain;$/;"	m	class:CdSuMultiByteHash
changeIpAddr	test/bukmsgthrd.cpp	/^Uint32 changeIpAddr (char ipaddr[])$/;"	f
changeIpAddr	test/bukmsgthrd2.cpp	/^Uint32 changeIpAddr (char ipaddr[])$/;"	f
changeIpAddr	test/msgdistr-test.cpp	/^Uint32 changeIpAddr (char ipaddr[])$/;"	f
changeIpAddr	test/msgdistr2-test.cpp	/^Uint32 changeIpAddr (char ipaddr[])$/;"	f
changeIpaddr	test/tcpnh/basictest/testserver.cpp	/^Uint32 changeIpaddr (char ipaddr [])$/;"	f
changeIpaddr	test/tcpnh/featuretest/testserver.cpp	/^Uint32 changeIpaddr (char ipaddr [])$/;"	f
changeIpaddr	test/udpnh/basic-test/testserver.cpp	/^Uint32 changeIpaddr (char ipaddr [])$/;"	f
changeIpaddr	test/udpnh/testing-mul-nh-usr-support/tester.cpp	/^Uint32 changeIpaddr (char ipaddr [])$/;"	f
changeState	src/tcpnh/cdsunhtcp.cpp	/^void CdSuNhTcp::changeState (CdSuNhTcpState tcpNhState)$/;"	f	class:CdSuNhTcp
changeState	src/udpnh/cdsunhudp.cpp	/^void CdSuNhUdp::changeState (CdSuNhUdpState udpNhState)$/;"	f	class:CdSuNhUdp
charHash	test/charhash-test.cpp	/^CdSuCharHash<int>* charHash = NULL;$/;"	v
checkEmptyQueueTest	test/queue-test.cpp	/^bool checkEmptyQueueTest ()$/;"	f
checkEmptyQueueTest	test/tsqueue-test.cpp	/^bool checkEmptyQueueTest ()$/;"	f
checkFullQueueTest	test/queue-test.cpp	/^bool checkFullQueueTest ()$/;"	f
checkFullQueueTest	test/tsqueue-test.cpp	/^bool checkFullQueueTest ()$/;"	f
chkNhInstIdRng	src/tcpnh/cdsunhtcpapiparamchk.cpp	/^CdSuNhTcpApiRetType chkNhInstIdRng (CdSuNhTcpInstId nid)$/;"	f
clConReqInValid	test/tcpnh/featuretest/testfunctions.cpp	/^void clConReqInValid ()$/;"	f
clConReqParam	test/tcpnh/basictest/parameter.h	/^CdSuNhTcpUiCloseConReqParam clConReqParam;$/;"	v
clConReqParam	test/tcpnh/featuretest/parameter.h	/^CdSuNhTcpUiCloseConReqParam clConReqParam;$/;"	v
clConReqValid	test/tcpnh/featuretest/testfunctions.cpp	/^void clConReqValid ()$/;"	f
classdiag	docs/design/mdd/nhtcp/index.html	/^<A NAME="classdiag"><\/A>$/;"	a
clear	include/cdsucharhash.h	/^void CdSuCharHash<ValType>::clear ()$/;"	f	class:CdSuCharHash
clear	include/cdsuinthash.h	/^void CdSuIntHash<ValType>::clear ()$/;"	f	class:CdSuIntHash
clear	include/cdsulist.h	/^void CdSuList<ValType>::clear ()$/;"	f	class:CdSuList
clear	include/cdsumbhash.h	/^void CdSuMultiByteHash<ValType>::clear ()$/;"	f	class:CdSuMultiByteHash
closeChannel	test/tcpnh/mp3Streamer/mp3StreamServer.cpp	/^void Mp3StreamServer::closeChannel (const ChannelInfo* channelInfo)$/;"	f	class:Mp3StreamServer
closeConIndEvent	src/tcpnh/cdsunhtcpmsg.h	/^	CdSuNhTcpUiCloseConIndEvent closeConIndEvent;$/;"	m	struct:CdSuNhTcpUiCloseConIndMsg
closeConReason	src/tcpnh/cdsunhtcpapiparam.h	/^	CdSuNhTcpCloseConReason closeConReason;	$/;"	m	struct:CdSuNhTcpUiCloseConReqParam
closeConReq	test/tcpnh/basictest/testfunctions.cpp	/^void closeConReq ()$/;"	f
closeConReq	test/tcpnh/featuretest/testfunctions.cpp	/^bool closeConReq (bool flag)$/;"	f
closeConReqLoadTesting	test/tcpnh/basictest/testfunctions.cpp	/^void closeConReqLoadTesting ()$/;"	f
closeConReqLoadTesting	test/tcpnh/featuretest/testfunctions.cpp	/^void closeConReqLoadTesting ()$/;"	f
closeConReqParam	src/tcpnh/cdsunhtcpmsg.h	/^	CdSuNhTcpUiCloseConReqParam closeConReqParam;$/;"	m	struct:CdSuNhTcpUiCloseConReqMsg
closeConRspEvent	src/tcpnh/cdsunhtcpmsg.h	/^	CdSuNhTcpUiCloseConRspEvent closeConRspEvent;$/;"	m	struct:CdSuNhTcpUiCloseConRspMsg
closeConn	src/tcpnh/cdsunhtcp.cpp	/^bool CdSuNhTcp::closeConn (const CdSuNhTcpUiCloseConReqParam clconreqparam)$/;"	f	class:CdSuNhTcp
closeConnQueue	src/tcpnh/cdsunhtcp.h	/^	CdSuQueue<CdSuNhTcpConnInfo*>* closeConnQueue;$/;"	m	class:CdSuNhTcp
closeMp3ListnerConnection	test/tcpnh/mp3Streamer/mp3StreamServer.cpp	/^void Mp3StreamServer::closeMp3ListnerConnection (const CdSuNhTcpConnId& connId)$/;"	f	class:Mp3StreamServer
cnfgInfo	include/cdsusanity.h	/^	SanityParams cnfgInfo;$/;"	m	class:SanityModule
comintf	docs/reqs/srs/nhudp/index.html	/^<h3><a name="comintf">2.1.6 Communication Interfaces <\/a><\/h3>$/;"	a
conEventHlr	src/tcpnh/cdsunhtcpapiparam.h	/^	CdSuNhTcpEventHlr conEventHlr;		\/\/ Event Hlr for any event on the connections.$/;"	m	struct:CdSuNhTcpUiAddLstnReqParam
conEventHlr	src/tcpnh/cdsunhtcpapiparam.h	/^	CdSuNhTcpEventHlr conEventHlr;		\/\/ Event Hlr for any event on the connections.$/;"	m	struct:CdSuNhTcpUiCloseConReqParam
conEventHlr	src/tcpnh/cdsunhtcpapiparam.h	/^	CdSuNhTcpEventHlr conEventHlr;		\/\/ Event Hlr for any event on the connections.$/;"	m	struct:CdSuNhTcpUiConReqParam
conEventHlr	src/tcpnh/cdsunhtcpapiparam.h	/^	CdSuNhTcpEventHlr conEventHlr;		\/\/ Event Hlr for any event on the connections.$/;"	m	struct:CdSuNhTcpUiDataReqParam
conEventHlr	test/tcpnh/basictest/testfunctions.cpp	/^void conEventHlr (void* arg)$/;"	f
conEventHlr	test/tcpnh/featuretest/testfunctions.cpp	/^void conEventHlr (void* arg)$/;"	f
conEventHlr	test/tcpnh/mp3Streamer/mp3StreamServer.cpp	/^void Mp3StreamServer::conEventHlr (void* arg)$/;"	f	class:Mp3StreamServer
conIndEvent	src/tcpnh/cdsunhtcpmsg.h	/^	CdSuNhTcpUiConIndEvent conIndEvent;$/;"	m	struct:CdSuNhTcpUiConIndMsg
conReqInValid	test/tcpnh/featuretest/testfunctions.cpp	/^void conReqInValid ()$/;"	f
conReqMsgHlr	src/tcpnh/cdsunhtcp.cpp	/^void CdSuNhTcp::conReqMsgHlr (CdMessage* msg)$/;"	f	class:CdSuNhTcp
conReqParam	src/tcpnh/cdsunhtcpmsg.h	/^	CdSuNhTcpUiConReqParam conReqParam;$/;"	m	struct:CdSuNhTcpUiConReqMsg
conReqParam	test/tcpnh/basictest/parameter.h	/^CdSuNhTcpUiConReqParam conReqParam;$/;"	v
conReqParam	test/tcpnh/featuretest/parameter.h	/^CdSuNhTcpUiConReqParam conReqParam;$/;"	v
conReqValid	test/tcpnh/featuretest/testfunctions.cpp	/^void conReqValid ()$/;"	f
conRspEvent	src/tcpnh/cdsunhtcpmsg.h	/^	CdSuNhTcpUiConRspEvent conRspEvent;$/;"	m	struct:CdSuNhTcpUiConRspMsg
configReqMsgHlr	src/tcpnh/cdsunhtcp.cpp	/^void CdSuNhTcp::configReqMsgHlr (CdMessage* msg)$/;"	f	class:CdSuNhTcp
configReqMsgHlr	src/udpnh/cdsunhudp.cpp	/^void CdSuNhUdp::configReqMsgHlr (CdMessage* msg)$/;"	f	class:CdSuNhUdp
configTcpNh	test/tcpnh/basictest/testfunctions.cpp	/^void configTcpNh ()$/;"	f
configTcpNh	test/tcpnh/featuretest/testfunctions.cpp	/^bool configTcpNh (bool flag)$/;"	f
connCleanUp	src/tcpnh/cdsunhtcp.cpp	/^bool CdSuNhTcp::connCleanUp (CdSuNhTcpConnInfo* info)$/;"	f	class:CdSuNhTcp
connId	src/tcpnh/cdsunhtcpapiparam.h	/^	CdSuNhTcpConnId connId;$/;"	m	struct:CdSuNhTcpConnKey
connId	src/tcpnh/cdsunhtcpmsg.h	/^	CdSuNhTcpConnId connId;$/;"	m	struct:CdSuNhTcpUiConReqMsg
connId2ConnInfoTable	src/tcpnh/cdsunhtcp.h	/^	CdSuIntHash <CdSuNhTcpConnInfo*>* connId2ConnInfoTable;$/;"	m	class:CdSuNhTcp
connIdAllocMutex	src/tcpnh/cdsunhtcpdb.h	/^		pthread_mutex_t connIdAllocMutex;$/;"	m	class:CdSuNhTcpDb::NhTcpConnIdAllocator
connIdAllocTable	src/tcpnh/cdsunhtcpdb.h	/^		CdSuIntHash<CdSuNhTcpConnId>* connIdAllocTable;$/;"	m	class:CdSuNhTcpDb::NhTcpConnIdAllocator
connIdAllocator	src/tcpnh/cdsunhtcpdb.h	/^	NhTcpConnIdAllocator* connIdAllocator;$/;"	m	class:CdSuNhTcpDb
connIdCounter	src/tcpnh/cdsunhtcpdb.h	/^		Uint32 connIdCounter;$/;"	m	class:CdSuNhTcpDb::NhTcpConnIdAllocator
connKey	src/tcpnh/cdsunhtcpapiparam.h	/^	CdSuNhTcpConnKey connKey;		\/\/ Connection Key.$/;"	m	struct:CdSuNhTcpUiCloseConReqParam
connKey	src/tcpnh/cdsunhtcpapiparam.h	/^	CdSuNhTcpConnKey connKey;		\/\/ Connection Key.$/;"	m	struct:CdSuNhTcpUiConnEvent
connKey	src/tcpnh/cdsunhtcpapiparam.h	/^	CdSuNhTcpConnKey connKey;		\/\/ Connection Key.$/;"	m	struct:CdSuNhTcpUiDataReqParam
connKey	src/tcpnh/cdsunhtcpapiparam.h	/^	CdSuNhTcpConnKey connKey;$/;"	m	struct:CdSuNhTcpUiConIndEvent
connKey	test/tcpnh/basictest/parameter.h	/^CdSuNhTcpConnKey connKey [MAX_NO_CONN];	\/\/ Connection Key.$/;"	v
connKey	test/tcpnh/featuretest/parameter.h	/^CdSuNhTcpConnKey connKey [MAX_NO_CONN];	\/\/ Connection Key.$/;"	v
connectReq	test/tcpnh/basictest/testfunctions.cpp	/^void connectReq ()$/;"	f
connectReq	test/tcpnh/featuretest/testfunctions.cpp	/^bool connectReq (bool flag)$/;"	f
connectReqLoadTesting	test/tcpnh/basictest/testfunctions.cpp	/^void connectReqLoadTesting ()$/;"	f
connectReqLoadTesting	test/tcpnh/featuretest/testfunctions.cpp	/^void connectReqLoadTesting ()$/;"	f
connectionEventHlr	src/tcpnh/cdsunhtcp.h	/^	CdSuNhTcpEventHlr connectionEventHlr;	\/\/ Event Handler to be notified for events on this connection.$/;"	m	struct:CdSuNhTcpConnInfo
connectionEventHlr	src/tcpnh/cdsunhtcp.h	/^	CdSuNhTcpEventHlr connectionEventHlr;	\/\/ Event Handler to be passed to the ConnectionInfo when a connection is opened on the listener.$/;"	m	struct:CdSuNhTcpLstnInfo
connectionId	src/tcpnh/cdsunhtcp.h	/^	CdSuNhTcpConnId connectionId;	\/\/ Connection Id.$/;"	m	struct:CdSuNhTcpConnInfo
const	docs/reqs/srs/nhtcp/index.html	/^<a name="const"><h3>2.4 Constraints<\/h3><\/a>$/;"	a
const	docs/reqs/srs/nhudp/index.html	/^<a name="const"><h3>2.4 Constraints<\/h3><\/a>$/;"	a
convIp2Int	test/tcpnh/basictest/testfunctions.cpp	/^Uint32 convIp2Int (char ipaddr [])$/;"	f
convIp2Int	test/tcpnh/featuretest/testfunctions.cpp	/^Uint32 convIp2Int (char ipaddr [])$/;"	f
convIp2Int	test/tcpnh/mp3Streamer/mp3StreamServer.cpp	/^Uint32 convIp2Int (char ipaddr [])$/;"	f
count	include/cdsulist.h	/^	int count;$/;"	m	class:CdSuList
count	include/cdsusanity.h	/^	int count;	\/\/ To print the memory usage every one minute$/;"	m	class:SanityModule
counter	test/tcpnh/basictest/parameter.h	/^int counter = -1;$/;"	v
counter	test/tcpnh/featuretest/parameter.h	/^int counter = -1;$/;"	v
counter	test/timer/timerBasic.cpp	/^int counter = TOTAL_THREADS;	\/\/number of threads started.$/;"	v
counter	test/timer/timerCascade.cpp	/^int counter = TOTAL_THREADS;	\/\/number of threads started.$/;"	v
counter	test/timer/timerPerfStartTest.cpp	/^int counter = TOTAL_THREADS; \/\/number of threads started.$/;"	v
counter	test/timer/timerPerfStopTest.cpp	/^int counter = TOTAL_THREADS; \/\/number of threads started.$/;"	v
counter	test/udpnh/basic-test/parameter.h	/^int counter = -1;$/;"	v
counterString	test/tcpnh/basictest/parameter.h	/^char counterString [][100] = $/;"	v
counterString	test/tcpnh/featuretest/parameter.h	/^char counterString [][100] = $/;"	v
counterString	test/udpnh/basic-test/parameter.h	/^char counterString [][100] = {$/;"	v
counterString	test/udpnh/load-testing/parameter.h	/^char counterString [][100] = {$/;"	v
counters	src/tcpnh/cdsunhtcpapiparam.h	/^	Uint32 counters [CDSU_NHTCP_MAX_CTR ];$/;"	m	struct:CdSuNhTcpMiStsRspEvent
counters	src/tcpnh/cdsunhtcpstatspkg.h	/^	Ulong counters [CDSU_NHTCP_MAX_CTR];$/;"	m	class:CdSuNhTcpStatisticsPkg
counters	src/udpnh/cdsunhudpapiparam.h	/^	Uint32 counters[ CDSU_NHUDP_MAX_CTR ];	\/\/ statistics counters. Valid only if success.$/;"	m	struct:CdSuNhUdpMiStsRspEvent
counters	src/udpnh/cdsunhudpstatspkg.h	/^	Ulong counters [CDSU_NHUDP_MAX_CTR];$/;"	m	class:CdSuNhUdpStatisticsPkg
createApplReqThr	test/udpnh/testing-mul-nh-usr-support/tester.cpp	/^void createApplReqThr (const int& index)$/;"	f
createApplThr	test/udpnh/basic-test/testfunctions.cpp	/^void createApplThr ()$/;"	f
createApplThr	test/udpnh/load-testing/testfunctions.cpp	/^void createApplThr ()$/;"	f
createApplThr	test/udpnh/testing-mul-nh-support/tester.cpp	/^void createApplThr ()$/;"	f
createApplThr	test/udpnh/testing-mul-nh-usr-support/tester.cpp	/^void createApplThr (const int& index)$/;"	f
createApplThr	test/udpnh/testing-mul-user-support/tester.cpp	/^void createApplThr (int& index)$/;"	f
createApplications	test/bukmsgthrd.cpp	/^void createApplications ()$/;"	f
createApplications	test/bukmsgthrd2.cpp	/^void createApplications ()$/;"	f
createApplications	test/msgdistr-test.cpp	/^void createApplications ()$/;"	f
createApplications	test/msgdistr2-test.cpp	/^void createApplications ()$/;"	f
createConn	src/tcpnh/cdsunhtcp.cpp	/^CdSuNhTcpFailCode CdSuNhTcp::createConn (const CdSuNhTcpUiConReqParam conreqparam, const CdSuNhTcpConnId connId)$/;"	f	class:CdSuNhTcp
createNhTcpInstMgr	src/tcpnh/cdsunhtcpinstmgr.cpp	/^CdSuNhTcpInstMgr* CdSuNhTcpInstMgr::createNhTcpInstMgr ()$/;"	f	class:CdSuNhTcpInstMgr
createNhUdpInstMgr	src/udpnh/cdsunhudpinstmgr.cpp	/^CdSuNhUdpInstMgr* CdSuNhUdpInstMgr::createNhUdpInstMgr ()$/;"	f	class:CdSuNhUdpInstMgr
createSMReqThr	test/udpnh/testing-mul-nh-usr-support/tester.cpp	/^void createSMReqThr (const int& index)$/;"	f
createSMThr	test/tcpnh/basictest/testfunctions.cpp	/^void createSMThr ()$/;"	f
createSMThr	test/tcpnh/featuretest/testfunctions.cpp	/^void createSMThr ()$/;"	f
createSMThr	test/udpnh/basic-test/testfunctions.cpp	/^void createSMThr ()$/;"	f
createSMThr	test/udpnh/load-testing/testfunctions.cpp	/^void createSMThr ()$/;"	f
createSMThr	test/udpnh/testing-mul-nh-support/tester.cpp	/^void createSMThr ()$/;"	f
createSMThr	test/udpnh/testing-mul-nh-usr-support/tester.cpp	/^void createSMThr (const int& index)$/;"	f
createTcpNh	test/tcpnh/basictest/testfunctions.cpp	/^void createTcpNh ()$/;"	f
createTcpNh	test/tcpnh/featuretest/testfunctions.cpp	/^bool createTcpNh (bool flag)$/;"	f
createTestSock	test/timer/timerFuncTest.cpp	/^int createTestSock ()$/;"	f
createTestSock	test/timer/timerListTest.cpp	/^int createTestSock ()$/;"	f
createTimerHandler	test/timer/timerBasic.cpp	/^void createTimerHandler(void)$/;"	f
createTimerHandler	test/timer/timerCascade.cpp	/^void createTimerHandler(void)$/;"	f
createULThr	test/tcpnh/basictest/testfunctions.cpp	/^void createULThr ()$/;"	f
createULThr	test/tcpnh/featuretest/testfunctions.cpp	/^void createULThr ()$/;"	f
createUdpNwHlrThread	src/msgdistr/cdsumd.cpp	/^void CdSuMsgDistributor::createUdpNwHlrThread (CdSuMdUdpNhInitParam* initParam)$/;"	f	class:CdSuMsgDistributor
createdStHlr	src/tcpnh/cdsunhtcp.cpp	/^void CdSuNhTcp::createdStHlr (CdMessage* msg)$/;"	f	class:CdSuNhTcp
createdStHlr	src/udpnh/cdsunhudp.cpp	/^void CdSuNhUdp::createdStHlr (CdMessage* msg)$/;"	f	class:CdSuNhUdp
ctrlReqMsgHlr	src/tcpnh/cdsunhtcp.cpp	/^void CdSuNhTcp::ctrlReqMsgHlr (CdMessage* msg)$/;"	f	class:CdSuNhTcp
ctrlReqParam	src/tcpnh/cdsunhtcpmsg.h	/^	CdSuNhTcpMiCtrlReqParam ctrlReqParam;$/;"	m	struct:CdSuNhTcpMiCtrlReqMsg
ctrlReqParam	src/udpnh/cdsunhudpmsg.h	/^	CdSuNhUdpMiCtrlReqParam ctrlReqParam; 	\/\/ Control Request Parameter.$/;"	m	struct:CdSuNhUdpMiCtrlReqMsg
ctrlReqParam	test/tcpnh/basictest/parameter.h	/^CdSuNhTcpMiCtrlReqParam ctrlReqParam;$/;"	v
ctrlReqParam	test/tcpnh/featuretest/parameter.h	/^CdSuNhTcpMiCtrlReqParam ctrlReqParam;$/;"	v
ctrlReqParam	test/udpnh/basic-test/parameter.h	/^CdSuNhUdpMiCtrlReqParam ctrlReqParam;$/;"	v
ctrlReqParam	test/udpnh/load-testing/parameter.h	/^CdSuNhUdpMiCtrlReqParam ctrlReqParam;$/;"	v
ctrlRspEvent	src/tcpnh/cdsunhtcpmsg.h	/^	CdSuNhTcpMiCtrlRspEvent ctrlRspEvent;$/;"	m	struct:CdSuNhTcpMiCtrlRspMsg
ctrlRspEvent	src/udpnh/cdsunhudpmsg.h	/^	CdSuNhUdpMiCtrlRspEvent ctrlRspEvent;	\/\/ Control Response Event Param.$/;"	m	struct:CdSuNhUdpMiCtrlRspMsg
curBucket	include/cdsucharhash.h	/^		HashBucket* curBucket;$/;"	m	class:CdSuCharHash::iterator
curBucket	include/cdsuinthash.h	/^		HashBucket* curBucket;$/;"	m	class:CdSuIntHash::iterator
curBucket	include/cdsumbhash.h	/^		HashBucket* curBucket;$/;"	m	class:CdSuMultiByteHash::iterator
curElem	include/cdsucharhash.h	/^		HashElement* curElem;$/;"	m	class:CdSuCharHash::iterator
curElem	include/cdsuinthash.h	/^		HashElement* curElem;$/;"	m	class:CdSuIntHash::iterator
curElem	include/cdsumbhash.h	/^		HashElement* curElem;$/;"	m	class:CdSuMultiByteHash::iterator
current	include/cdsulist.h	/^		ListElement* current;$/;"	m	class:CdSuList::iterator
current	include/cdsuqueue.h	/^		Node* current;$/;"	m	class:CdSuQueue::iterator
current	include/cdsutsqueue.h	/^		Node* current;$/;"	m	class:CdSuTsQueue::iterator
currentPosition	src/timer/cdsutimingwheel.h	/^	Uint32 currentPosition;$/;"	m	class:CdSuTimingWheel
cyclicTest	test/timer/timerListTest.cpp	/^void* cyclicTest(void *) $/;"	f
data	include/cdsulist.h	/^		ValType data; 		\/\/ data $/;"	m	struct:CdSuList::ListElement
data	test/msgdistr-test.h	/^	char data [256];$/;"	m	struct:MyTestMsg
data	test/tcpnh/basictest/parameter.h	/^char data [maxCounter] [100] = $/;"	v
data	test/tcpnh/featuretest/parameter.h	/^char data [maxCounter] [100] = $/;"	v
data	test/udpnh/basic-test/parameter.h	/^char data [maxCounter] [100] = $/;"	v
data	test/udpnh/load-testing/parameter.h	/^char data [100] = "DATA...................................";$/;"	v
data	test/udpnh/testing-mul-nh-support/tester.cpp	/^char data [] [ 100 ]   =$/;"	v
data	test/udpnh/testing-mul-nh-support/tester.cpp	/^char data [] [ 100 ] = $/;"	v
data	test/udpnh/testing-mul-nh-usr-support/tester.cpp	/^char data [] [ 100 ]   =$/;"	v
data	test/udpnh/testing-mul-nh-usr-support/tester.cpp	/^char data [] [ 100 ] = $/;"	v
data	test/udpnh/testing-mul-user-support/tester.cpp	/^char data [] [ 100 ]   =$/;"	v
data	test/udpnh/testing-mul-user-support/tester.cpp	/^char data [] [ 100 ] = $/;"	v
data-struct	docs/design/mdd/charhash/index.html	/^<a name="data-struct"><\/a>$/;"	a
data-struct	docs/design/mdd/inthash/index.html	/^<a name="data-struct"><\/a>$/;"	a
data-struct	docs/design/mdd/list/index.html	/^<a name="data-struct"><\/a>$/;"	a
data-struct	docs/design/mdd/msgdistr/msgdistrmdd.html	/^<a name="data-struct"><\/a>$/;"	a
data-struct	docs/design/mdd/multibytehash/index.html	/^<a name="data-struct"><\/a>$/;"	a
data-struct	docs/design/mdd/nhtcp/index.html	/^<A NAME="data-struct"><\/A>$/;"	a
data-struct	docs/design/mdd/nhudp/index.html	/^<A NAME="data-struct"><\/A>$/;"	a
data-struct	docs/design/mdd/queue/index.html	/^<a name="data-struct"><\/a>$/;"	a
data-struct	docs/design/mdd/taskscheduler/index.html	/^<a name="data-struct"><\/a>$/;"	a
data-struct	docs/design/mdd/tsqueue/index.html	/^<a name="data-struct"><\/a>$/;"	a
dataIndEvent	src/tcpnh/cdsunhtcpmsg.h	/^	CdSuNhTcpUiDataIndEvent dataIndEvent;$/;"	m	struct:CdSuNhTcpUiDataIndMsg
dataIndEvent	src/udpnh/cdsunhudpmsg.h	/^	CdSuNhUdpUiDataIndEvent dataIndEvent;	\/\/ Data Indication Event Param.$/;"	m	struct:CdSuNhUdpUiDataIndMsg
dataLen	src/msgdistr/cdsunhudpglobals.h	/^	Uint32 dataLen;$/;"	m	struct:CdSuMdUdpNhTxBufMsg
dataLen	src/tcpnh/cdsunhtcpapiparam.h	/^	Uint16 dataLen;$/;"	m	struct:CdSuNhTcpUiDataIndEvent
dataLen	src/tcpnh/cdsunhtcpapiparam.h	/^	Uint16 dataLen;$/;"	m	struct:CdSuNhTcpUiDataReqParam
dataLen	src/udpnh/cdsunhudpapiparam.h	/^	Uint16 dataLen;			\/\/ data length.$/;"	m	struct:CdSuNhUdpUiDataIndEvent
dataLen	src/udpnh/cdsunhudpapiparam.h	/^	Uint16 dataLen;			\/\/ data length.$/;"	m	struct:CdSuNhUdpUiDataReqParam
dataLen	src/udpnh/cdsunhudpapiparam.h	/^	Uint16 dataLen;			\/\/ data length.$/;"	m	struct:CdSuNhUdpUiSendReqParam
dataPtr	src/tcpnh/cdsunhtcpapiparam.h	/^	char* dataPtr;$/;"	m	struct:CdSuNhTcpUiDataIndEvent
dataPtr	src/tcpnh/cdsunhtcpapiparam.h	/^	char* dataPtr;$/;"	m	struct:CdSuNhTcpUiDataReqParam
dataPtr	src/udpnh/cdsunhudpapiparam.h	/^	char* dataPtr;			\/\/ data pointer.$/;"	m	struct:CdSuNhUdpUiDataIndEvent
dataPtr	src/udpnh/cdsunhudpapiparam.h	/^	char* dataPtr;			\/\/ data pointer.$/;"	m	struct:CdSuNhUdpUiDataReqParam
dataPtr	src/udpnh/cdsunhudpapiparam.h	/^	char* dataPtr;			\/\/ data pointer.$/;"	m	struct:CdSuNhUdpUiSendReqParam
dataRcvdFromAddr	test/udpnh/basic-test/parameter.h	/^CdSuIpv4Addr dataRcvdFromAddr;$/;"	v
dataRcvdFromPortNo	test/udpnh/basic-test/parameter.h	/^CdSuIpv4UdpPortNo dataRcvdFromPortNo;$/;"	v
dataReqInValid	test/tcpnh/featuretest/testfunctions.cpp	/^void dataReqInValid ()$/;"	f
dataReqMsgHlr	src/udpnh/cdsunhudp.cpp	/^void CdSuNhUdp::dataReqMsgHlr (CdMessage* msg)$/;"	f	class:CdSuNhUdp
dataReqParam	src/tcpnh/cdsunhtcpmsg.h	/^	CdSuNhTcpUiDataReqParam dataReqParam;$/;"	m	struct:CdSuNhTcpUiDataReqMsg
dataReqParam	src/udpnh/cdsunhudpmsg.h	/^	CdSuNhUdpUiDataReqParam dataReqParam; 	\/\/ Send Data Request param.$/;"	m	struct:CdSuNhUdpUiDataReqMsg
dataReqParam	test/tcpnh/basictest/parameter.h	/^CdSuNhTcpUiDataReqParam dataReqParam; $/;"	v
dataReqParam	test/tcpnh/featuretest/parameter.h	/^CdSuNhTcpUiDataReqParam dataReqParam; $/;"	v
dataReqValid	test/tcpnh/featuretest/testfunctions.cpp	/^void dataReqValid ()$/;"	f
dataRspEvent	src/tcpnh/cdsunhtcpmsg.h	/^	CdSuNhTcpUiDataRspEvent dataRspEvent;$/;"	m	struct:CdSuNhTcpUiDataRspMsg
dataRspEvent	src/udpnh/cdsunhudpmsg.h	/^	CdSuNhUdpUiDataRspEvent dataRspEvent; 	\/\/ Data Response Event Param.$/;"	m	struct:CdSuNhUdpUiDataRspMsg
dataSelTmr	src/tcpnh/cdsunhtcpdb.h	/^	Uint32 dataSelTmr;$/;"	m	class:CdSuNhTcpDb
dataSelTmr	src/udpnh/cdsunhudpdb.h	/^	Uint32 dataSelTmr;		\/\/ Data Select Timeout$/;"	m	class:CdSuNhUdpDb
dataSelectTimer	src/tcpnh/cdsunhtcpapiparam.h	/^	Uint32 dataSelectTimer;			\/\/ Time to wait in the select call waiting for data in connection. (microsecs)$/;"	m	struct:CdSuNhTcpMiInitParam
dataSelectTimer	src/udpnh/cdsunhudpapiparam.h	/^	Uint32 dataSelectTimer;		\/\/ Time to wait in the select call waiting for data in connection. (microsecs)$/;"	m	struct:CdSuNhUdpMiInitParam
dbLock	src/tcpnh/cdsunhtcpinstmgr.h	/^	pthread_mutex_t dbLock;$/;"	m	class:CdSuNhTcpInstMgr
dbLock	src/udpnh/cdsunhudpinstmgr.h	/^	pthread_mutex_t dbLock;$/;"	m	class:CdSuNhUdpInstMgr
dc	docs/design/mdd/nhtcp/index.html	/^<a name="dc"><\/a>$/;"	a
dc	docs/design/mdd/nhudp/index.html	/^<a name="dc"><\/a>$/;"	a
dd	docs/design/mdd/charhash/index.html	/^<a name="dd"><\/a>$/;"	a
dd	docs/design/mdd/inthash/index.html	/^<a name="dd"><\/a>$/;"	a
dd	docs/design/mdd/list/index.html	/^<a name="dd"><\/a>$/;"	a
dd	docs/design/mdd/msgdistr/msgdistrmdd.html	/^<a name="dd"><\/a>$/;"	a
dd	docs/design/mdd/multibytehash/index.html	/^<a name="dd"><\/a>$/;"	a
dd	docs/design/mdd/nhtcp/index.html	/^<A NAME="dd"><\/A>$/;"	a
dd	docs/design/mdd/nhudp/index.html	/^<A NAME="dd"><\/A>$/;"	a
dd	docs/design/mdd/queue/index.html	/^<a name="dd"><\/a>$/;"	a
dd	docs/design/mdd/taskscheduler/index.html	/^<a name="dd"><\/a>$/;"	a
dd	docs/design/mdd/tsqueue/index.html	/^<a name="dd"><\/a>$/;"	a
dd-cd	docs/design/mdd/charhash/index.html	/^<a name="dd-cd"><\/a>$/;"	a
dd-cd	docs/design/mdd/inthash/index.html	/^<a name="dd-cd"><\/a>$/;"	a
dd-cd	docs/design/mdd/list/index.html	/^<a name="dd-cd"><\/a>$/;"	a
dd-cd	docs/design/mdd/msgdistr/msgdistrmdd.html	/^<a name="dd-cd"><\/a>$/;"	a
dd-cd	docs/design/mdd/multibytehash/index.html	/^<a name="dd-cd"><\/a>$/;"	a
dd-cd	docs/design/mdd/queue/index.html	/^<a name="dd-cd"><\/a>$/;"	a
dd-cd	docs/design/mdd/taskscheduler/index.html	/^<a name="dd-cd"><\/a>$/;"	a
dd-cd	docs/design/mdd/tsqueue/index.html	/^<a name="dd-cd"><\/a>$/;"	a
dd-eid	docs/design/mdd/msgdistr/msgdistrmdd.html	/^<a name="dd-eid"><\/a>$/;"	a
dd-eid	docs/design/mdd/taskscheduler/index.html	/^<a name="dd-eid"><\/a>$/;"	a
dd-eid-c	docs/design/mdd/msgdistr/msgdistrmdd.html	/^<a name="dd-eid-c"><\/a>$/;"	a
dd-eid-c	docs/design/mdd/taskscheduler/index.html	/^<a name="dd-eid-c"><\/a>$/;"	a
dd-eid-e	docs/design/mdd/msgdistr/msgdistrmdd.html	/^<a name="dd-eid-e"><\/a>$/;"	a
dd-eid-e	docs/design/mdd/nhtcp/index.html	/^<A NAME="dd-eid-e"><\/A>$/;"	a
dd-eid-e	docs/design/mdd/taskscheduler/index.html	/^<a name="dd-eid-e"><\/a>$/;"	a
decrementCtr	src/tcpnh/cdsunhtcpstatspkg.h	/^	void decrementCtr (CdSuNhTcpCtrType ctrType)$/;"	f	class:CdSuNhTcpStatisticsPkg
decrementCtr	src/udpnh/cdsunhudpstatspkg.h	/^	void decrementCtr (CdSuNhUdpCtrType ctrType)$/;"	f	class:CdSuNhUdpStatisticsPkg
defThreadsStack	src/misc/cdsuthread.cpp	/^static char defThreadsStack$/;"	v	file:
del	src/timer/cdsutimingwheel.cpp	/^bool CdSuTimingWheel::del (CdSuTnode* value)$/;"	f	class:CdSuTimingWheel
delFlag	src/tcpnh/cdsunhtcp.h	/^	bool delFlag;$/;"	m	class:CdSuNhTcp
delNhParam	src/tcpnh/cdsunhtcpmsg.h	/^	CdSuNhTcpMiDelNhParam delNhParam;$/;"	m	struct:CdSuNhTcpMiDelNhReqMsg
delNhParam	src/udpnh/cdsunhudpmsg.h	/^	CdSuNhUdpMiDelNhParam delNhParam;	\/\/ Delete NH Request Parameter $/;"	m	struct:CdSuNhUdpMiDelNhReqMsg
delNhReqMsgHlr	src/tcpnh/cdsunhtcp.cpp	/^void CdSuNhTcp::delNhReqMsgHlr (CdMessage* msg)$/;"	f	class:CdSuNhTcp
delNhReqMsgHlr	src/udpnh/cdsunhudp.cpp	/^void CdSuNhUdp::delNhReqMsgHlr (CdMessage* msg)$/;"	f	class:CdSuNhUdp
delNhRspEvent	src/tcpnh/cdsunhtcpmsg.h	/^	CdSuNhTcpMiDelNhRspEvent delNhRspEvent;$/;"	m	struct:CdSuNhTcpMiDelNhRspMsg
delNhRspEvent	src/udpnh/cdsunhudpmsg.h	/^	CdSuNhUdpMiDelNhRspEvent delNhRspEvent;		\/\/ Delete Nh Response Event Param.$/;"	m	struct:CdSuNhUdpMiDelNhRspMsg
delay	test/udpnh/load-testing/parameter.h	/^int delay = 20000000; \/\/20 microsecond$/;"	v
deleteNhInValid	test/tcpnh/featuretest/testfunctions.cpp	/^void deleteNhInValid ()$/;"	f
deleteNhUdpInstMgr	src/udpnh/cdsunhudpinstmgr.cpp	/^CdSuNhUdpInstMgr* CdSuNhUdpInstMgr::deleteNhUdpInstMgr ()$/;"	f	class:CdSuNhUdpInstMgr
deleteNhValid	test/tcpnh/featuretest/testfunctions.cpp	/^void deleteNhValid ()$/;"	f
deleteTcpNh	test/tcpnh/basictest/testfunctions.cpp	/^void deleteTcpNh ()$/;"	f
deleteTcpNh	test/tcpnh/featuretest/testfunctions.cpp	/^bool deleteTcpNh (bool flag)$/;"	f
deleteTnode	src/timer/cdsutimingwheel.cpp	/^void CdSuTimingWheel::deleteTnode (CdSuTnode* p)$/;"	f	class:CdSuTimingWheel
deleteUdpNh	test/udpnh/basic-test/testfunctions.cpp	/^void deleteUdpNh ()$/;"	f
deleted	src/udpnh/cdsunhudp.h	/^	bool deleted;				\/\/ flag: is Deleted.$/;"	m	class:CdSuNhUdp
deli	docs/reqs/srs/nhtcp/index.html	/^<h3><a name="deli">3.7 Deliverables<\/a><\/h3>$/;"	a
deli	docs/reqs/srs/nhudp/index.html	/^<h3><a name="deli">3.7.1 Deliverables<\/a><\/h3>$/;"	a
delnhparam	test/tcpnh/basictest/parameter.h	/^CdSuNhTcpMiDelNhParam delnhparam;$/;"	v
delnhparam	test/tcpnh/featuretest/parameter.h	/^CdSuNhTcpMiDelNhParam delnhparam;$/;"	v
delnhparam	test/udpnh/basic-test/parameter.h	/^CdSuNhUdpMiDelNhParam delnhparam;$/;"	v
delnhparam	test/udpnh/load-testing/parameter.h	/^CdSuNhUdpMiDelNhParam delnhparam;$/;"	v
des-con	docs/design/mdd/msgdistr/msgdistrmdd.html	/^<a name="des-con"><\/a>$/;"	a
des-con	docs/design/mdd/queue/index.html	/^<a name="des-con"><\/a>$/;"	a
des-con	docs/design/mdd/taskscheduler/index.html	/^<a name="des-con"><\/a>$/;"	a
des-con	docs/design/mdd/tsqueue/index.html	/^<a name="des-con"><\/a>$/;"	a
des-con	docs/reqs/srs/nhtcp/index.html	/^<h3><a name="des-con">3.5 Design constraints<\/a><\/h3>$/;"	a
des-con	docs/reqs/srs/nhudp/index.html	/^<h3><a name="des-con">3.5 Design constraints<\/a><\/h3>$/;"	a
destAddr	src/udpnh/cdsunhudpapiparam.h	/^	CdSuIpv4Addr destAddr;		\/\/ Destination Address.$/;"	m	struct:CdSuNhUdpUiDataReqParam
destAddr	src/udpnh/cdsunhudpapiparam.h	/^	CdSuIpv4Addr destAddr;		\/\/ Destination Address.$/;"	m	struct:CdSuNhUdpUiSendReqParam
destAddr	src/udpnh/cdsunhudpapiparam.h	/^	CdSuIpv4Addr destAddr;		\/\/ peer end address from which data received.$/;"	m	struct:CdSuNhUdpUiDataIndEvent
destAddr	src/udpnh/cdsunhudpapiparam.h	/^ 	CdSuIpv4Addr destAddr;			\/\/ destination ipv4 address.	$/;"	m	struct:CdSuNhUdpUiAddUdpPortReqParam
destIpv4Addr	src/tcpnh/cdsunhtcp.h	/^	CdSuIpv4Addr destIpv4Addr;$/;"	m	struct:CdSuNhTcpConnInfo
destIpv4Addr	src/udpnh/cdsunhudp.h	/^		CdSuIpv4Addr destIpv4Addr;	\/\/ Destination IP Information.$/;"	m	struct:CdSuNhUdp::CdSuNhUdpPortInfo
destModuleId	include/cdsutimer.h	/^	CdModuleId destModuleId;$/;"	m	struct:CdSuTimeout
destModuleId	include/cdsutimer.h	/^	CdModuleId destModuleId;$/;"	m	struct:CdSuTimerInfo
destPortNo	src/tcpnh/cdsunhtcp.h	/^	CdSuIpv4TcpPortNo destPortNo;		$/;"	m	struct:CdSuNhTcpConnInfo
destPortNo	src/udpnh/cdsunhudp.h	/^		CdSuIpv4UdpPortNo destPortNo;	\/\/ Destination Port NO.	$/;"	m	struct:CdSuNhUdp::CdSuNhUdpPortInfo
destPortNo	src/udpnh/cdsunhudpapiparam.h	/^	CdSuIpv4UdpPortNo destPortNo;		\/\/ Invalid means, udp port not connected.$/;"	m	struct:CdSuNhUdpUiAddUdpPortReqParam
destPortNo	src/udpnh/cdsunhudpapiparam.h	/^	CdSuIpv4UdpPortNo destPortNo;	\/\/ Destination Port Number$/;"	m	struct:CdSuNhUdpUiDataReqParam
destPortNo	src/udpnh/cdsunhudpapiparam.h	/^	CdSuIpv4UdpPortNo destPortNo;	\/\/ Destination Port Number$/;"	m	struct:CdSuNhUdpUiSendReqParam
destPortNo	src/udpnh/cdsunhudpapiparam.h	/^	CdSuIpv4UdpPortNo destPortNo; 	\/\/ peer end port number from which data received.$/;"	m	struct:CdSuNhUdpUiDataIndEvent
destPortType	test/udpnh/basic-test/parameter.h	/^DestPortType destPortType = DEST_DEFAULT;$/;"	v
diffLocalIpAddr	test/udpnh/basic-test/parameter.h	/^char diffLocalIpAddr [4] = { 192, 168, 16, 72 };$/;"	v
diffRemoteIpAddr	test/udpnh/basic-test/parameter.h	/^char diffRemoteIpAddr [4] = {192, 168, 16,72 };$/;"	v
discReqMsgHlr	src/tcpnh/cdsunhtcp.cpp	/^void CdSuNhTcp::discReqMsgHlr (CdMessage* msg)$/;"	f	class:CdSuNhTcp
dispatcher	src/misc/cdsutaskscheduler.cpp	/^void CdSuTaskScheduler::dispatcher ()$/;"	f	class:CdSuTaskScheduler
displayApiRtType	test/tcpnh/basictest/testfunctions.cpp	/^void displayApiRtType (CdSuNhTcpApiRetType apiRtType)$/;"	f
displayApiRtType	test/tcpnh/featuretest/testfunctions.cpp	/^void displayApiRtType (CdSuNhTcpApiRetType apiRtType)$/;"	f
displayApiRtType	test/udpnh/basic-test/testfunctions.cpp	/^void displayApiRtType (CdSuNhUdpApiRetType apiRtType)$/;"	f
displayErrorType	test/tcpnh/basictest/testfunctions.cpp	/^void displayErrorType (CdSuNhTcpFailCode failCode)$/;"	f
displayErrorType	test/tcpnh/featuretest/testfunctions.cpp	/^void displayErrorType (CdSuNhTcpFailCode failCode)$/;"	f
displayErrorType	test/udpnh/basic-test/testfunctions.cpp	/^void displayErrorType (CdSuNhUdpRspFailCode failCode)$/;"	f
displayErrorType	test/udpnh/load-testing/testfunctions.cpp	/^void displayErrorType (CdSuNhUdpRspFailCode failCode)$/;"	f
displayErrorType	test/udpnh/testing-mul-nh-support/tester.cpp	/^void displayErrorType (CdSuNhUdpRspFailCode failCode)$/;"	f
displayErrorType	test/udpnh/testing-mul-nh-usr-support/tester.cpp	/^void displayErrorType (CdSuNhUdpRspFailCode failCode)$/;"	f
displayErrorType	test/udpnh/testing-mul-user-support/tester.cpp	/^void displayErrorType (CdSuNhUdpRspFailCode failCode)$/;"	f
displayParamSetting	test/udpnh/basic-test/testfunctions.cpp	/^void displayParamSetting ()$/;"	f
doLoadTestOne	test/udpnh/load-testing/testfunctions.cpp	/^void doLoadTestOne ()$/;"	f
doReply	test/udpnh/load-testing/parameter.h	/^bool doReply = false;$/;"	v
dontSetLocalPort	test/udpnh/basic-test/testfunctions.cpp	/^void dontSetLocalPort ()$/;"	f
dst	include/cdsusanity.h	/^	CdModuleId dst;$/;"	m	struct:SanityParams
dst	include/cdsusanitymsgs.h	/^	CdModuleId	dst;			\/\/ Id of the destination$/;"	m	struct:CdMessageHeader
dst	include/cdsuutiltypes-c.h	/^	CdModuleId      dst;                    \/\/ destination module id$/;"	m	struct:CdMessageHdr
dst	include/cdsuutiltypes.h	/^	CdModuleId      dst;                    \/\/ destination module id$/;"	m	struct:CdMessageHdr
dstIpv4Addr	src/tcpnh/cdsunhtcpapiparam.h	/^	CdSuIpv4Addr dstIpv4Addr;		\/\/ Destination Ipaddress for the connection.$/;"	m	struct:CdSuNhTcpUiConReqParam
dstIpv4Addr	src/tcpnh/cdsunhtcpapiparam.h	/^	CdSuIpv4Addr dstIpv4Addr;	\/\/ Destination Ipaddress for the connection.$/;"	m	struct:CdSuNhTcpUiConIndEvent
dstPortNo	src/tcpnh/cdsunhtcpapiparam.h	/^	CdSuIpv4TcpPortNo dstPortNo;		\/\/ Destination port no for the connection.$/;"	m	struct:CdSuNhTcpUiConReqParam
dstPortNo	src/tcpnh/cdsunhtcpapiparam.h	/^	CdSuIpv4TcpPortNo dstPortNo;	\/\/ Destination port no for the connection.$/;"	m	struct:CdSuNhTcpUiConIndEvent
dstShId	include/cdsusanity.h	/^	Uint32 dstShId;$/;"	m	class:SanityModule
empty	include/cdsulist.h	/^bool CdSuList<ValType>::empty () const$/;"	f	class:CdSuList
empty	include/cdsuqueue.h	/^inline bool CdSuQueue<KeyType>::empty ()$/;"	f	class:CdSuQueue
empty	include/cdsutsqueue.h	/^inline bool CdSuTsQueue<KeyType>::empty ()$/;"	f	class:CdSuTsQueue
enableCas	test/udpnh/basic-test/tdmIf.cpp	/^void TdmInterface::enableCas (Uint16 e1)$/;"	f	class:TdmInterface
enableCas	test/udpnh/load-testing/tdmIf.cpp	/^void TdmInterface::enableCas (Uint16 e1)$/;"	f	class:TdmInterface
enableCcs	test/udpnh/basic-test/tdmIf.cpp	/^void TdmInterface::enableCcs (Uint16 e1)$/;"	f	class:TdmInterface
enableCcs	test/udpnh/load-testing/tdmIf.cpp	/^void TdmInterface::enableCcs (Uint16 e1)$/;"	f	class:TdmInterface
enableE1	test/udpnh/basic-test/tdmIf.cpp	/^void TdmInterface::enableE1 (Uint16 e1)$/;"	f	class:TdmInterface
enableE1	test/udpnh/load-testing/tdmIf.cpp	/^void TdmInterface::enableE1 (Uint16 e1)$/;"	f	class:TdmInterface
encodedMessage	src/msgdistr/cdsunhudpglobals.h	/^	char* encodedMessage;$/;"	m	struct:CdSuMdUdpNhTxBufMsg
end	include/cdsucharhash.h	/^typename CdSuCharHash<ValType>::iterator CdSuCharHash<ValType>::end () const$/;"	f	class:CdSuCharHash
end	include/cdsuinthash.h	/^typename CdSuIntHash<ValType>::iterator CdSuIntHash<ValType>::end () const$/;"	f	class:CdSuIntHash
end	include/cdsulist.h	/^typename CdSuList<ValType>::iterator CdSuList<ValType>::end () const$/;"	f	class:CdSuList
end	include/cdsumbhash.h	/^typename CdSuMultiByteHash<ValType>::iterator CdSuMultiByteHash<ValType>::end () const$/;"	f	class:CdSuMultiByteHash
end	include/cdsuqueue.h	/^typename CdSuQueue<KeyType>::iterator CdSuQueue<KeyType>::end () const $/;"	f	class:CdSuQueue
end	include/cdsutsqueue.h	/^typename CdSuTsQueue<KeyType>::iterator CdSuTsQueue<KeyType>::end () const $/;"	f	class:CdSuTsQueue
endOfChain	include/cdsucharhash.h	/^		const HashBucket* endOfChain;$/;"	m	class:CdSuCharHash::iterator
endOfChain	include/cdsuinthash.h	/^		const HashBucket* endOfChain;$/;"	m	class:CdSuIntHash::iterator
endOfChain	include/cdsumbhash.h	/^		const HashBucket* endOfChain;$/;"	m	class:CdSuMultiByteHash::iterator
endTime	test/tcpnh/basictest/parameter.h	/^time_t endTime;$/;"	v
entities	docs/design/mdd/nhudp/index.html	/^<A NAME="entities"><\/A>$/;"	a
erase	include/cdsulist.h	/^typename CdSuList<ValType>::iterator  CdSuList<ValType>::erase (iterator first,$/;"	f	class:CdSuList
erase	include/cdsulist.h	/^typename CdSuList<ValType>::iterator CdSuList<ValType>::erase (iterator iter)$/;"	f	class:CdSuList
erdgm	docs/design/mdd/nhudp/index.html	/^<A NAME="erdgm"><\/A>$/;"	a
estdSanityFlag	include/cdsusanity.h	/^	bool estdSanityFlag;$/;"	m	class:SanityModule
evt	docs/reqs/srs/nhtcp/index.html	/^<h3><a name="evt">2.1.4 Event Handler<\/a><\/h3>$/;"	a
exit	src/misc/cdsuthread.cpp	/^void CdSuThread::exit()$/;"	f	class:CdSuThread
ext-int	docs/reqs/srs/nhtcp/index.html	/^<h3><a name="ext-int">3.1 External Interface Requirements<\/a><\/h3>$/;"	a
ext-int	docs/reqs/srs/nhudp/index.html	/^<h3><a name="ext-int">3.1 External Interfaces Requirements<\/a><\/h3>$/;"	a
failCode	src/tcpnh/cdsunhtcpapiparam.h	/^	CdSuNhTcpFailCode failCode;$/;"	m	struct:CdSuNhTcpMiCfgRspEvent
failCode	src/tcpnh/cdsunhtcpapiparam.h	/^	CdSuNhTcpFailCode failCode;$/;"	m	struct:CdSuNhTcpMiCtrlRspEvent
failCode	src/tcpnh/cdsunhtcpapiparam.h	/^	CdSuNhTcpFailCode failCode;$/;"	m	struct:CdSuNhTcpMiDelNhRspEvent
failCode	src/tcpnh/cdsunhtcpapiparam.h	/^	CdSuNhTcpFailCode failCode;$/;"	m	struct:CdSuNhTcpMiInitRspEvent
failCode	src/tcpnh/cdsunhtcpapiparam.h	/^	CdSuNhTcpFailCode failCode;$/;"	m	struct:CdSuNhTcpMiStatusRspEvent
failCode	src/tcpnh/cdsunhtcpapiparam.h	/^	CdSuNhTcpFailCode failCode;$/;"	m	struct:CdSuNhTcpMiStsRspEvent
failCode	src/tcpnh/cdsunhtcpapiparam.h	/^	CdSuNhTcpFailCode failCode;$/;"	m	struct:CdSuNhTcpMiUStaIndEvent
failCode	src/tcpnh/cdsunhtcpapiparam.h	/^	CdSuNhTcpFailCode failCode;$/;"	m	struct:CdSuNhTcpUiAddLstnRspEvent
failCode	src/tcpnh/cdsunhtcpapiparam.h	/^	CdSuNhTcpFailCode failCode;$/;"	m	struct:CdSuNhTcpUiCloseConRspEvent
failCode	src/tcpnh/cdsunhtcpapiparam.h	/^	CdSuNhTcpFailCode failCode;$/;"	m	struct:CdSuNhTcpUiConRspEvent
failCode	src/tcpnh/cdsunhtcpapiparam.h	/^	CdSuNhTcpFailCode failCode;$/;"	m	struct:CdSuNhTcpUiDataRspEvent
failCode	src/tcpnh/cdsunhtcpapiparam.h	/^	CdSuNhTcpFailCode failCode;$/;"	m	struct:CdSuNhTcpUiRemLstnRspEvent
failCode	src/udpnh/cdsunhudpapiparam.h	/^	CdSuNhUdpRspFailCode failCode;	\/\/ Indicates fail reason.(valid only if fail)$/;"	m	struct:CdSuNhUdpMiInitRspEvent
failCode	src/udpnh/cdsunhudpapiparam.h	/^	CdSuNhUdpRspFailCode failCode;	\/\/ fail reason.$/;"	m	struct:CdSuNhUdpUiRemUdpPortRspEvent
failCode	src/udpnh/cdsunhudpapiparam.h	/^	CdSuNhUdpRspFailCode failCode; 	\/\/ Indicates fail reason.$/;"	m	struct:CdSuNhUdpMiDelNhRspEvent
failCode	src/udpnh/cdsunhudpapiparam.h	/^	CdSuNhUdpRspFailCode failCode; 	\/\/ fail reason.$/;"	m	struct:CdSuNhUdpMiCfgRspEvent
failCode	src/udpnh/cdsunhudpapiparam.h	/^	CdSuNhUdpRspFailCode failCode; 	\/\/ fail reason.$/;"	m	struct:CdSuNhUdpMiCtrlRspEvent
failCode	src/udpnh/cdsunhudpapiparam.h	/^	CdSuNhUdpRspFailCode failCode; 	\/\/ fail reason.$/;"	m	struct:CdSuNhUdpMiStatusRspEvent
failCode	src/udpnh/cdsunhudpapiparam.h	/^	CdSuNhUdpRspFailCode failCode; 	\/\/ fail reason.$/;"	m	struct:CdSuNhUdpMiStsRspEvent
failCode	src/udpnh/cdsunhudpapiparam.h	/^	CdSuNhUdpRspFailCode failCode; 	\/\/ fail reason.$/;"	m	struct:CdSuNhUdpUiAddUdpPortRspEvent
failCode	src/udpnh/cdsunhudpapiparam.h	/^	CdSuNhUdpRspFailCode failCode; 	\/\/ fail reason.$/;"	m	struct:CdSuNhUdpUiDataIndEvent
failCode	src/udpnh/cdsunhudpapiparam.h	/^	CdSuNhUdpRspFailCode failCode; 	\/\/ fail reason.$/;"	m	struct:CdSuNhUdpUiDataRspEvent
failCode	src/udpnh/cdsunhudpapiparam.h	/^	CdSuNhUdpRspFailCode failCode; 	\/\/ fail reason.$/;"	m	struct:CdSuNhUdpUiSendRspEvent
failCodeString	test/tcpnh/basictest/parameter.h	/^char failCodeString  [] [100] =$/;"	v
failCodeString	test/tcpnh/featuretest/parameter.h	/^char failCodeString  [] [100] =$/;"	v
failCodeString	test/udpnh/basic-test/parameter.h	/^char failCodeString  [] [100] =$/;"	v
failCodeString	test/udpnh/load-testing/parameter.h	/^char failCodeString  [] [100] =$/;"	v
failCodeString	test/udpnh/testing-mul-nh-support/tester.cpp	/^char failCodeString  [] [100] =$/;"	v
failCodeString	test/udpnh/testing-mul-nh-usr-support/tester.cpp	/^char failCodeString  [] [100] =$/;"	v
failCodeString	test/udpnh/testing-mul-user-support/tester.cpp	/^char failCodeString  [] [100] =$/;"	v
fdst	include/cdsusanity.h	/^	CdModuleId fdst;$/;"	m	struct:SanityParams
fdstShId	include/cdsusanity.h	/^	Uint32 fdstShId;$/;"	m	class:SanityModule
fem2ua	docs/reqs/srs/nhtcp/index.html	/^<h3><a name="fem2ua">2.1.3 Features of Network Handler<\/a><\/h3>$/;"	a
first	include/cdsucharhash.h	/^		HashElement* first;$/;"	m	struct:CdSuCharHash::HashBucket
first	include/cdsuinthash.h	/^		HashElement* first;$/;"	m	struct:CdSuIntHash::HashBucket
first	include/cdsumbhash.h	/^		HashElement* first;$/;"	m	struct:CdSuMultiByteHash::HashBucket
flow	docs/design/mdd/nhudp/index.html	/^<h2> <a name="flow">7. Message Flow between Different Entity<\/a><\/h2>$/;"	a
forCheckingCopyConstructor	test/charhash-test.cpp	/^void forCheckingCopyConstructor (CdSuCharHash<int> ch)$/;"	f
forCheckingCopyConstructor	test/inthash-test.cpp	/^void forCheckingCopyConstructor (CdSuIntHash<int> ih)$/;"	f
forCheckingCopyConstructor	test/list-test.cpp	/^void forCheckingCopyConstructor (CdSuList<int> il)$/;"	f
forCheckingCopyConstructor	test/mbhash-test.cpp	/^void forCheckingCopyConstructor (CdSuMultiByteHash<int> mbh)$/;"	f
forCheckingCopyConstructor	test/queue-test.cpp	/^void forCheckingCopyConstructor (CdSuQueue<int> q)$/;"	f
forCheckingCopyConstructor	test/tsqueue-test.cpp	/^void forCheckingCopyConstructor (CdSuTsQueue<int> q)$/;"	f
freeBucketList	include/cdsucharhash.h	/^void CdSuCharHash<ValType>::freeBucketList (HashElement* el)$/;"	f	class:CdSuCharHash
freeBucketList	include/cdsuinthash.h	/^void CdSuIntHash<ValType>::freeBucketList (HashElement* el)$/;"	f	class:CdSuIntHash
freeBucketList	include/cdsumbhash.h	/^void CdSuMultiByteHash<ValType>::freeBucketList (HashElement* el)$/;"	f	class:CdSuMultiByteHash
freeConnId	src/tcpnh/cdsunhtcpdb.cpp	/^				freeConnId (CdSuNhTcpConnId connId)$/;"	f	class:CdSuNhTcpDb::NhTcpConnIdAllocator
freeConnId	src/tcpnh/cdsunhtcpdb.h	/^	inline bool freeConnId (CdSuNhTcpConnId connId)$/;"	f	class:CdSuNhTcpDb
freeElement	include/cdsucharhash.h	/^void CdSuCharHash<ValType>::freeElement (HashElement* el)$/;"	f	class:CdSuCharHash
freeElement	include/cdsuinthash.h	/^void CdSuIntHash<ValType>::freeElement (HashElement* el)$/;"	f	class:CdSuIntHash
freeElement	include/cdsumbhash.h	/^void CdSuMultiByteHash<ValType>::freeElement (HashElement* el)$/;"	f	class:CdSuMultiByteHash
freeLstnId	src/tcpnh/cdsunhtcpdb.cpp	/^bool CdSuNhTcpDb::NhTcpLstnIdAllocator:: freeLstnId ($/;"	f	class:CdSuNhTcpDb::NhTcpLstnIdAllocator
freeLstnId	src/tcpnh/cdsunhtcpdb.h	/^	inline bool freeLstnId (CdSuNhTcpLstnId lstnId)$/;"	f	class:CdSuNhTcpDb
freeUdpPortId	src/udpnh/cdsunhudpdb.cpp	/^				freeUdpPortId (CdSuNhUdpPortId udpPortId)$/;"	f	class:CdSuNhUdpDb::NhUdpPortIdAllocator
freeUdpPortId	src/udpnh/cdsunhudpdb.h	/^	inline bool freeUdpPortId (CdSuNhUdpPortId udpPortId)$/;"	f	class:CdSuNhUdpDb
front	include/cdsulist.h	/^ValType& CdSuList<ValType>::front ()$/;"	f	class:CdSuList
full	include/cdsuqueue.h	/^inline bool CdSuQueue<KeyType>::full ()$/;"	f	class:CdSuQueue
full	include/cdsutsqueue.h	/^inline bool CdSuTsQueue<KeyType>::full ()$/;"	f	class:CdSuTsQueue
fun-req	docs/reqs/srs/nhtcp/index.html	/^<h3><a name="fun-req">3.2 Functional Requirements<\/a><\/h3>$/;"	a
fun-req	docs/reqs/srs/nhudp/index.html	/^<h3><a name="fun-req">3.2 Functional Requirements<\/a><\/h3>$/;"	a
g	docs/design/mdd/charhash/index.html	/^<a name="g"><\/a>$/;"	a
g	docs/design/mdd/inthash/index.html	/^<a name="g"><\/a>$/;"	a
g	docs/design/mdd/list/index.html	/^<a name="g"><\/a>$/;"	a
g	docs/design/mdd/multibytehash/index.html	/^<a name="g"><\/a>$/;"	a
gd	docs/reqs/srs/nhtcp/index.html	/^<hr width="100%" size="2" noshade="noshade"><a name="gd"><h2>2. General Description<\/h2><\/a>$/;"	a
gd	docs/reqs/srs/nhudp/index.html	/^<hr width="100%" size="2" noshade="noshade"><a name="gd"><h2>2. General Description<\/h2><\/a>$/;"	a
genCfgNhInValid	test/tcpnh/featuretest/testfunctions.cpp	/^void genCfgNhInValid ()$/;"	f
genCfgNhValid	test/tcpnh/featuretest/testfunctions.cpp	/^void genCfgNhValid ()$/;"	f
generalConfig	test/udpnh/basic-test/testfunctions.cpp	/^void generalConfig ()$/;"	f
getApplMesgQ	src/msgdistr/cdsunhudpdb.h	/^	CdSuTsQueue<CdMessage*>* getApplMesgQ () { return (applQ); }$/;"	f	class:CdSuNwhlrDb
getAttributes	src/misc/cdsuthread.cpp	/^const pthread_attr_t* CdSuThread::getAttributes() const$/;"	f	class:CdSuThread
getChoiceSock	test/timer/timerFuncTest.cpp	/^int getChoiceSock (int sockfd)$/;"	f
getChoiceSock	test/timer/timerListTest.cpp	/^int getChoiceSock (int sockfd)$/;"	f
getCorrectSubOpcodeRsp	src/udpnh/cdsunhudp.cpp	/^CdSuNhUdpSubOpcode CdSuNhUdp::getCorrectSubOpcodeRsp (CdSuNhUdpSubOpcode subOpcode)$/;"	f	class:CdSuNhUdp
getCounters	src/tcpnh/cdsunhtcpstatspkg.h	/^	Ulong* getCounters ()$/;"	f	class:CdSuNhTcpStatisticsPkg
getDataSelTmr	src/tcpnh/cdsunhtcpdb.h	/^	inline Uint32 getDataSelTmr () { return (dataSelTmr); }$/;"	f	class:CdSuNhTcpDb
getDataSelTmr	src/udpnh/cdsunhudpdb.h	/^	inline Uint32 getDataSelTmr () { return (dataSelTmr); }$/;"	f	class:CdSuNhUdpDb
getElement	include/cdsucharhash.h	/^typename CdSuCharHash<ValType>::HashElement* CdSuCharHash<ValType>::getElement (void)$/;"	f	class:CdSuCharHash
getElement	include/cdsuinthash.h	/^typename CdSuIntHash<ValType>::HashElement* CdSuIntHash<ValType>::getElement (void)$/;"	f	class:CdSuIntHash
getElement	include/cdsumbhash.h	/^typename CdSuMultiByteHash<ValType>::HashElement* CdSuMultiByteHash<ValType>::getElement (void)$/;"	f	class:CdSuMultiByteHash
getHeapMemoryUsed	include/cdsuunixmemmon.h	/^	unsigned long getHeapMemoryUsed ()$/;"	f	class:CdSuUnixMemoryMonitor
getId	src/misc/cdsuthread.cpp	/^const pthread_t CdSuThread::getId () const$/;"	f	class:CdSuThread
getLnqSize	src/tcpnh/cdsunhtcpdb.h	/^	inline Uint32 getLnqSize() { return (lnqSize); }$/;"	f	class:CdSuNhTcpDb
getLstnSelTmr	src/tcpnh/cdsunhtcpdb.h	/^	inline Uint32 getLstnSelTmr () { return (lstnSelTmr); }$/;"	f	class:CdSuNhTcpDb
getMaxBufferLen	src/tcpnh/cdsunhtcpdb.h	/^	inline Uint16 getMaxBufferLen () { return (maxBufferLen); }$/;"	f	class:CdSuNhTcpDb
getMaxBufferLen	src/udpnh/cdsunhudpdb.h	/^	inline Uint16 getMaxBufferLen () { return (maxBufferLen); }$/;"	f	class:CdSuNhUdpDb
getMaxNoOfConn	src/tcpnh/cdsunhtcpdb.h	/^	inline Uint32 getMaxNoOfConn () { return (maxNoOfConn); }$/;"	f	class:CdSuNhTcpDb
getMaxNoOfLnrs	src/tcpnh/cdsunhtcpdb.h	/^	inline Uint32 getMaxNoOfLnrs () { return (maxNoOfLstn); }$/;"	f	class:CdSuNhTcpDb
getMaxNoOfUdpPort	src/udpnh/cdsunhudpdb.h	/^	inline Uint32 getMaxNoOfUdpPort () { return (maxNoOfUdpPort); }$/;"	f	class:CdSuNhUdpDb
getMissedSanityCount	src/misc/cdsusanity.cpp	/^Uint8 SanityModule::getMissedSanityCount (void)$/;"	f	class:SanityModule
getNhActorId	src/tcpnh/cdsunhtcpdb.h	/^	inline CdSuActorId getNhActorId () { return (nhActorId); }$/;"	f	class:CdSuNhTcpDb
getNhActorId	src/udpnh/cdsunhudpdb.h	/^	inline CdSuActorId getNhActorId () { return (nhActorId); }$/;"	f	class:CdSuNhUdpDb
getNhInstCounter	src/tcpnh/cdsunhtcpinstmgr.h	/^	Uint32 getNhInstCounter ()$/;"	f	class:CdSuNhTcpInstMgr
getNhInstId	src/tcpnh/cdsunhtcpdb.h	/^	inline CdSuNhTcpInstId getNhInstId() { return (nhInstId); }$/;"	f	class:CdSuNhTcpDb
getNhInstId	src/udpnh/cdsunhudpdb.h	/^	inline CdSuNhUdpInstId getNhInstId() { return (nhInstId); }$/;"	f	class:CdSuNhUdpDb
getNhTcpDb	src/tcpnh/cdsunhtcpinstmgr.h	/^	CdSuNhTcpDb* getNhTcpDb (CdSuNhTcpInstId nhInstId) $/;"	f	class:CdSuNhTcpInstMgr
getNhTcpPtr	src/tcpnh/cdsunhtcpdb.h	/^	inline CdSuNhTcp* getNhTcpPtr () { return (nhTcpPtr); }$/;"	f	class:CdSuNhTcpDb
getNhUdpDb	src/udpnh/cdsunhudpinstmgr.h	/^	inline CdSuNhUdpDb* getNhUdpDb (CdSuNhUdpInstId nhInstId) $/;"	f	class:CdSuNhUdpInstMgr
getNhUdpPtr	src/udpnh/cdsunhudpdb.h	/^	inline CdSuNhUdp* getNhUdpPtr () { return (nhUdpPtr); }$/;"	f	class:CdSuNhUdpDb
getNoTcpHandleTmr	src/tcpnh/cdsunhtcpdb.h	/^	inline Uint32 getNoTcpHandleTmr () { return (noTcpHandleTmr); }$/;"	f	class:CdSuNhTcpDb
getNoUdpHandleTmr	src/udpnh/cdsunhudpdb.h	/^	inline Uint32 getNoUdpHandleTmr () { return (noUdpHandleTmr); }$/;"	f	class:CdSuNhUdpDb
getNumTests	test/timer/timerFuncTest.cpp	/^int getNumTests ()$/;"	f
getPriority	src/misc/cdsuthread.cpp	/^int CdSuThread::getPriority () const$/;"	f	class:CdSuThread
getSanityParams	src/misc/cdsusanity.cpp	/^void SanityModule::getSanityParams (SanityParams& ci)$/;"	f	class:SanityModule
getSelfIpAddr	src/msgdistr/cdsunhudpdb.h	/^	Uint32 getSelfIpAddr () { return (ipAddr); }$/;"	f	class:CdSuNwhlrDb
getSize	include/cdsuqueue.h	/^	unsigned int getSize () { return (size); };$/;"	f	class:CdSuQueue
getSize	include/cdsutsqueue.h	/^	unsigned int getSize () { return (size); };$/;"	f	class:CdSuTsQueue
getSmActorId	src/tcpnh/cdsunhtcpdb.h	/^	inline CdSuActorId getSmActorId () { return (smActorId); }$/;"	f	class:CdSuNhTcpDb
getSmActorId	src/udpnh/cdsunhudpdb.h	/^	inline CdSuActorId getSmActorId () { return (smActorId); }$/;"	f	class:CdSuNhUdpDb
getSmEventHlr	src/tcpnh/cdsunhtcpdb.h	/^	inline CdSuNhTcpEventHlr getSmEventHlr () { return (smEventHlr);}$/;"	f	class:CdSuNhTcpDb
getSmEventHlr	src/udpnh/cdsunhudpdb.h	/^	inline CdSuNhUdpEventHlr getSmEventHlr () { return (smEventHlr);}$/;"	f	class:CdSuNhUdpDb
getStartTrigger	test/tcpnh/basictest/testserver.cpp	/^Uint32 getStartTrigger ()$/;"	f
getStartTrigger	test/tcpnh/featuretest/testserver.cpp	/^Uint32 getStartTrigger ()$/;"	f
getStartTrigger	test/udpnh/basic-test/testserver.cpp	/^Uint32 getStartTrigger ()$/;"	f
getStatsCtrs	src/tcpnh/cdsunhtcp.cpp	/^Ulong* CdSuNhTcp::getStatsCtrs ()$/;"	f	class:CdSuNhTcp
getTaskId	include/cdsutask.h	/^	CdSuTaskId getTaskId (){ return (taskId);};$/;"	f	class:CdSuTask
getTxptServUdp	src/msgdistr/cdsunhudpdb.h	/^	CdSuUdpTxptServices* getTxptServUdp () { return udpTxptServ; } $/;"	f	class:CdSuNwhlrDb
getUdpApplMid	src/msgdistr/cdsunhudpdb.h	/^	CdModuleId getUdpApplMid () { return (applMid); }$/;"	f	class:CdSuNwhlrDb
getUdpListenPort	src/msgdistr/cdsunhudpdb.h	/^	Uint32 getUdpListenPort () { return (portNo); }$/;"	f	class:CdSuNwhlrDb
getUdpNtwkMesgQ	src/msgdistr/cdsunhudpdb.h	/^	CdSuTsQueue<CdMessage*>* getUdpNtwkMesgQ () { return (nwQ); }$/;"	f	class:CdSuNwhlrDb
getUdpNwHlrMid	src/msgdistr/cdsunhudpdb.h	/^	CdModuleId getUdpNwHlrMid () { return (nwHlrMid); }$/;"	f	class:CdSuNwhlrDb
getUserInput	test/timer/test-listclient.cpp	/^void getUserInput(void )$/;"	f
getUserInput	test/timer/timerListTest.cpp	/^void getUserInput(void )$/;"	f
handle	src/tcpnh/cdsunhtcp.h	/^	CdSuNhTcpHandle handle;			\/\/ Handle.$/;"	m	struct:CdSuNhTcpLstnInfo
handle	src/tcpnh/cdsunhtcp.h	/^	CdSuNhTcpHandle handle;		\/\/ Handle.$/;"	m	struct:CdSuNhTcpConnInfo
handle	src/udpnh/cdsunhudp.h	/^		CdSuNhUdpHandle handle;		\/\/ Socket Fd.$/;"	m	struct:CdSuNhUdp::CdSuNhUdpPortInfo
handle2ConnInfoTable	src/tcpnh/cdsunhtcp.h	/^	CdSuIntHash <CdSuNhTcpConnInfo*>* handle2ConnInfoTable;$/;"	m	class:CdSuNhTcp
handle2ListenInfoTable	src/tcpnh/cdsunhtcp.h	/^	CdSuIntHash <CdSuNhTcpLstnInfo*>* handle2ListenInfoTable;$/;"	m	class:CdSuNhTcp
handle2UdpPortInfoTable	src/udpnh/cdsunhudp.h	/^	CdSuIntHash <CdSuNhUdpPortInfo*>* handle2UdpPortInfoTable;$/;"	m	class:CdSuNhUdp
handleConInd	src/tcpnh/cdsunhtcp.cpp	/^bool CdSuNhTcp::handleConInd (CdSuNhTcpConnId connId,$/;"	f	class:CdSuNhTcp
handleMessage	src/misc/cdsusanity.cpp	/^void SanityModule::handleMessage (CdMessage* msg)$/;"	f	class:SanityModule
handleMsg	src/tcpnh/cdsunhtcp.cpp	/^void CdSuNhTcp::handleMsg (CdMessage* msg)$/;"	f	class:CdSuNhTcp
handleMsg	src/udpnh/cdsunhudp.cpp	/^void CdSuNhUdp::handleMsg (CdMessage* msg)$/;"	f	class:CdSuNhUdp
handleMsg	test/taskscheduler-test.cpp	/^void TesterTask1::handleMsg (CdTaskMessage* msg)$/;"	f	class:TesterTask1
handleMsg	test/taskscheduler-test.cpp	/^void TesterTask2::handleMsg (CdTaskMessage* msg)$/;"	f	class:TesterTask2
handleUserInput	test/timer/timerListTest.cpp	/^void handleUserInput(int input )$/;"	f
hash	include/cdsucharhash.h	/^unsigned int CdSuCharHash<ValType>::hash (char* key, int keylen )$/;"	f	class:CdSuCharHash
hash	include/cdsuinthash.h	/^unsigned int CdSuIntHash<ValType>::hash (unsigned int key)$/;"	f	class:CdSuIntHash
hash	include/cdsumbhash.h	/^unsigned int CdSuMultiByteHash<ValType>::hash (void* key)$/;"	f	class:CdSuMultiByteHash
hashFunction1	include/cdsucharhash.h	/^unsigned int CdSuCharHash<ValType>::hashFunction1 (char* key, int keylen)$/;"	f	class:CdSuCharHash
hashFunction1	include/cdsumbhash.h	/^unsigned int CdSuMultiByteHash<ValType>::hashFunction1 (void* p)$/;"	f	class:CdSuMultiByteHash
hashFunction1	src/timer/cdsutimingwheel.cpp	/^Uint32 CdSuTimingWheel::hashFunction1 (Uint32 keyValue)$/;"	f	class:CdSuTimingWheel
hashFunction2	include/cdsumbhash.h	/^unsigned int CdSuMultiByteHash<ValType>::hashFunction2 (void* p)$/;"	f	class:CdSuMultiByteHash
hashFunction3	include/cdsumbhash.h	/^unsigned int CdSuMultiByteHash<ValType>::hashFunction3 (void* p)$/;"	f	class:CdSuMultiByteHash
hashFunctionDefault	include/cdsucharhash.h	/^unsigned int CdSuCharHash<ValType>::hashFunctionDefault (char* s, int keylen)$/;"	f	class:CdSuCharHash
hashFunctionDefault	include/cdsumbhash.h	/^unsigned int CdSuMultiByteHash<ValType>::hashFunctionDefault (void* p)$/;"	f	class:CdSuMultiByteHash
hashFunctionType	include/cdsucharhash.h	/^	HashFunctionType hashFunctionType;$/;"	m	class:CdSuCharHash
hashFunctionType	include/cdsumbhash.h	/^	HashFunctionType hashFunctionType;$/;"	m	class:CdSuMultiByteHash
hashTable	src/timer/cdsutimingwheel.h	/^	CdSuTnode* hashTable[CDSU_TIMEWHEEL_HASH_TABLE_SIZE];$/;"	m	class:CdSuTimingWheel
hashTableSize	src/timer/cdsutimingwheel.h	/^	Uint32 hashTableSize;$/;"	m	class:CdSuTimingWheel
hdwintf	docs/reqs/srs/nhudp/index.html	/^<h3><a name="hdwintf">2.1.5 Hardware Interfaces<\/a><\/h3>$/;"	a
headNode	include/cdsulist.h	/^	ListElement* headNode; $/;"	m	class:CdSuList
headNode	include/cdsuqueue.h	/^	Node* headNode;				$/;"	m	class:CdSuQueue
headNode	include/cdsutsqueue.h	/^	Node  *headNode;				$/;"	m	class:CdSuTsQueue
hl_timer	test/timer/timerBasic.cpp	/^HL_Timer *hl_timer; $/;"	v
hl_timer	test/timer/timerCascade.cpp	/^CdSuCounter *hl_timer;$/;"	v
hrd-con	docs/reqs/srs/nhtcp/index.html	/^<h3><a name="hrd-con">3.5.2 Hardware Limitations<\/a><\/h3>$/;"	a
hton	include/cdsuutiltypes.h	/^			void hton ()$/;"	f	struct:CdServiceHandlerId::__anon20::__anon22
hton	include/cdsuutiltypes.h	/^	void hton ()$/;"	f	struct:CdMessageHdr
hton	include/cdsuutiltypes.h	/^	void hton ()$/;"	f	struct:CdModuleId
hton	include/cdsuutiltypes.h	/^	void hton ()$/;"	f	struct:CdServiceHandlerId
hton	test/msgdistr-test.h	/^	void hton ()$/;"	f	struct:MyTestMsg
hwUnitId	include/cdsuutiltypes-c.h	/^        CdHardwareUnitId          hwUnitId;$/;"	m	struct:CdModuleId
hwUnitId	include/cdsuutiltypes.h	/^        CdHardwareUnitId          hwUnitId;$/;"	m	struct:CdModuleId
iempty	include/cdsutsqueue.h	/^inline bool CdSuTsQueue<KeyType>::iempty ()$/;"	f	class:CdSuTsQueue
ifull	include/cdsutsqueue.h	/^inline bool CdSuTsQueue<KeyType>::ifull ()$/;"	f	class:CdSuTsQueue
incrStatsCtrs	src/tcpnh/cdsunhtcp.cpp	/^void CdSuNhTcp::incrStatsCtrs (CdSuNhTcpCtrType ct)$/;"	f	class:CdSuNhTcp
incrementCtr	src/tcpnh/cdsunhtcpstatspkg.h	/^	void incrementCtr (CdSuNhTcpCtrType ctrType)$/;"	f	class:CdSuNhTcpStatisticsPkg
incrementCtr	src/udpnh/cdsunhudpstatspkg.h	/^	void incrementCtr (CdSuNhUdpCtrType ctrType)$/;"	f	class:CdSuNhUdpStatisticsPkg
info	include/cdsusanitymsgs.h	/^	Uint32 info [CDSU_TMR_MAX_USERINFO_NUM];	\/\/ <= userInfo$/;"	m	struct:SanityTimeoutMsg
init	src/tcpnh/cdsunhtcpapiparam.cpp	/^void CdSuNhTcpConnKey::init (CdSuNhTcpConnId cid, CdSuNhTcpInstId nhid)$/;"	f	class:CdSuNhTcpConnKey
init	src/tcpnh/cdsunhtcpapiparam.cpp	/^void CdSuNhTcpLstnKey::init (CdSuNhTcpLstnId cid, CdSuNhTcpInstId nhid)$/;"	f	class:CdSuNhTcpLstnKey
init	src/tcpnh/cdsunhtcpapiparam.cpp	/^void CdSuNhTcpMiCfgReqParam::init (CdSuNhTcpInstId nhid, $/;"	f	class:CdSuNhTcpMiCfgReqParam
init	src/tcpnh/cdsunhtcpapiparam.cpp	/^void CdSuNhTcpMiCfgRspEvent::init (CdSuNhTcpInstId nhid, $/;"	f	class:CdSuNhTcpMiCfgRspEvent
init	src/tcpnh/cdsunhtcpapiparam.cpp	/^void CdSuNhTcpMiCtrlReqParam::init (CdSuNhTcpInstId nhid, $/;"	f	class:CdSuNhTcpMiCtrlReqParam
init	src/tcpnh/cdsunhtcpapiparam.cpp	/^void CdSuNhTcpMiCtrlRspEvent::init (CdSuNhTcpInstId nhid, $/;"	f	class:CdSuNhTcpMiCtrlRspEvent
init	src/tcpnh/cdsunhtcpapiparam.cpp	/^void CdSuNhTcpMiDelNhParam::init (CdSuNhTcpInstId nhid)$/;"	f	class:CdSuNhTcpMiDelNhParam
init	src/tcpnh/cdsunhtcpapiparam.cpp	/^void CdSuNhTcpMiDelNhRspEvent::init (CdSuNhTcpInstId nhid, $/;"	f	class:CdSuNhTcpMiDelNhRspEvent
init	src/tcpnh/cdsunhtcpapiparam.cpp	/^void CdSuNhTcpMiEvent::init (CdSuNhTcpInstId nhid, $/;"	f	class:CdSuNhTcpMiEvent
init	src/tcpnh/cdsunhtcpapiparam.cpp	/^void CdSuNhTcpMiInitParam::init ( CdSuActorId nhAid,$/;"	f	class:CdSuNhTcpMiInitParam
init	src/tcpnh/cdsunhtcpapiparam.cpp	/^void CdSuNhTcpMiInitRspEvent::init (CdSuNhTcpInstId nhid, $/;"	f	class:CdSuNhTcpMiInitRspEvent
init	src/tcpnh/cdsunhtcpapiparam.cpp	/^void CdSuNhTcpMiStatusReqParam::init (CdSuNhTcpInstId nhid)$/;"	f	class:CdSuNhTcpMiStatusReqParam
init	src/tcpnh/cdsunhtcpapiparam.cpp	/^void CdSuNhTcpMiStatusRspEvent::init (CdSuNhTcpInstId nhid, $/;"	f	class:CdSuNhTcpMiStatusRspEvent
init	src/tcpnh/cdsunhtcpapiparam.cpp	/^void CdSuNhTcpMiStsReqParam::init (CdSuNhTcpInstId nhid)$/;"	f	class:CdSuNhTcpMiStsReqParam
init	src/tcpnh/cdsunhtcpapiparam.cpp	/^void CdSuNhTcpMiStsRspEvent::init (CdSuNhTcpInstId nhid, $/;"	f	class:CdSuNhTcpMiStsRspEvent
init	src/tcpnh/cdsunhtcpapiparam.cpp	/^void CdSuNhTcpMiTerminateParam::init (CdSuNhTcpInstId nhid)$/;"	f	class:CdSuNhTcpMiTerminateParam
init	src/tcpnh/cdsunhtcpapiparam.cpp	/^void CdSuNhTcpMiUStaIndEvent::init (CdSuNhTcpInstId nhid, $/;"	f	class:CdSuNhTcpMiUStaIndEvent
init	src/tcpnh/cdsunhtcpapiparam.cpp	/^void CdSuNhTcpUiAddLstnReqParam::init (CdSuNhTcpInstId nhid, $/;"	f	class:CdSuNhTcpUiAddLstnReqParam
init	src/tcpnh/cdsunhtcpapiparam.cpp	/^void CdSuNhTcpUiAddLstnRspEvent::init (CdSuNhTcpLstnKey lkey, $/;"	f	class:CdSuNhTcpUiAddLstnRspEvent
init	src/tcpnh/cdsunhtcpapiparam.cpp	/^void CdSuNhTcpUiCloseConIndEvent::init (CdSuNhTcpConnKey ckey, $/;"	f	class:CdSuNhTcpUiCloseConIndEvent
init	src/tcpnh/cdsunhtcpapiparam.cpp	/^void CdSuNhTcpUiCloseConReqParam::init (CdSuNhTcpConnKey ckey, $/;"	f	class:CdSuNhTcpUiCloseConReqParam
init	src/tcpnh/cdsunhtcpapiparam.cpp	/^void CdSuNhTcpUiCloseConRspEvent::init (CdSuNhTcpConnKey ckey, $/;"	f	class:CdSuNhTcpUiCloseConRspEvent
init	src/tcpnh/cdsunhtcpapiparam.cpp	/^void CdSuNhTcpUiConIndEvent::init (CdSuNhTcpConnKey ckey, $/;"	f	class:CdSuNhTcpUiConIndEvent
init	src/tcpnh/cdsunhtcpapiparam.cpp	/^void CdSuNhTcpUiConReqParam::init (CdSuNhTcpInstId nhid, $/;"	f	class:CdSuNhTcpUiConReqParam
init	src/tcpnh/cdsunhtcpapiparam.cpp	/^void CdSuNhTcpUiConRspEvent::init (CdSuNhTcpConnKey ckey, $/;"	f	class:CdSuNhTcpUiConRspEvent
init	src/tcpnh/cdsunhtcpapiparam.cpp	/^void CdSuNhTcpUiConnEvent::init (CdSuNhTcpConnKey ckey, $/;"	f	class:CdSuNhTcpUiConnEvent
init	src/tcpnh/cdsunhtcpapiparam.cpp	/^void CdSuNhTcpUiDataIndEvent::init (CdSuNhTcpConnKey ckey, $/;"	f	class:CdSuNhTcpUiDataIndEvent
init	src/tcpnh/cdsunhtcpapiparam.cpp	/^void CdSuNhTcpUiDataReqParam::init (CdSuNhTcpConnKey ckey, $/;"	f	class:CdSuNhTcpUiDataReqParam
init	src/tcpnh/cdsunhtcpapiparam.cpp	/^void CdSuNhTcpUiDataRspEvent::init (CdSuNhTcpConnKey ckey, $/;"	f	class:CdSuNhTcpUiDataRspEvent
init	src/tcpnh/cdsunhtcpapiparam.cpp	/^void CdSuNhTcpUiLstnEvent::init (CdSuNhTcpLstnKey lkey, $/;"	f	class:CdSuNhTcpUiLstnEvent
init	src/tcpnh/cdsunhtcpapiparam.cpp	/^void CdSuNhTcpUiRemLstnReqParam::init (CdSuNhTcpLstnKey lkey, $/;"	f	class:CdSuNhTcpUiRemLstnReqParam
init	src/tcpnh/cdsunhtcpapiparam.cpp	/^void CdSuNhTcpUiRemLstnRspEvent::init (CdSuNhTcpLstnKey lkey, $/;"	f	class:CdSuNhTcpUiRemLstnRspEvent
init	src/udpnh/cdsunhudpapiparam.cpp	/^void CdSuNhUdpMiCtrlRspEvent::init (CdSuNhUdpInstId nhid, $/;"	f	class:CdSuNhUdpMiCtrlRspEvent
init	src/udpnh/cdsunhudpapiparam.cpp	/^void CdSuNhUdpMiDelNhRspEvent::init (CdSuNhUdpInstId nhInstId,$/;"	f	class:CdSuNhUdpMiDelNhRspEvent
init	src/udpnh/cdsunhudpapiparam.cpp	/^void CdSuNhUdpMiEvent::init  (CdSuNhUdpInstId nhInstId, $/;"	f	class:CdSuNhUdpMiEvent
init	src/udpnh/cdsunhudpapiparam.cpp	/^void CdSuNhUdpMiInitParam:: init (CdSuActorId nhActorId,$/;"	f	class:CdSuNhUdpMiInitParam
init	src/udpnh/cdsunhudpapiparam.cpp	/^void CdSuNhUdpMiInitRspEvent::init (CdSuNhUdpInstId nhInstId,$/;"	f	class:CdSuNhUdpMiInitRspEvent
init	src/udpnh/cdsunhudpapiparam.cpp	/^void CdSuNhUdpMiStatusRspEvent::init (CdSuNhUdpInstId nhid, $/;"	f	class:CdSuNhUdpMiStatusRspEvent
init	src/udpnh/cdsunhudpapiparam.cpp	/^void CdSuNhUdpMiStsRspEvent::init (CdSuNhUdpInstId nhid, $/;"	f	class:CdSuNhUdpMiStsRspEvent
init	src/udpnh/cdsunhudpapiparam.cpp	/^void CdSuNhUdpUiAddUdpPortReqParam::init (CdSuNhUdpInstId nhUdpInstId,$/;"	f	class:CdSuNhUdpUiAddUdpPortReqParam
init	src/udpnh/cdsunhudpapiparam.cpp	/^void CdSuNhUdpUiAddUdpPortRspEvent::init (CdSuNhUdpPortKey nhUdpPortKey, $/;"	f	class:CdSuNhUdpUiAddUdpPortRspEvent
init	src/udpnh/cdsunhudpapiparam.cpp	/^void CdSuNhUdpUiDataIndEvent::init (CdSuNhUdpPortKey nhUdpPortKey, $/;"	f	class:CdSuNhUdpUiDataIndEvent
init	src/udpnh/cdsunhudpapiparam.cpp	/^void CdSuNhUdpUiDataReqParam::init (CdSuNhUdpPortKey udpPortKey,$/;"	f	class:CdSuNhUdpUiDataReqParam
init	src/udpnh/cdsunhudpapiparam.cpp	/^void CdSuNhUdpUiDataRspEvent::init (CdSuNhUdpPortKey nhUdpPortKey, $/;"	f	class:CdSuNhUdpUiDataRspEvent
init	src/udpnh/cdsunhudpapiparam.cpp	/^void CdSuNhUdpUiEvent::init (CdSuNhUdpInstId nhUdpInstId, $/;"	f	class:CdSuNhUdpUiEvent
init	src/udpnh/cdsunhudpapiparam.cpp	/^void CdSuNhUdpUiEvent::init (CdSuNhUdpPortKey nhUdpPortKey, $/;"	f	class:CdSuNhUdpUiEvent
init	src/udpnh/cdsunhudpapiparam.cpp	/^void CdSuNhUdpUiRemUdpPortReqParam::init (CdSuNhUdpPortKey udpPortKey,$/;"	f	class:CdSuNhUdpUiRemUdpPortReqParam
init	src/udpnh/cdsunhudpapiparam.cpp	/^void CdSuNhUdpUiRemUdpPortRspEvent::init (CdSuNhUdpPortKey nhUdpPortKey, $/;"	f	class:CdSuNhUdpUiRemUdpPortRspEvent
init	src/udpnh/cdsunhudpapiparam.cpp	/^void CdSuNhUdpUiSendRspEvent::init (CdSuNhUdpInstId nhUdpInstId, $/;"	f	class:CdSuNhUdpUiSendRspEvent
init	test/timer/cdsu_counter.h	/^void CdSuCounter::init ()$/;"	f	class:CdSuCounter
init	test/timer/hl_timer.h	/^void HL_Timer::init ()$/;"	f	class:HL_Timer
init	test/timer/timerBasic.cpp	/^void HL_Timer::init ()$/;"	f	class:HL_Timer
initAll	test/tcpnh/mp3Streamer/mp3StreamServer.cpp	/^void Mp3StreamServer::initAll ()$/;"	f	class:Mp3StreamServer
initAllGlobals	test/tcpnh/basictest/testfunctions.cpp	/^void initAllGlobals ()$/;"	f
initAllGlobals	test/tcpnh/featuretest/testfunctions.cpp	/^void initAllGlobals ()$/;"	f
initAllGlobals	test/udpnh/basic-test/testfunctions.cpp	/^void initAllGlobals ()$/;"	f
initAllGlobals	test/udpnh/load-testing/testfunctions.cpp	/^void initAllGlobals ()$/;"	f
initAllGlobals	test/udpnh/testing-mul-nh-support/tester.cpp	/^void initAllGlobals ()$/;"	f
initAllGlobals	test/udpnh/testing-mul-nh-usr-support/tester.cpp	/^void initAllGlobals ()$/;"	f
initAllGlobals	test/udpnh/testing-mul-user-support/tester.cpp	/^void initAllGlobals ()$/;"	f
initMsg	include/cdsusanitymsgs.h	/^	void initMsg (CdSuTimeout& timeOutInfo)$/;"	f	struct:SanityTimeoutMsg
initMsg	include/cdsusanitymsgs.h	/^	void initMsg (const CdModuleId& dst, const CdModuleId& src, Uint8 tag)$/;"	f	struct:SanityFailureMsg
initMsg	include/cdsusanitymsgs.h	/^	void initMsg (const CdModuleId& dstModId, const CdModuleId& srcModId)$/;"	f	struct:SanityMsg
initMsg	include/cdsutask.h	/^	void initMsg (CdModuleId dest,$/;"	f	struct:CdTaskMessage
initMsg	include/cdsuutiltypes.h	/^	void initMsg (CdModuleId dst, CdModuleId src, Uint16 opcode,$/;"	f	struct:CdMessage
initMsg	src/tcpnh/cdsunhtcpmsg.cpp	/^void CdSuNhTcpMiCfgReqMsg::initMsg (const CdSuActorId& dstAId,$/;"	f	class:CdSuNhTcpMiCfgReqMsg
initMsg	src/tcpnh/cdsunhtcpmsg.cpp	/^void CdSuNhTcpMiCfgRspMsg::initMsg (const CdSuActorId& dstAId,$/;"	f	class:CdSuNhTcpMiCfgRspMsg
initMsg	src/tcpnh/cdsunhtcpmsg.cpp	/^void CdSuNhTcpMiCtrlReqMsg::initMsg (const CdSuActorId& dstAId,$/;"	f	class:CdSuNhTcpMiCtrlReqMsg
initMsg	src/tcpnh/cdsunhtcpmsg.cpp	/^void CdSuNhTcpMiCtrlRspMsg::initMsg (const CdSuActorId& dstAId,$/;"	f	class:CdSuNhTcpMiCtrlRspMsg
initMsg	src/tcpnh/cdsunhtcpmsg.cpp	/^void CdSuNhTcpMiDelNhReqMsg::initMsg (const CdSuActorId& dstAId,$/;"	f	class:CdSuNhTcpMiDelNhReqMsg
initMsg	src/tcpnh/cdsunhtcpmsg.cpp	/^void CdSuNhTcpMiDelNhRspMsg::initMsg (const CdSuActorId& dstAId,$/;"	f	class:CdSuNhTcpMiDelNhRspMsg
initMsg	src/tcpnh/cdsunhtcpmsg.cpp	/^void CdSuNhTcpMiInitReqMsg::initMsg (const CdSuActorId& dstAId,$/;"	f	class:CdSuNhTcpMiInitReqMsg
initMsg	src/tcpnh/cdsunhtcpmsg.cpp	/^void CdSuNhTcpMiInitRspMsg::initMsg (const CdSuActorId& dstAId,$/;"	f	class:CdSuNhTcpMiInitRspMsg
initMsg	src/tcpnh/cdsunhtcpmsg.cpp	/^void CdSuNhTcpMiStatusReqMsg::initMsg (const CdSuActorId& dstAId,$/;"	f	class:CdSuNhTcpMiStatusReqMsg
initMsg	src/tcpnh/cdsunhtcpmsg.cpp	/^void CdSuNhTcpMiStatusRspMsg::initMsg (const CdSuActorId& dstAId, $/;"	f	class:CdSuNhTcpMiStatusRspMsg
initMsg	src/tcpnh/cdsunhtcpmsg.cpp	/^void CdSuNhTcpMiStsReqMsg::initMsg (const CdSuActorId& dstAId,$/;"	f	class:CdSuNhTcpMiStsReqMsg
initMsg	src/tcpnh/cdsunhtcpmsg.cpp	/^void CdSuNhTcpMiStsRspMsg::initMsg (const CdSuActorId& dstAId, $/;"	f	class:CdSuNhTcpMiStsRspMsg
initMsg	src/tcpnh/cdsunhtcpmsg.cpp	/^void CdSuNhTcpMiUStaIndMsg::initMsg (const CdSuActorId& dstAId, $/;"	f	class:CdSuNhTcpMiUStaIndMsg
initMsg	src/tcpnh/cdsunhtcpmsg.cpp	/^void CdSuNhTcpUiAddLstnReqMsg::initMsg (const CdSuActorId& dstAId, $/;"	f	class:CdSuNhTcpUiAddLstnReqMsg
initMsg	src/tcpnh/cdsunhtcpmsg.cpp	/^void CdSuNhTcpUiAddLstnRspMsg::initMsg (const CdSuActorId& dstAId,$/;"	f	class:CdSuNhTcpUiAddLstnRspMsg
initMsg	src/tcpnh/cdsunhtcpmsg.cpp	/^void CdSuNhTcpUiCloseConIndMsg::initMsg (const CdSuActorId& dstAId,$/;"	f	class:CdSuNhTcpUiCloseConIndMsg
initMsg	src/tcpnh/cdsunhtcpmsg.cpp	/^void CdSuNhTcpUiCloseConReqMsg::initMsg (const CdSuActorId& dstAId,$/;"	f	class:CdSuNhTcpUiCloseConReqMsg
initMsg	src/tcpnh/cdsunhtcpmsg.cpp	/^void CdSuNhTcpUiCloseConRspMsg::initMsg (const CdSuActorId& dstAId,$/;"	f	class:CdSuNhTcpUiCloseConRspMsg
initMsg	src/tcpnh/cdsunhtcpmsg.cpp	/^void CdSuNhTcpUiConIndMsg::initMsg (const CdSuActorId& dstAId,$/;"	f	class:CdSuNhTcpUiConIndMsg
initMsg	src/tcpnh/cdsunhtcpmsg.cpp	/^void CdSuNhTcpUiConReqMsg::initMsg (const CdSuActorId& dstAId,$/;"	f	class:CdSuNhTcpUiConReqMsg
initMsg	src/tcpnh/cdsunhtcpmsg.cpp	/^void CdSuNhTcpUiConRspMsg::initMsg (const CdSuActorId& dstAId,$/;"	f	class:CdSuNhTcpUiConRspMsg
initMsg	src/tcpnh/cdsunhtcpmsg.cpp	/^void CdSuNhTcpUiDataIndMsg::initMsg (const CdSuActorId& dstAId,$/;"	f	class:CdSuNhTcpUiDataIndMsg
initMsg	src/tcpnh/cdsunhtcpmsg.cpp	/^void CdSuNhTcpUiDataReqMsg::initMsg (const CdSuActorId& dstAId,$/;"	f	class:CdSuNhTcpUiDataReqMsg
initMsg	src/tcpnh/cdsunhtcpmsg.cpp	/^void CdSuNhTcpUiDataRspMsg::initMsg (const CdSuActorId& dstAId,$/;"	f	class:CdSuNhTcpUiDataRspMsg
initMsg	src/tcpnh/cdsunhtcpmsg.cpp	/^void CdSuNhTcpUiRemLstnReqMsg::initMsg (const CdSuActorId& dstAId, $/;"	f	class:CdSuNhTcpUiRemLstnReqMsg
initMsg	src/tcpnh/cdsunhtcpmsg.cpp	/^void CdSuNhTcpUiRemLstnRspMsg::initMsg (const CdSuActorId& dstAId,$/;"	f	class:CdSuNhTcpUiRemLstnRspMsg
initMsg	src/timer/cdsutimer.cpp	/^void CdSuTimerMsg::initMsg (const CdModuleId src, const CdModuleId dst,$/;"	f	class:CdSuTimerMsg
initMsg	src/udpnh/cdsunhudpmsg.cpp	/^void CdSuNhUdpMiCfgReqMsg::initMsg (const CdSuActorId& dstAId,$/;"	f	class:CdSuNhUdpMiCfgReqMsg
initMsg	src/udpnh/cdsunhudpmsg.cpp	/^void CdSuNhUdpMiCfgRspMsg::initMsg (const CdSuActorId& dstAId,$/;"	f	class:CdSuNhUdpMiCfgRspMsg
initMsg	src/udpnh/cdsunhudpmsg.cpp	/^void CdSuNhUdpMiCtrlReqMsg::initMsg (const CdSuActorId& dstAId,$/;"	f	class:CdSuNhUdpMiCtrlReqMsg
initMsg	src/udpnh/cdsunhudpmsg.cpp	/^void CdSuNhUdpMiCtrlRspMsg::initMsg (const CdSuActorId& dstAId,$/;"	f	class:CdSuNhUdpMiCtrlRspMsg
initMsg	src/udpnh/cdsunhudpmsg.cpp	/^void CdSuNhUdpMiDelNhReqMsg::initMsg (const CdSuActorId& dstAId,$/;"	f	class:CdSuNhUdpMiDelNhReqMsg
initMsg	src/udpnh/cdsunhudpmsg.cpp	/^void CdSuNhUdpMiDelNhRspMsg::initMsg (const CdSuActorId& dstAId,$/;"	f	class:CdSuNhUdpMiDelNhRspMsg
initMsg	src/udpnh/cdsunhudpmsg.cpp	/^void CdSuNhUdpMiInitRspMsg::initMsg (const CdSuActorId& dstAId,$/;"	f	class:CdSuNhUdpMiInitRspMsg
initMsg	src/udpnh/cdsunhudpmsg.cpp	/^void CdSuNhUdpMiStatusReqMsg::initMsg (const CdSuActorId& dstAId,$/;"	f	class:CdSuNhUdpMiStatusReqMsg
initMsg	src/udpnh/cdsunhudpmsg.cpp	/^void CdSuNhUdpMiStatusRspMsg::initMsg (const CdSuActorId& dstAId, $/;"	f	class:CdSuNhUdpMiStatusRspMsg
initMsg	src/udpnh/cdsunhudpmsg.cpp	/^void CdSuNhUdpMiStsReqMsg::initMsg (const CdSuActorId& dstAId,$/;"	f	class:CdSuNhUdpMiStsReqMsg
initMsg	src/udpnh/cdsunhudpmsg.cpp	/^void CdSuNhUdpMiStsRspMsg::initMsg (const CdSuActorId& dstAId, $/;"	f	class:CdSuNhUdpMiStsRspMsg
initMsg	src/udpnh/cdsunhudpmsg.cpp	/^void CdSuNhUdpUiAddUdpPortReqMsg::initMsg (const CdSuActorId& dstAId,$/;"	f	class:CdSuNhUdpUiAddUdpPortReqMsg
initMsg	src/udpnh/cdsunhudpmsg.cpp	/^void CdSuNhUdpUiAddUdpPortRspMsg::initMsg (const CdSuActorId& dstAId,$/;"	f	class:CdSuNhUdpUiAddUdpPortRspMsg
initMsg	src/udpnh/cdsunhudpmsg.cpp	/^void CdSuNhUdpUiDataIndMsg::initMsg (const CdSuActorId& dstAId,$/;"	f	class:CdSuNhUdpUiDataIndMsg
initMsg	src/udpnh/cdsunhudpmsg.cpp	/^void CdSuNhUdpUiDataReqMsg::initMsg (const CdSuActorId& dstAId,$/;"	f	class:CdSuNhUdpUiDataReqMsg
initMsg	src/udpnh/cdsunhudpmsg.cpp	/^void CdSuNhUdpUiDataRspMsg::initMsg (const CdSuActorId& dstAId,$/;"	f	class:CdSuNhUdpUiDataRspMsg
initMsg	src/udpnh/cdsunhudpmsg.cpp	/^void CdSuNhUdpUiRemUdpPortReqMsg::initMsg (const CdSuActorId& dstAId,$/;"	f	class:CdSuNhUdpUiRemUdpPortReqMsg
initMsg	src/udpnh/cdsunhudpmsg.cpp	/^void CdSuNhUdpUiRemUdpPortRspMsg::initMsg (const CdSuActorId& dstAId,$/;"	f	class:CdSuNhUdpUiRemUdpPortRspMsg
initMsg	src/udpnh/cdsunhudpmsg.cpp	/^void CdSuNhUdpUiSendReqMsg::initMsg (const CdSuActorId& dstAId,$/;"	f	class:CdSuNhUdpUiSendReqMsg
initMsg	src/udpnh/cdsunhudpmsg.cpp	/^void CdSuNhUdpUiSendRspMsg::initMsg (const CdSuActorId& dstAId,$/;"	f	class:CdSuNhUdpUiSendRspMsg
initMsg	test/msgdistr-test.h	/^	void initMsg (CdModuleId dest, CdModuleId src, $/;"	f	struct:MyTestMsg
initMsg	test/msgdistr-test.h	/^	void initMsg (CdModuleId dest, CdModuleId src, char* buf, int len)$/;"	f	struct:CdSuIntraCardMsg
initNhInValid	test/tcpnh/featuretest/testfunctions.cpp	/^void initNhInValid ()$/;"	f
initNhValid	test/tcpnh/featuretest/testfunctions.cpp	/^void initNhValid ()$/;"	f
initParam	src/tcpnh/cdsunhtcpmsg.h	/^	CdSuNhTcpMiInitParam initParam;	$/;"	m	struct:CdSuNhTcpMiInitReqMsg
initParam	test/tcpnh/basictest/parameter.h	/^CdSuNhTcpMiInitParam initParam;$/;"	v
initParam	test/tcpnh/featuretest/parameter.h	/^CdSuNhTcpMiInitParam initParam;$/;"	v
initParam	test/udpnh/basic-test/parameter.h	/^CdSuNhUdpMiInitParam initParam;$/;"	v
initParam	test/udpnh/load-testing/parameter.h	/^CdSuNhUdpMiInitParam initParam;$/;"	v
initRspEvent	src/tcpnh/cdsunhtcpmsg.h	/^	CdSuNhTcpMiInitRspEvent initRspEvent;$/;"	m	struct:CdSuNhTcpMiInitRspMsg
initRspEvent	src/udpnh/cdsunhudpmsg.h	/^	CdSuNhUdpMiInitRspEvent initRspEvent;	\/\/ Init Response Event Param.$/;"	m	struct:CdSuNhUdpMiInitRspMsg
initSetup	test/udpnh/basic-test/testfunctions.cpp	/^void initSetup ()$/;"	f
initTimeCounts	include/cdsutimer.h	/^	Uint16 initTimeCounts;      \/\/ Timer time for which timer is started.$/;"	m	struct:CdSuTnode
initTimeUnits	include/cdsutimer.h	/^	CdSuTimeUnits initTimeUnits;\/\/ Time Unit resolution(10ms, 100ms etc) $/;"	m	struct:CdSuTnode
initUdpNh	test/udpnh/basic-test/testfunctions.cpp	/^void initUdpNh ()$/;"	f
initialConfig	test/udpnh/basic-test/testfunctions.cpp	/^void initialConfig ()$/;"	f
input	test/timer/timerBasic.cpp	/^struct Input input[MAX_TIMERS];$/;"	v	typeref:struct:Input
input	test/timer/timerCascade.cpp	/^struct Input input[MAX_TIMERS];$/;"	v	typeref:struct:Input
insert	include/cdsucharhash.h	/^bool CdSuCharHash<ValType>::insert (char* key, int keylen, const ValType& value)$/;"	f	class:CdSuCharHash
insert	include/cdsuinthash.h	/^bool CdSuIntHash<ValType>::insert (unsigned int key, const ValType& value)$/;"	f	class:CdSuIntHash
insert	include/cdsulist.h	/^typename CdSuList<ValType>::iterator CdSuList<ValType>::insert (iterator pos, $/;"	f	class:CdSuList
insert	include/cdsumbhash.h	/^bool CdSuMultiByteHash<ValType>::insert (void* key, const ValType& value)$/;"	f	class:CdSuMultiByteHash
insert	include/cdsutsqueue.h	/^bool CdSuTsQueue<KeyType>::insert (const KeyType& x)$/;"	f	class:CdSuTsQueue
instID	test/udpnh/testing-mul-nh-support/tester.cpp	/^CdSuNhUdpInstId instID [ 4 ];$/;"	v
instID	test/udpnh/testing-mul-nh-usr-support/tester.cpp	/^CdSuNhUdpInstId instID [ 4 ];$/;"	v
instID	test/udpnh/testing-mul-user-support/tester.cpp	/^CdSuNhUdpInstId instID;$/;"	v
instId2Index	test/udpnh/load-testing/parameter.h	/^int instId2Index [ 256 ];$/;"	v
intList	test/list-test.cpp	/^CdSuList<int> intList;$/;"	v
intro	docs/design/mdd/charhash/index.html	/^<a name="intro"><\/a>$/;"	a
intro	docs/design/mdd/inthash/index.html	/^<a name="intro"><\/a>$/;"	a
intro	docs/design/mdd/list/index.html	/^<a name="intro"><\/a>$/;"	a
intro	docs/design/mdd/msgdistr/msgdistrmdd.html	/^<a name="intro"><\/a>$/;"	a
intro	docs/design/mdd/multibytehash/index.html	/^<a name="intro"><\/a>$/;"	a
intro	docs/design/mdd/nhtcp/index.html	/^<A NAME="intro"><\/A>$/;"	a
intro	docs/design/mdd/nhudp/index.html	/^<A NAME="intro"><\/A>$/;"	a
intro	docs/design/mdd/queue/index.html	/^<a name="intro"><\/a>$/;"	a
intro	docs/design/mdd/taskscheduler/index.html	/^<a name="intro"><\/a>$/;"	a
intro	docs/design/mdd/tsqueue/index.html	/^<a name="intro"><\/a>$/;"	a
intro	docs/reqs/srs/nhtcp/index.html	/^<a name="intro"> <\/a>$/;"	a
intro	docs/reqs/srs/nhudp/index.html	/^<a name="intro"> <\/a>$/;"	a
intro-aad	docs/design/mdd/charhash/index.html	/^<a name="intro-aad"><\/a>$/;"	a
intro-aad	docs/design/mdd/inthash/index.html	/^<a name="intro-aad"><\/a>$/;"	a
intro-aad	docs/design/mdd/list/index.html	/^<a name="intro-aad"><\/a>$/;"	a
intro-aad	docs/design/mdd/msgdistr/msgdistrmdd.html	/^<a name="intro-aad"><\/a>$/;"	a
intro-aad	docs/design/mdd/multibytehash/index.html	/^<a name="intro-aad"><\/a>$/;"	a
intro-aad	docs/design/mdd/nhtcp/index.html	/^<a name=intro-aad><h2>1.3 Acronyms, Abbreviations and Definitions<\/h2><\/a>$/;"	a
intro-aad	docs/design/mdd/nhudp/index.html	/^<a name=intro-aad><h2>1.3 Acronyms, Abbreviations and Definitions<\/h2><\/a>$/;"	a
intro-aad	docs/design/mdd/queue/index.html	/^<a name="intro-aad"><\/a>$/;"	a
intro-aad	docs/design/mdd/taskscheduler/index.html	/^<a name="intro-aad"><\/a>$/;"	a
intro-aad	docs/design/mdd/tsqueue/index.html	/^<a name="intro-aad"><\/a>$/;"	a
intro-daa	docs/reqs/srs/nhtcp/index.html	/^<h3><a name="intro-daa">1.3  Definitions, Acronyms and Abbreviations<\/a> <\/h3>$/;"	a
intro-daa	docs/reqs/srs/nhudp/index.html	/^<h3><a name="intro-daa">1.3  Definitions, Acronyms and Abbreviations<\/a> <\/h3>$/;"	a
intro-ovw	docs/reqs/srs/nhtcp/index.html	/^<h3> <a name="intro-ovw">1.5 Overview <\/a> <\/h3>$/;"	a
intro-ovw	docs/reqs/srs/nhudp/index.html	/^<h3> <a name="intro-ovw">1.5 Overview <\/a> <\/h3>$/;"	a
intro-ps	docs/design/mdd/charhash/index.html	/^<a name="intro-ps"><\/a>$/;"	a
intro-ps	docs/design/mdd/inthash/index.html	/^<a name="intro-ps"><\/a>$/;"	a
intro-ps	docs/design/mdd/list/index.html	/^<a name="intro-ps"><\/a>$/;"	a
intro-ps	docs/design/mdd/msgdistr/msgdistrmdd.html	/^<a name="intro-ps"><\/a>$/;"	a
intro-ps	docs/design/mdd/multibytehash/index.html	/^<a name="intro-ps"><\/a>$/;"	a
intro-ps	docs/design/mdd/nhtcp/index.html	/^<a name=intro-ps><h2>1.1 Purpose and Scope<\/h2><\/a>$/;"	a
intro-ps	docs/design/mdd/nhudp/index.html	/^<a name=intro-ps><h2>1.1 Purpose and Scope<\/h2><\/a>$/;"	a
intro-ps	docs/design/mdd/queue/index.html	/^<a name="intro-ps"><\/a>$/;"	a
intro-ps	docs/design/mdd/taskscheduler/index.html	/^<a name="intro-ps"><\/a>$/;"	a
intro-ps	docs/design/mdd/tsqueue/index.html	/^<a name="intro-ps"><\/a>$/;"	a
intro-pur	docs/reqs/srs/nhtcp/index.html	/^<h3><a name="intro-pur">1.1  Purpose <\/a><\/h3>$/;"	a
intro-pur	docs/reqs/srs/nhudp/index.html	/^<h3><a name="intro-pur">1.1  Purpose <\/a><\/h3>$/;"	a
intro-ref	docs/design/mdd/charhash/index.html	/^<a name="intro-ref"><\/a>$/;"	a
intro-ref	docs/design/mdd/inthash/index.html	/^<a name="intro-ref"><\/a>$/;"	a
intro-ref	docs/design/mdd/list/index.html	/^<a name="intro-ref"><\/a>$/;"	a
intro-ref	docs/design/mdd/msgdistr/msgdistrmdd.html	/^<a name="intro-ref"><\/a>$/;"	a
intro-ref	docs/design/mdd/multibytehash/index.html	/^<a name="intro-ref"><\/a>$/;"	a
intro-ref	docs/design/mdd/nhtcp/index.html	/^<a name=intro-ref><h2>1.4 References<\/h2><\/a>$/;"	a
intro-ref	docs/design/mdd/nhudp/index.html	/^<a name=intro-ref><h2>1.4 References<\/h2><\/a>$/;"	a
intro-ref	docs/design/mdd/queue/index.html	/^<a name="intro-ref"><\/a>$/;"	a
intro-ref	docs/design/mdd/taskscheduler/index.html	/^<a name="intro-ref"><\/a>$/;"	a
intro-ref	docs/design/mdd/tsqueue/index.html	/^<a name="intro-ref"><\/a>$/;"	a
intro-ref	docs/reqs/srs/nhtcp/index.html	/^<h3><a name="intro-ref">1.4  References<\/a><\/h3>$/;"	a
intro-ref	docs/reqs/srs/nhudp/index.html	/^<h3><a name="intro-ref">1.4  References<\/a><\/h3>$/;"	a
intro-scp	docs/reqs/srs/nhtcp/index.html	/^<h3><a name="intro-scp">1.2  Scope <\/a><\/h3>$/;"	a
intro-scp	docs/reqs/srs/nhudp/index.html	/^<h3><a name="intro-scp">1.2  Scope <\/a><\/h3>$/;"	a
invCtrlUdpNh	test/udpnh/basic-test/testfunctions.cpp	/^void invCtrlUdpNh ()$/;"	f
invalidConfig	test/udpnh/basic-test/testfunctions.cpp	/^void invalidConfig ()$/;"	f
ipAddr	src/msgdistr/cdsunhudpdb.h	/^	Uint32 ipAddr;$/;"	m	class:CdSuNwhlrDb
ipAddress	src/msgdistr/cdsunhudpglobals.h	/^	Uint32 ipAddress;$/;"	m	struct:CdSuMdUdpNhTxBufMsg
ipaddr	include/cdsumdapi.h	/^	Uint32 ipaddr;$/;"	m	struct:CdSuMdInitParam
ipaddr	include/cdsumdapi.h	/^	Uint32 ipaddr;$/;"	m	struct:CdSuMdUdpPortInfo
ipaddr	src/misc/netPrintServer.cpp	/^	char* ipaddr;$/;"	m	class:NetPrintServer	file:
ipcpInfo	src/msgdistr/cdsumd.h	/^		CdSuMdIpcpInfo ipcpInfo;$/;"	m	struct:CdSuMsgDistributor::DestModInfo
ipcpMech	include/cdsumdapi.h	/^	CdSuMdIpcpMech ipcpMech;$/;"	m	struct:CdSuMdIpcpInfo
ipv4addr	src/tcpnh/cdsunhtcpapiparam.h	/^	CdSuIpv4Addr ipv4addr;			\/\/ IPv4 address of the Lstn.$/;"	m	struct:CdSuNhTcpUiAddLstnReqParam
isAckReq	src/udpnh/cdsunhudpapiparam.h	/^	bool isAckReq;			\/\/ Is Response Required.$/;"	m	struct:CdSuNhUdpUiDataReqParam
isCyclic	test/timer/timerBasic.cpp	/^bool isCyclic = false;$/;"	v
isCyclic	test/timer/timerCascade.cpp	/^bool isCyclic = false;$/;"	v
isCyclic	test/timer/timerListTest.cpp	/^bool isCyclic = false;$/;"	v
isDTAddrFixed	src/udpnh/cdsunhudp.h	/^		bool isDTAddrFixed;		\/\/ Flag : Is Destination Transport Address fixed?$/;"	m	struct:CdSuNhUdp::CdSuNhUdpPortInfo
isDeleted	src/tcpnh/cdsunhtcp.h	/^	inline bool isDeleted () { return delFlag; }$/;"	f	class:CdSuNhTcp
isDeleted	src/udpnh/cdsunhudp.h	/^	inline bool isDeleted () { return deleted;};$/;"	f	class:CdSuNhUdp
isEphemeral	src/udpnh/cdsunhudp.h	/^		bool isEphemeral;		\/\/ Flag : Is Local Port Is ephermal.$/;"	m	struct:CdSuNhUdp::CdSuNhUdpPortInfo
isLTAddrFixed	src/udpnh/cdsunhudp.h	/^		bool  isLTAddrFixed;		\/\/ Flag : Is Local Transport Address Fixed.$/;"	m	struct:CdSuNhUdp::CdSuNhUdpPortInfo
isLoadSharedMode	test/udpnh/load-testing/parameter.h	/^bool isLoadSharedMode = false;$/;"	v
isMiMsgIntf	test/udpnh/load-testing/parameter.h	/^bool isMiMsgIntf = false;$/;"	v
isRemote	test/udpnh/load-testing/parameter.h	/^bool isRemote = false;$/;"	v
isSelf	test/udpnh/load-testing/parameter.h	/^bool isSelf = false;$/;"	v
isServer	test/udpnh/testing-mul-nh-support/tester.cpp	/^bool isServer = false;$/;"	v
isServer	test/udpnh/testing-mul-nh-support/tester.cpp	/^bool isServer = true;$/;"	v
isServer	test/udpnh/testing-mul-nh-usr-support/tester.cpp	/^bool isServer = false;$/;"	v
isServer	test/udpnh/testing-mul-nh-usr-support/tester.cpp	/^bool isServer = true;$/;"	v
isServer	test/udpnh/testing-mul-user-support/tester.cpp	/^bool isServer = false;$/;"	v
isServer	test/udpnh/testing-mul-user-support/tester.cpp	/^bool isServer = true;$/;"	v
isTimer	test/timer/timerBasic.cpp	/^bool isTimer = false;$/;"	v
isTimer	test/timer/timerCascade.cpp	/^bool isTimer = false;$/;"	v
isUiMsgIntf	test/udpnh/load-testing/parameter.h	/^bool isUiMsgIntf = false;$/;"	v
isValidInstId	test/udpnh/load-testing/parameter.h	/^bool isValidInstId [ 256 ];$/;"	v
isValidPortKey	test/udpnh/load-testing/parameter.h	/^bool isValidPortKey [ MAXPORT ] ;$/;"	v
issue	docs/design/mdd/msgdistr/msgdistrmdd.html	/^<a name="issue"><\/a>$/;"	a
issues	docs/design/mdd/nhtcp/index.html	/^<a name="issues"><\/a>$/;"	a
issues	docs/design/mdd/nhudp/index.html	/^<a name="issues"><\/a>$/;"	a
issues	docs/design/mdd/queue/index.html	/^<a name="issues"><\/a>$/;"	a
issues	docs/design/mdd/taskscheduler/index.html	/^<a name="issues"><\/a>$/;"	a
issues	docs/design/mdd/tsqueue/index.html	/^<a name="issues"><\/a>$/;"	a
iterator	include/cdsucharhash.h	/^	class iterator$/;"	c	class:CdSuCharHash
iterator	include/cdsucharhash.h	/^CdSuCharHash<ValType>::iterator::iterator (HashBucket* bucket, HashElement*$/;"	f	class:CdSuCharHash::iterator
iterator	include/cdsuinthash.h	/^	class iterator$/;"	c	class:CdSuIntHash
iterator	include/cdsuinthash.h	/^CdSuIntHash<ValType>::iterator::iterator (HashBucket* bucket, HashElement*$/;"	f	class:CdSuIntHash::iterator
iterator	include/cdsulist.h	/^	class iterator$/;"	c	class:CdSuList
iterator	include/cdsulist.h	/^CdSuList<ValType>::iterator::iterator (ListElement* init) : current (init) $/;"	f	class:CdSuList::iterator
iterator	include/cdsumbhash.h	/^	class iterator$/;"	c	class:CdSuMultiByteHash
iterator	include/cdsumbhash.h	/^CdSuMultiByteHash<ValType>::iterator::iterator (HashBucket* bucket, HashElement*$/;"	f	class:CdSuMultiByteHash::iterator
iterator	include/cdsuqueue.h	/^	class iterator$/;"	c	class:CdSuQueue
iterator	include/cdsuqueue.h	/^CdSuQueue<KeyType>::iterator::iterator (Node* init) : current (init) $/;"	f	class:CdSuQueue::iterator
iterator	include/cdsutsqueue.h	/^	class iterator$/;"	c	class:CdSuTsQueue
iterator	include/cdsutsqueue.h	/^CdSuTsQueue<KeyType>::iterator::iterator (Node* init) : current (init) $/;"	f	class:CdSuTsQueue::iterator
join	src/misc/cdsuthread.cpp	/^int CdSuThread::join(void **status)$/;"	f	class:CdSuThread
key	include/cdsucharhash.h	/^		char* key;$/;"	m	struct:CdSuCharHash::HashElement
key	include/cdsuinthash.h	/^		unsigned int key;$/;"	m	struct:CdSuIntHash::HashElement
key	include/cdsumbhash.h	/^		void* key;$/;"	m	struct:CdSuMultiByteHash::HashElement
keyAlloc	include/cdsutimer.h	/^	CdSuKeyAllocator* keyAlloc;$/;"	m	class:CdSuTimerHandler
keyId	src/timer/cdsukeyallocator.h	/^	Uint32 keyId;$/;"	m	class:CdSuKeyAllocator
keyLen	include/cdsucharhash.h	/^		int keyLen;$/;"	m	struct:CdSuCharHash::HashElement
keyLen	include/cdsumbhash.h	/^	int keyLen;$/;"	m	class:CdSuMultiByteHash
keyMatch	include/cdsucharhash.h	/^bool CdSuCharHash<ValType>::keyMatch (HashElement* el, char* p, int keylen)$/;"	f	class:CdSuCharHash
keyMatch	include/cdsuinthash.h	/^bool CdSuIntHash<ValType>::keyMatch (HashElement* el, unsigned int key)$/;"	f	class:CdSuIntHash
keyMatch	include/cdsumbhash.h	/^bool CdSuMultiByteHash<ValType>::keyMatch (HashElement* el, void* key)$/;"	f	class:CdSuMultiByteHash
lLink	include/cdsulist.h	/^		ListElement* lLink; 	\/\/ left link$/;"	m	struct:CdSuList::ListElement
lPortOfBothFixed	test/udpnh/testing-mul-nh-support/tester.cpp	/^int lPortOfBothFixed = 6500;$/;"	v
lPortOfBothFixed	test/udpnh/testing-mul-nh-usr-support/tester.cpp	/^int lPortOfBothFixed = 6500;$/;"	v
lPortOfLocalFixed	test/udpnh/testing-mul-nh-support/tester.cpp	/^int lPortOfLocalFixed = 8000;$/;"	v
lPortOfLocalFixed	test/udpnh/testing-mul-nh-usr-support/tester.cpp	/^int lPortOfLocalFixed = 8000;$/;"	v
length	test/msgdistr-test.h	/^	int length;$/;"	m	struct:CdSuIntraCardMsg
link	include/cdsusanity.h	/^	Uint8 link;$/;"	m	struct:SanityParams
list	test/list-test.cpp	/^CdSuList<int> list;$/;"	v
listenEventHlr	src/tcpnh/cdsunhtcpapiparam.h	/^	CdSuNhTcpEventHlr listenEventHlr;	\/\/ Event Hlr for any event on the Lstn$/;"	m	struct:CdSuNhTcpUiAddLstnReqParam
listenEventHlr	src/tcpnh/cdsunhtcpapiparam.h	/^	CdSuNhTcpEventHlr listenEventHlr;	\/\/ Event Hlr for any event on the Lstn$/;"	m	struct:CdSuNhTcpUiRemLstnReqParam
listenPortNo	src/tcpnh/cdsunhtcp.h	/^	CdSuIpv4TcpPortNo listenPortNo;		\/\/ Listen Port No.			$/;"	m	struct:CdSuNhTcpLstnInfo
listenQSize	src/tcpnh/cdsunhtcpapiparam.h	/^	Uint32 listenQSize;			\/\/ Maximum length of the queue of pending connections.$/;"	m	struct:CdSuNhTcpMiInitParam
listenReqParam	test/tcpnh/basictest/parameter.h	/^CdSuNhTcpUiAddLstnReqParam listenReqParam;$/;"	v
listenReqParam	test/tcpnh/featuretest/parameter.h	/^CdSuNhTcpUiAddLstnReqParam listenReqParam;$/;"	v
listenSelectTimer	src/tcpnh/cdsunhtcpapiparam.h	/^	Uint32 listenSelectTimer;		\/\/ Time to wait in the select call waiting for connections. (microsecs)$/;"	m	struct:CdSuNhTcpMiInitParam
listenSockfd	src/msgdistr/cdsunhudptxptsrvc.h	/^	int listenSockfd; $/;"	m	class:CdSuUdpTxptServices
listenerConnId2ConnKeyTable	test/tcpnh/mp3Streamer/mp3StreamServer.cpp	/^CdSuIntHash <CdSuNhTcpConnKey*>* Mp3StreamServer::listenerConnId2ConnKeyTable$/;"	m	class:Mp3StreamServer	file:
listenerConnId2ConnKeyTable	test/tcpnh/mp3Streamer/mp3StreamServer.h	/^	static CdSuIntHash <CdSuNhTcpConnKey*>* listenerConnId2ConnKeyTable;			$/;"	m	class:Mp3StreamServer
listenerEventHlr	src/tcpnh/cdsunhtcp.h	/^	CdSuNhTcpEventHlr listenerEventHlr;	\/\/ Event Handler to be notified for events on this listener.$/;"	m	struct:CdSuNhTcpLstnInfo
listenerId	src/tcpnh/cdsunhtcp.h	/^	CdSuNhTcpLstnId listenerId;		\/\/ Listener Id.$/;"	m	struct:CdSuNhTcpLstnInfo
listenerIpv4Addr	src/tcpnh/cdsunhtcp.h	/^	CdSuIpv4Addr listenerIpv4Addr;$/;"	m	struct:CdSuNhTcpLstnInfo
listenerList	test/tcpnh/mp3Streamer/mp3StreamServer.h	/^	CdSuList<CdSuNhTcpConnKey*>* listenerList;	\/\/ Listener List who are listening on this channel$/;"	m	struct:ChannelInfo
lnqSize	src/tcpnh/cdsunhtcpdb.h	/^	Uint32 lnqSize;	$/;"	m	class:CdSuNhTcpDb
localAddr	src/udpnh/cdsunhudpapiparam.h	/^	CdSuIpv4Addr localAddr;			\/\/ local ipv4 address.$/;"	m	struct:CdSuNhUdpUiAddUdpPortReqParam
localAddr	src/udpnh/cdsunhudpapiparam.h	/^	CdSuIpv4Addr localAddr;		\/\/ local address on which data received.$/;"	m	struct:CdSuNhUdpUiDataIndEvent
localIpAddr	test/tcpnh/mp3Streamer/mp3StreamServer.cpp	/^char localIpAddr [ 4 ] = { 192, 168, 16, 51 };$/;"	v
localIpAddr	test/udpnh/basic-test/parameter.h	/^char localIpAddr [4] = { 192, 168, 16, 72 };$/;"	v
localIpAddr	test/udpnh/load-testing/parameter.h	/^char localIpAddr [4] = { 192, 168, 16, 72 };$/;"	v
localIpAddr	test/udpnh/testing-mul-nh-support/tester.cpp	/^char localIpAddr [4] = { 192, 168, 16, 72 };$/;"	v
localIpAddr	test/udpnh/testing-mul-nh-usr-support/tester.cpp	/^char localIpAddr [4] = { 192, 168, 16, 72 };$/;"	v
localIpAddr	test/udpnh/testing-mul-user-support/tester.cpp	/^char localIpAddr [4] = { 192, 168, 16, 72 };$/;"	v
localPortNo	src/udpnh/cdsunhudpapiparam.h	/^	CdSuIpv4UdpPortNo localPortNo;		\/\/ local port number.$/;"	m	struct:CdSuNhUdpUiAddUdpPortReqParam
localPortNo	src/udpnh/cdsunhudpapiparam.h	/^	CdSuIpv4UdpPortNo localPortNo;	\/\/ If ephermal port then to tell udp port selected by system.$/;"	m	struct:CdSuNhUdpUiAddUdpPortRspEvent
localPortNo	src/udpnh/cdsunhudpapiparam.h	/^	CdSuIpv4UdpPortNo localPortNo; 	\/\/ local port on whicd data received.$/;"	m	struct:CdSuNhUdpUiDataIndEvent
localPortOfBothFixed	test/udpnh/testing-mul-nh-support/tester.cpp	/^int localPortOfBothFixed = lPortOfBothFixed;$/;"	v
localPortOfBothFixed	test/udpnh/testing-mul-nh-support/tester.cpp	/^int localPortOfBothFixed = rPortOfBothFixed;$/;"	v
localPortOfBothFixed	test/udpnh/testing-mul-nh-usr-support/tester.cpp	/^int localPortOfBothFixed = lPortOfBothFixed;$/;"	v
localPortOfBothFixed	test/udpnh/testing-mul-nh-usr-support/tester.cpp	/^int localPortOfBothFixed = rPortOfBothFixed;$/;"	v
localPortOfBothFixed	test/udpnh/testing-mul-user-support/tester.cpp	/^int localPortOfBothFixed = DESTPORTOFBOTHFIXED;$/;"	v
localPortOfBothFixed	test/udpnh/testing-mul-user-support/tester.cpp	/^int localPortOfBothFixed = LOCALPORTOFBOTHFIXED;$/;"	v
localPortOfLocalFixed	test/udpnh/testing-mul-nh-support/tester.cpp	/^int localPortOfLocalFixed = lPortOfLocalFixed;$/;"	v
localPortOfLocalFixed	test/udpnh/testing-mul-nh-support/tester.cpp	/^int localPortOfLocalFixed = rPortOfLocalFixed;$/;"	v
localPortOfLocalFixed	test/udpnh/testing-mul-nh-usr-support/tester.cpp	/^int localPortOfLocalFixed = lPortOfLocalFixed;$/;"	v
localPortOfLocalFixed	test/udpnh/testing-mul-nh-usr-support/tester.cpp	/^int localPortOfLocalFixed = rPortOfLocalFixed;$/;"	v
localPortOfLocalFixed	test/udpnh/testing-mul-user-support/tester.cpp	/^int localPortOfLocalFixed = DESTPORTOFLOCALFIXED;$/;"	v
localPortType	test/udpnh/basic-test/parameter.h	/^LocalPortType localPortType = STANDARD;$/;"	v
localUdpInfo	src/msgdistr/cdsumd.h	/^	CdSuMdUdpPortInfo localUdpInfo;$/;"	m	class:CdSuMsgDistributor
localUdpPort	test/udpnh/basic-test/parameter.h	/^CdSuIpv4UdpPortNo localUdpPort = 6790;$/;"	v
logdr	docs/reqs/srs/nhtcp/index.html	/^<h3><a name="logdr">3.4 Logical Database Requirements<\/a><\/h3>$/;"	a
logdr	docs/reqs/srs/nhudp/index.html	/^<h3><a name="logdr">3.4 Logical Database Requirements<\/a><\/h3>$/;"	a
lookup	include/cdsucharhash.h	/^bool CdSuCharHash<ValType>::lookup (char* key, int keylen, ValType& value)$/;"	f	class:CdSuCharHash
lookup	include/cdsuinthash.h	/^bool CdSuIntHash<ValType>::lookup (unsigned int key, ValType& value)$/;"	f	class:CdSuIntHash
lookup	include/cdsumbhash.h	/^bool CdSuMultiByteHash<ValType>::lookup (void* key, ValType& value)$/;"	f	class:CdSuMultiByteHash
lstEventHlr	test/tcpnh/basictest/testfunctions.cpp	/^void lstEventHlr (void* arg)$/;"	f
lstEventHlr	test/tcpnh/featuretest/testfunctions.cpp	/^void lstEventHlr (void* arg)$/;"	f
lstEventHlr	test/tcpnh/mp3Streamer/mp3StreamServer.cpp	/^void Mp3StreamServer::lstEventHlr (void* arg)$/;"	f	class:Mp3StreamServer
lstnCleanUp	src/tcpnh/cdsunhtcp.cpp	/^bool CdSuNhTcp::lstnCleanUp (CdSuNhTcpLstnInfo* info)$/;"	f	class:CdSuNhTcp
lstnId	src/tcpnh/cdsunhtcpapiparam.h	/^	CdSuNhTcpLstnId lstnId;$/;"	m	struct:CdSuNhTcpLstnKey
lstnId	src/tcpnh/cdsunhtcpmsg.h	/^	CdSuNhTcpLstnId lstnId;$/;"	m	struct:CdSuNhTcpUiAddLstnReqMsg
lstnId2ListenInfoTable	src/tcpnh/cdsunhtcp.h	/^	CdSuIntHash <CdSuNhTcpLstnInfo*>* lstnId2ListenInfoTable;$/;"	m	class:CdSuNhTcp
lstnIdAllocMutex	src/tcpnh/cdsunhtcpdb.h	/^		pthread_mutex_t lstnIdAllocMutex;$/;"	m	class:CdSuNhTcpDb::NhTcpLstnIdAllocator
lstnIdAllocTable	src/tcpnh/cdsunhtcpdb.h	/^		CdSuIntHash<CdSuNhTcpConnId>* lstnIdAllocTable;$/;"	m	class:CdSuNhTcpDb::NhTcpLstnIdAllocator
lstnIdAllocator	src/tcpnh/cdsunhtcpdb.h	/^	NhTcpLstnIdAllocator* lstnIdAllocator;$/;"	m	class:CdSuNhTcpDb
lstnIdCounter	src/tcpnh/cdsunhtcpdb.h	/^		Uint32 lstnIdCounter;$/;"	m	class:CdSuNhTcpDb::NhTcpLstnIdAllocator
lstnKey	src/tcpnh/cdsunhtcpapiparam.h	/^	CdSuNhTcpLstnKey lstnKey;		\/\/ Listener Key.$/;"	m	struct:CdSuNhTcpUiRemLstnReqParam
lstnKey	src/tcpnh/cdsunhtcpapiparam.h	/^	CdSuNhTcpLstnKey lstnKey;		\/\/ Listner Key.$/;"	m	struct:CdSuNhTcpUiLstnEvent
lstnKey	test/tcpnh/basictest/parameter.h	/^CdSuNhTcpLstnKey lstnKey;		\/\/ Listener Key.$/;"	v
lstnKey	test/tcpnh/featuretest/parameter.h	/^CdSuNhTcpLstnKey lstnKey;		\/\/ Listener Key.$/;"	v
lstnKeyOfLstServer	test/tcpnh/mp3Streamer/mp3StreamServer.cpp	/^CdSuNhTcpLstnKey Mp3StreamServer::lstnKeyOfLstServer; 	\/\/ Listen Key of Listener of Mp3 Songs(ex: Xmms)$/;"	m	class:Mp3StreamServer	file:
lstnKeyOfLstServer	test/tcpnh/mp3Streamer/mp3StreamServer.h	/^	static CdSuNhTcpLstnKey lstnKeyOfLstServer;$/;"	m	class:Mp3StreamServer
lstnKeyOfStrServer	test/tcpnh/mp3Streamer/mp3StreamServer.cpp	/^CdSuNhTcpLstnKey Mp3StreamServer::lstnKeyOfStrServer;	\/\/ Listen Key of Listner of Mp3 Strea feeder.$/;"	m	class:Mp3StreamServer	file:
lstnKeyOfStrServer	test/tcpnh/mp3Streamer/mp3StreamServer.h	/^	static CdSuNhTcpLstnKey lstnKeyOfStrServer;$/;"	m	class:Mp3StreamServer
lstnSelTmr	src/tcpnh/cdsunhtcpdb.h	/^	Uint32 lstnSelTmr;$/;"	m	class:CdSuNhTcpDb
main	src/misc/netPrintServer.cpp	/^int main (int argc, char* argv[])$/;"	f
main	test/bukmsgthrd.cpp	/^int main ()$/;"	f
main	test/bukmsgthrd2.cpp	/^int main ()$/;"	f
main	test/charhash-test.cpp	/^int main ()$/;"	f
main	test/inthash-test.cpp	/^int main ()$/;"	f
main	test/list-test.cpp	/^int main ()$/;"	f
main	test/mbhash-test.cpp	/^int main ()$/;"	f
main	test/msgdistr-test.cpp	/^int main ()$/;"	f
main	test/msgdistr2-test.cpp	/^int main ()$/;"	f
main	test/queue-test.cpp	/^int main ()$/;"	f
main	test/taskscheduler-test.cpp	/^int main ()$/;"	f
main	test/tcpnh/basictest/testclient.cpp	/^int main ()$/;"	f
main	test/tcpnh/basictest/testserver.cpp	/^int main (int argc, char* argv [])$/;"	f
main	test/tcpnh/featuretest/testclient.cpp	/^int main ()$/;"	f
main	test/tcpnh/featuretest/testserver.cpp	/^int main (int argc, char* argv [])$/;"	f
main	test/tcpnh/mp3Streamer/mp3StreamerClient.cpp	/^int main (int argc, char* arg [])$/;"	f
main	test/tcpnh/mp3Streamer/mp3StreamerServer.cpp	/^int main ()$/;"	f
main	test/thread-test.cpp	/^int main ()$/;"	f
main	test/timer/test-funcclient.cpp	/^int main()$/;"	f
main	test/timer/test-listclient.cpp	/^int main()$/;"	f
main	test/timer/timerBasic.cpp	/^int main (int argc, char **argv)$/;"	f
main	test/timer/timerCascade.cpp	/^int main (int argc, char **argv)$/;"	f
main	test/timer/timerFuncTest.cpp	/^int main (int argc, char **argv)$/;"	f
main	test/timer/timerListTest.cpp	/^main (int argc, char **argv)$/;"	f
main	test/timer/timerPerfStartTest.cpp	/^main (int argc, char **argv)$/;"	f
main	test/timer/timerPerfStopTest.cpp	/^main (int argc, char **argv)$/;"	f
main	test/trace-test.cpp	/^int main ()$/;"	f
main	test/tsqueue-test.cpp	/^int main ()$/;"	f
main	test/tsqueue-thread-test.cpp	/^int main ()$/;"	f
main	test/udpnh/basic-test/testclient.cpp	/^int main ()$/;"	f
main	test/udpnh/basic-test/testserver.cpp	/^int main (int argc, char* argv [])$/;"	f
main	test/udpnh/load-testing/testclient.cpp	/^int main ()$/;"	f
main	test/udpnh/load-testing/testserver.cpp	/^int main (int argc, char* argv [])$/;"	f
main	test/udpnh/testing-mul-nh-support/tester.cpp	/^int main ()$/;"	f
main	test/udpnh/testing-mul-nh-usr-support/tester.cpp	/^int main (int argc, char* argv [])$/;"	f
main	test/udpnh/testing-mul-user-support/tester.cpp	/^int main ()$/;"	f
main	test/unixmemmon-test.cpp	/^int main ()$/;"	f
main	test/utiltypes-test-c.c	/^int main ()$/;"	f
main	test/utiltypes-test.cpp	/^int main ()$/;"	f
maintid	test/timer/timerBasic.cpp	/^int maintid;			\/\/tid of mail thread$/;"	v
maintid	test/timer/timerCascade.cpp	/^int maintid;			\/\/tid of mail thread$/;"	v
maintid	test/timer/timerFuncTest.cpp	/^int maintid;$/;"	v
maintid	test/timer/timerListTest.cpp	/^int maintid;$/;"	v
maintid	test/timer/timerPerfStartTest.cpp	/^int maintid;$/;"	v
maintid	test/timer/timerPerfStopTest.cpp	/^int maintid;$/;"	v
makeNhReady	test/udpnh/load-testing/testfunctions.cpp	/^void makeNhReady ()$/;"	f
maxBufferLen	src/tcpnh/cdsunhtcpapiparam.h	/^	Uint16 maxBufferLen;			\/\/ Maximum buffer length.$/;"	m	struct:CdSuNhTcpMiInitParam
maxBufferLen	src/tcpnh/cdsunhtcpdb.h	/^	Uint16 maxBufferLen;			$/;"	m	class:CdSuNhTcpDb
maxBufferLen	src/udpnh/cdsunhudpapiparam.h	/^	Uint16 maxBufferLen;		\/\/ Maximum receiver buffer length.$/;"	m	struct:CdSuNhUdpMiInitParam
maxBufferLen	src/udpnh/cdsunhudpdb.h	/^	Uint16 maxBufferLen;		\/\/ Max Buffer Length			$/;"	m	class:CdSuNhUdpDb
maxConnHandle	src/tcpnh/cdsunhtcp.h	/^	CdSuNhTcpHandle maxConnHandle;$/;"	m	class:CdSuNhTcp
maxCounter	test/tcpnh/basictest/parameter.h	/^const int maxCounter = 5;$/;"	v
maxCounter	test/tcpnh/featuretest/parameter.h	/^const int maxCounter = 5;$/;"	v
maxCounter	test/udpnh/basic-test/parameter.h	/^const int maxCounter = 5;$/;"	v
maxKeyLen	include/cdsucharhash.h	/^	int maxKeyLen;$/;"	m	class:CdSuCharHash
maxListenHandle	src/tcpnh/cdsunhtcp.h	/^	CdSuNhTcpHandle maxListenHandle;$/;"	m	class:CdSuNhTcp
maxNhInst	src/tcpnh/cdsunhtcpinstmgr.h	/^	Uint32 maxNhInst;$/;"	m	class:CdSuNhTcpInstMgr
maxNhInst	src/udpnh/cdsunhudpinstmgr.h	/^	Uint32 maxNhInst;$/;"	m	class:CdSuNhUdpInstMgr
maxNoOfConn	src/tcpnh/cdsunhtcpdb.h	/^	Uint32 maxNoOfConn;		$/;"	m	class:CdSuNhTcpDb
maxNoOfConnections	src/tcpnh/cdsunhtcpapiparam.h	/^	Uint32 maxNoOfConnections;		\/\/ Maximum no of connections.$/;"	m	struct:CdSuNhTcpMiInitParam
maxNoOfLstn	src/tcpnh/cdsunhtcpdb.h	/^	Uint32 maxNoOfLstn;		$/;"	m	class:CdSuNhTcpDb
maxNoOfLstns	src/tcpnh/cdsunhtcpapiparam.h	/^	Uint32 maxNoOfLstns;			\/\/ Maximum no of Lstns.$/;"	m	struct:CdSuNhTcpMiInitParam
maxNoOfTasks	include/cdsutaskscheduler.h	/^	Uint32 maxNoOfTasks;$/;"	m	class:CdSuTaskScheduler
maxNoOfUdpPort	src/udpnh/cdsunhudpapiparam.h	/^	Uint32 maxNoOfUdpPort;		\/\/ Maximum no of Udp Port that NH Must support.$/;"	m	struct:CdSuNhUdpMiInitParam
maxNoOfUdpPort	src/udpnh/cdsunhudpdb.h	/^	Uint32 maxNoOfUdpPort;		\/\/ Max No Of Udp Port Allowed	$/;"	m	class:CdSuNhUdpDb
maxPortPerInst	test/udpnh/load-testing/parameter.h	/^int maxPortPerInst = (MAXPORT \/ MAXINST); $/;"	v
maxUdpPortHandle	src/udpnh/cdsunhudp.h	/^	CdSuNhUdpHandle maxUdpPortHandle;	\/\/ Maximum Fds.$/;"	m	class:CdSuNhUdp
maxsize	include/cdsuqueue.h	/^	unsigned long maxsize;$/;"	m	class:CdSuQueue
maxsize	include/cdsutsqueue.h	/^	unsigned int maxsize;$/;"	m	class:CdSuTsQueue
md	docs/design/mdd/charhash/index.html	/^<a name="md"><\/a>$/;"	a
md	docs/design/mdd/inthash/index.html	/^<a name="md"><\/a>$/;"	a
md	docs/design/mdd/list/index.html	/^<a name="md"><\/a>$/;"	a
md	docs/design/mdd/msgdistr/msgdistrmdd.html	/^<a name="md"><\/a>$/;"	a
md	docs/design/mdd/multibytehash/index.html	/^<a name="md"><\/a>$/;"	a
md	docs/design/mdd/nhtcp/index.html	/^<A NAME="md"><\/A>$/;"	a
md	docs/design/mdd/nhudp/index.html	/^<A NAME="md"><\/A>$/;"	a
md	docs/design/mdd/queue/index.html	/^<a name="md"><\/a>$/;"	a
md	docs/design/mdd/taskscheduler/index.html	/^<a name="md"><\/a>$/;"	a
md	docs/design/mdd/tsqueue/index.html	/^<a name="md"><\/a>$/;"	a
md-functionality	docs/design/mdd/charhash/index.html	/^<a name="md-functionality"><\/a>$/;"	a
md-functionality	docs/design/mdd/inthash/index.html	/^<a name="md-functionality"><\/a>$/;"	a
md-functionality	docs/design/mdd/list/index.html	/^<a name="md-functionality"><\/a>$/;"	a
md-functionality	docs/design/mdd/msgdistr/msgdistrmdd.html	/^<a name="md-functionality"><\/a>$/;"	a
md-functionality	docs/design/mdd/multibytehash/index.html	/^<a name="md-functionality"><\/a>$/;"	a
md-functionality	docs/design/mdd/nhtcp/index.html	/^<A NAME="md-functionality"><\/A>$/;"	a
md-functionality	docs/design/mdd/nhudp/index.html	/^<A NAME="md-functionality"><\/A>$/;"	a
md-functionality	docs/design/mdd/queue/index.html	/^<a name="md-functionality"><\/a>$/;"	a
md-functionality	docs/design/mdd/taskscheduler/index.html	/^<a name="md-functionality"><\/a>$/;"	a
md-functionality	docs/design/mdd/tsqueue/index.html	/^<a name="md-functionality"><\/a>$/;"	a
md-goals	docs/design/mdd/charhash/index.html	/^<a name="md-goals"><\/a>$/;"	a
md-goals	docs/design/mdd/inthash/index.html	/^<a name="md-goals"><\/a>$/;"	a
md-goals	docs/design/mdd/list/index.html	/^<a name="md-goals"><\/a>$/;"	a
md-goals	docs/design/mdd/msgdistr/msgdistrmdd.html	/^<a name="md-goals"><\/a>$/;"	a
md-goals	docs/design/mdd/multibytehash/index.html	/^<a name="md-goals"><\/a>$/;"	a
md-goals	docs/design/mdd/queue/index.html	/^<a name="md-goals"><\/a>$/;"	a
md-goals	docs/design/mdd/taskscheduler/index.html	/^<a name="md-goals"><\/a>$/;"	a
md-goals	docs/design/mdd/tsqueue/index.html	/^<a name="md-goals"><\/a>$/;"	a
md-properties	docs/design/mdd/charhash/index.html	/^<a name="md-properties"><\/a>$/;"	a
md-properties	docs/design/mdd/inthash/index.html	/^<a name="md-properties"><\/a>$/;"	a
md-properties	docs/design/mdd/list/index.html	/^<a name="md-properties"><\/a>$/;"	a
md-properties	docs/design/mdd/msgdistr/msgdistrmdd.html	/^<a name="md-properties"><\/a>$/;"	a
md-properties	docs/design/mdd/multibytehash/index.html	/^<a name="md-properties"><\/a>$/;"	a
md-properties	docs/design/mdd/nhtcp/index.html	/^<A NAME="md-properties"><\/A>$/;"	a
md-properties	docs/design/mdd/nhudp/index.html	/^<A NAME="md-properties"><\/A>$/;"	a
md-properties	docs/design/mdd/queue/index.html	/^<a name="md-properties"><\/a>$/;"	a
md-properties	docs/design/mdd/taskscheduler/index.html	/^<a name="md-properties"><\/a>$/;"	a
md-properties	docs/design/mdd/tsqueue/index.html	/^<a name="md-properties"><\/a>$/;"	a
md-responsibilities	docs/design/mdd/charhash/index.html	/^<a name="md-responsibilities"><\/a>$/;"	a
md-responsibilities	docs/design/mdd/inthash/index.html	/^<a name="md-responsibilities"><\/a>$/;"	a
md-responsibilities	docs/design/mdd/list/index.html	/^<a name="md-responsibilities"><\/a>$/;"	a
md-responsibilities	docs/design/mdd/msgdistr/msgdistrmdd.html	/^<a name="md-responsibilities"><\/a>$/;"	a
md-responsibilities	docs/design/mdd/multibytehash/index.html	/^<a name="md-responsibilities"><\/a>$/;"	a
md-responsibilities	docs/design/mdd/nhtcp/index.html	/^<A NAME="md-responsibilities"><\/A>$/;"	a
md-responsibilities	docs/design/mdd/nhudp/index.html	/^<A NAME="md-responsibilities"><\/A>$/;"	a
md-responsibilities	docs/design/mdd/queue/index.html	/^<a name="md-responsibilities"><\/a>$/;"	a
md-responsibilities	docs/design/mdd/taskscheduler/index.html	/^<a name="md-responsibilities"><\/a>$/;"	a
md-responsibilities	docs/design/mdd/tsqueue/index.html	/^<a name="md-responsibilities"><\/a>$/;"	a
mdMutex	src/msgdistr/cdsumd.h	/^	pthread_mutex_t mdMutex;$/;"	m	class:CdSuMsgDistributor
memcon	docs/reqs/srs/nhudp/index.html	/^<h3><a name="memcon">2.1.7 Memory Constaints<\/a><\/h3>$/;"	a
mgmtintf	docs/reqs/srs/nhudp/index.html	/^<h3><a name="mgmtintf">2.1.3 Management Interfaces<\/a><\/h3>$/;"	a
missedSanityCount	include/cdsusanity.h	/^	Uint8 missedSanityCount;$/;"	m	class:SanityModule
modId	src/msgdistr/cdsumd.h	/^		CdModuleId modId;$/;"	m	struct:CdSuMsgDistributor::DestModInfo
moduleInfoTable	src/msgdistr/cdsumd.h	/^	CdSuMultiByteHash<DestModInfo*>* moduleInfoTable;$/;"	m	class:CdSuMsgDistributor
mountPoint	test/tcpnh/mp3Streamer/mp3StreamServer.h	/^	char* mountPoint;				\/\/ Mount Point$/;"	m	struct:ChannelInfo
msg-rxd	docs/design/mdd/queue/index.html	/^<a name="msg-rxd"><\/a>$/;"	a
msg-rxd	docs/design/mdd/tsqueue/index.html	/^<a name="msg-rxd"><\/a>$/;"	a
msg-txd	docs/design/mdd/queue/index.html	/^<a name="msg-txd"><\/a>$/;"	a
msg-txd	docs/design/mdd/tsqueue/index.html	/^<a name="msg-txd"><\/a>$/;"	a
msgHdr	include/cdsuutiltypes-c.h	/^	CdMessageHdr msgHdr;			\/\/ message header$/;"	m	struct:CdMessage
msgHdr	include/cdsuutiltypes.h	/^	CdMessageHdr msgHdr;			\/\/ message header$/;"	m	struct:CdMessage
msgLen	include/cdsusanitymsgs.h	/^	Uint16		msgLen;			\/\/ message length$/;"	m	struct:CdMessageHeader
msgLen	include/cdsuutiltypes-c.h	/^        Uint16          msgLen;                 \/\/ message length$/;"	m	struct:CdMessageHdr
msgLen	include/cdsuutiltypes.h	/^        Uint16          msgLen;                 \/\/ message length$/;"	m	struct:CdMessageHdr
msgQueue	include/cdsutaskscheduler.h	/^	CdSuTsQueue<CdTaskMessage*>* msgQueue;$/;"	m	class:CdSuTaskScheduler
msgQueueBased	include/cdsutaskscheduler.h	/^	bool msgQueueBased;$/;"	m	class:CdSuTaskScheduler
msgrxd	docs/design/mdd/msgdistr/msgdistrmdd.html	/^<a name="msgrxd"><\/a>$/;"	a
msgrxd	docs/design/mdd/taskscheduler/index.html	/^<a name="msgrxd"><\/a>$/;"	a
msgtonh	docs/design/mdd/nhudp/index.html	/^<A NAME="msgtonh"><\/A>$/;"	a
msgtxd	docs/design/mdd/msgdistr/msgdistrmdd.html	/^<a name="msgtxd"><\/a>$/;"	a
msgtxd	docs/design/mdd/taskscheduler/index.html	/^<a name="msgtxd"><\/a>$/;"	a
multiAcceptor	src/tcpnh/cdsunhtcp.cpp	/^bool CdSuNhTcp::multiAcceptor ()$/;"	f	class:CdSuNhTcp
multiByteHash	test/mbhash-test.cpp	/^CdSuMultiByteHash<int>* multiByteHash =$/;"	v
mutli	docs/reqs/srs/nhtcp/index.html	/^<h3><a name="mutli">2.1.6 Multi-Network Handler Support.<\/a><\/h3>$/;"	a
myalarm	test/timer/sup-test.cpp	/^Cyg_Alarm* myalarm;			\/\/ eCos alarm object$/;"	v
next	include/cdsucharhash.h	/^		HashBucket* next;	$/;"	m	struct:CdSuCharHash::HashBucket
next	include/cdsucharhash.h	/^		HashElement* next;$/;"	m	struct:CdSuCharHash::HashElement
next	include/cdsuinthash.h	/^		HashBucket* next;	$/;"	m	struct:CdSuIntHash::HashBucket
next	include/cdsuinthash.h	/^		HashElement* next;$/;"	m	struct:CdSuIntHash::HashElement
next	include/cdsumbhash.h	/^		HashBucket* next;	$/;"	m	struct:CdSuMultiByteHash::HashBucket
next	include/cdsumbhash.h	/^		HashElement* next;$/;"	m	struct:CdSuMultiByteHash::HashElement
next	include/cdsuqueue.h	/^		Node *next;$/;"	m	struct:CdSuQueue::Node
next	include/cdsutimer.h	/^        CdSuTnode* next;    	\/\/ Pointer to next request. NULL if none.$/;"	m	struct:CdSuTnode
next	include/cdsutsqueue.h	/^		Node *next;$/;"	m	struct:CdSuTsQueue::Node
nhActorId	src/tcpnh/cdsunhtcpapiparam.h	/^	CdSuActorId nhActorId;			\/\/ Network Handler Actor Id.$/;"	m	struct:CdSuNhTcpMiInitParam
nhActorId	src/tcpnh/cdsunhtcpdb.h	/^	CdSuActorId nhActorId;			$/;"	m	class:CdSuNhTcpDb
nhActorId	src/udpnh/cdsunhudpapiparam.h	/^	CdSuActorId nhActorId;		\/\/ Network Handler Actor Id.$/;"	m	struct:CdSuNhUdpMiInitParam
nhActorId	src/udpnh/cdsunhudpdb.h	/^	CdSuActorId nhActorId;			$/;"	m	class:CdSuNhUdpDb
nhDb	src/tcpnh/cdsunhtcp.h	/^	CdSuNhTcpDb* nhDb;$/;"	m	class:CdSuNhTcp
nhDb	src/udpnh/cdsunhudp.h	/^	CdSuNhUdpDb* nhDb;			\/\/ Pointer to DB Object$/;"	m	class:CdSuNhUdp
nhInitParam	src/msgdistr/cdsumd.h	/^	CdSuMdUdpNhInitParam* nhInitParam;$/;"	m	class:CdSuMsgDistributor
nhInstID	test/udpnh/basic-test/parameter.h	/^CdSuNhUdpInstId nhInstID;	\/\/ UDP NH Instance ID.$/;"	v
nhInstID	test/udpnh/load-testing/parameter.h	/^CdSuNhUdpInstId nhInstID [MAXINST];	\/\/ UDP NH Instance ID.$/;"	v
nhInstId	src/tcpnh/cdsunhtcpdb.h	/^	CdSuNhTcpInstId nhInstId;$/;"	m	class:CdSuNhTcpDb
nhInstId	src/udpnh/cdsunhudpapiparam.h	/^	CdSuNhUdpInstId nhInstId;	\/\/ UDP network handler identifier$/;"	m	struct:CdSuNhUdpMiEvent
nhInstId	src/udpnh/cdsunhudpdb.h	/^	CdSuNhUdpInstId nhInstId;$/;"	m	class:CdSuNhUdpDb
nhInstId	test/tcpnh/basictest/parameter.h	/^CdSuNhTcpInstId nhInstId;		\/\/ TCP NH Instance ID.$/;"	v
nhInstId	test/tcpnh/featuretest/parameter.h	/^CdSuNhTcpInstId nhInstId;		\/\/ TCP NH Instance ID.$/;"	v
nhInstId	test/tcpnh/mp3Streamer/mp3StreamServer.h	/^	CdSuNhTcpInstId nhInstId;$/;"	m	class:Mp3StreamServer
nhMid	src/msgdistr/cdsunhudpglobals.h	/^	CdModuleId nhMid;$/;"	m	struct:CdSuMdUdpNhInitParam
nhModId	test/tcpnh/basictest/parameter.h	/^CdSuActorId nhModId;			\/\/ Network handler Actor ID.$/;"	v
nhModId	test/tcpnh/featuretest/parameter.h	/^CdSuActorId nhModId;			\/\/ Network handler Actor ID.$/;"	v
nhModId	test/tcpnh/mp3Streamer/mp3StreamServer.h	/^	CdSuActorId nhModId;	 $/;"	m	class:Mp3StreamServer
nhModId	test/udpnh/basic-test/parameter.h	/^CdSuActorId nhModId;		\/\/ Network handler Actor ID.$/;"	v
nhModId	test/udpnh/load-testing/parameter.h	/^CdSuActorId nhModId [MAXINST];		\/\/ Network handler Actor ID.$/;"	v
nhModId	test/udpnh/testing-mul-nh-support/tester.cpp	/^CdSuActorId nhModId [4];		\/\/ nh MOD ID.$/;"	v
nhModId	test/udpnh/testing-mul-nh-usr-support/tester.cpp	/^CdSuActorId nhModId [2];		\/\/ nh MOD ID.$/;"	v
nhModId	test/udpnh/testing-mul-user-support/tester.cpp	/^CdSuActorId nhModId;		\/\/ nh MOD ID.$/;"	v
nhState	src/tcpnh/cdsunhtcp.h	/^	CdSuNhTcpState nhState;$/;"	m	class:CdSuNhTcp
nhState	src/tcpnh/cdsunhtcpapiparam.h	/^	CdSuNhTcpState nhState;$/;"	m	struct:CdSuNhTcpMiStatusRspEvent
nhState	src/tcpnh/cdsunhtcpapiparam.h	/^	CdSuNhTcpState nhState;$/;"	m	struct:CdSuNhTcpMiUStaIndEvent
nhState	src/udpnh/cdsunhudp.h	/^	CdSuNhUdpState nhState;			\/\/ State of the UDP Nh$/;"	m	class:CdSuNhUdp
nhState	src/udpnh/cdsunhudpapiparam.h	/^	CdSuNhUdpState nhState;		\/\/ State Of the NH. Valid Only if success.$/;"	m	struct:CdSuNhUdpMiStatusRspEvent
nhState	src/udpnh/cdsunhudpapiparam.h	/^	CdSuNhUdpState nhState;		\/\/ State of NH$/;"	m	struct:CdSuNhUdpMiUStaIndEvent
nhTcpDbTable	src/tcpnh/cdsunhtcpinstmgr.h	/^	CdSuNhTcpDb* nhTcpDbTable[ CDSU_NHTCP_MAX_INST ];$/;"	m	class:CdSuNhTcpInstMgr
nhTcpInstId	src/tcpnh/cdsunhtcpapiparam.h	/^	CdSuNhTcpInstId nhTcpInstId;		$/;"	m	struct:CdSuNhTcpMiDelNhParam
nhTcpInstId	src/tcpnh/cdsunhtcpapiparam.h	/^	CdSuNhTcpInstId nhTcpInstId;		$/;"	m	struct:CdSuNhTcpMiTerminateParam
nhTcpInstId	src/tcpnh/cdsunhtcpapiparam.h	/^	CdSuNhTcpInstId nhTcpInstId;		\/\/ TCP NH Instance Id.$/;"	m	struct:CdSuNhTcpUiAddLstnReqParam
nhTcpInstId	src/tcpnh/cdsunhtcpapiparam.h	/^	CdSuNhTcpInstId nhTcpInstId;		\/\/ TCP NH Instance Id.$/;"	m	struct:CdSuNhTcpUiConReqParam
nhTcpInstId	src/tcpnh/cdsunhtcpapiparam.h	/^	CdSuNhTcpInstId nhTcpInstId;		\/\/ TCP network handler identifier$/;"	m	struct:CdSuNhTcpMiEvent
nhTcpInstId	src/tcpnh/cdsunhtcpapiparam.h	/^	CdSuNhTcpInstId nhTcpInstId;$/;"	m	struct:CdSuNhTcpConnKey
nhTcpInstId	src/tcpnh/cdsunhtcpapiparam.h	/^	CdSuNhTcpInstId nhTcpInstId;$/;"	m	struct:CdSuNhTcpLstnKey
nhTcpInstId	src/tcpnh/cdsunhtcpapiparam.h	/^	CdSuNhTcpInstId nhTcpInstId;$/;"	m	struct:CdSuNhTcpMiCfgReqParam
nhTcpInstId	src/tcpnh/cdsunhtcpapiparam.h	/^	CdSuNhTcpInstId nhTcpInstId;$/;"	m	struct:CdSuNhTcpMiCtrlReqParam
nhTcpInstId	src/tcpnh/cdsunhtcpapiparam.h	/^	CdSuNhTcpInstId nhTcpInstId;$/;"	m	struct:CdSuNhTcpMiStatusReqParam
nhTcpInstId	src/tcpnh/cdsunhtcpapiparam.h	/^	CdSuNhTcpInstId nhTcpInstId;$/;"	m	struct:CdSuNhTcpMiStsReqParam
nhTcpInstMgr	src/tcpnh/cdsunhtcpinstmgr.cpp	/^CdSuNhTcpInstMgr* CdSuNhTcpInstMgr::nhTcpInstMgr = (CdSuNhTcpInstMgr*) NULL;$/;"	m	class:CdSuNhTcpInstMgr	file:
nhTcpInstMgr	src/tcpnh/cdsunhtcpinstmgr.h	/^	static CdSuNhTcpInstMgr* nhTcpInstMgr;$/;"	m	class:CdSuNhTcpInstMgr
nhTcpPtr	src/tcpnh/cdsunhtcpdb.h	/^	CdSuNhTcp* nhTcpPtr;$/;"	m	class:CdSuNhTcpDb
nhUdpDbTable	src/udpnh/cdsunhudpinstmgr.h	/^	CdSuNhUdpDb* nhUdpDbTable[ CDSU_NHUDP_MAX_INST ];$/;"	m	class:CdSuNhUdpInstMgr
nhUdpInstId	src/udpnh/cdsunhudpapiparam.h	/^	CdSuNhUdpInstId  nhUdpInstId;		\/\/ Nh Instance Id over which Udp port to be added.$/;"	m	struct:CdSuNhUdpUiAddUdpPortReqParam
nhUdpInstId	src/udpnh/cdsunhudpapiparam.h	/^	CdSuNhUdpInstId nhUdpInstId;	\/\/ Instance ID of NH over which configuration to be done.$/;"	m	struct:CdSuNhUdpMiCfgReqParam
nhUdpInstId	src/udpnh/cdsunhudpapiparam.h	/^	CdSuNhUdpInstId nhUdpInstId;	\/\/ Instance ID of NH over which control operation to be done.$/;"	m	struct:CdSuNhUdpMiCtrlReqParam
nhUdpInstId	src/udpnh/cdsunhudpapiparam.h	/^	CdSuNhUdpInstId nhUdpInstId;	\/\/ Instance Id of NH to be deleted.	$/;"	m	struct:CdSuNhUdpMiDelNhParam
nhUdpInstId	src/udpnh/cdsunhudpapiparam.h	/^	CdSuNhUdpInstId nhUdpInstId;	\/\/ Instance Id of NH to be terminated.$/;"	m	struct:CdSuNhUdpMiTerminateParam
nhUdpInstId	src/udpnh/cdsunhudpapiparam.h	/^	CdSuNhUdpInstId nhUdpInstId; 	\/\/ Instance ID Of NH of which status required.$/;"	m	struct:CdSuNhUdpMiStatusReqParam
nhUdpInstId	src/udpnh/cdsunhudpapiparam.h	/^	CdSuNhUdpInstId nhUdpInstId; 	\/\/ Instance ID.$/;"	m	struct:CdSuNhUdpUiSendReqParam
nhUdpInstId	src/udpnh/cdsunhudpapiparam.h	/^	CdSuNhUdpInstId nhUdpInstId; \/\/ Instance ID of NH of which statistics report required.$/;"	m	struct:CdSuNhUdpMiStsReqParam
nhUdpInstId	src/udpnh/cdsunhudptypes.h	/^	CdSuNhUdpInstId nhUdpInstId;	\/\/ NH instance Id.$/;"	m	struct:CdSuNhUdpPortKey
nhUdpInstMgr	src/udpnh/cdsunhudpinstmgr.cpp	/^CdSuNhUdpInstMgr* CdSuNhUdpInstMgr::nhUdpInstMgr = (CdSuNhUdpInstMgr*) NULL;$/;"	m	class:CdSuNhUdpInstMgr	file:
nhUdpInstMgr	src/udpnh/cdsunhudpinstmgr.h	/^	static CdSuNhUdpInstMgr* nhUdpInstMgr;$/;"	m	class:CdSuNhUdpInstMgr
nhUdpPortId	src/udpnh/cdsunhudptypes.h	/^	CdSuNhUdpPortId	nhUdpPortId;	\/\/ Udp port Id;$/;"	m	struct:CdSuNhUdpPortKey
nhUdpPortKey	src/udpnh/cdsunhudpapiparam.h	/^	CdSuNhUdpPortKey nhUdpPortKey;	\/\/ Each Udp port identified by key (Nh Instance ID + Udp Port Key).$/;"	m	struct:CdSuNhUdpUiEvent
nhUdpPortKey	test/udpnh/basic-test/parameter.h	/^CdSuNhUdpPortKey nhUdpPortKey;	\/\/ Udp Port Key.$/;"	v
nhUdpPortKey	test/udpnh/load-testing/parameter.h	/^CdSuNhUdpPortKey nhUdpPortKey [ MAXPORT ];	\/\/ Udp Port Key.$/;"	v
nhUdpPtr	src/udpnh/cdsunhudpdb.h	/^	CdSuNhUdp* nhUdpPtr;$/;"	m	class:CdSuNhUdpDb
nhtcpApplnThreadSpace	test/tcpnh/basictest/testfunctions.cpp	/^char nhtcpApplnThreadSpace[PTHREAD_STACK_MIN * 32];$/;"	v
nhtcpApplnThreadSpace	test/tcpnh/featuretest/testfunctions.cpp	/^char nhtcpApplnThreadSpace[PTHREAD_STACK_MIN * 32];$/;"	v
noAckReq	test/udpnh/basic-test/parameter.h	/^bool noAckReq = false;$/;"	v
noConnInd	test/tcpnh/basictest/testfunctions.cpp	/^int noConnInd;$/;"	v
noConnInd	test/tcpnh/featuretest/testfunctions.cpp	/^int noConnInd;$/;"	v
noHandleTimer	src/tcpnh/cdsunhtcpapiparam.h	/^	Uint32 noHandleTimer;			\/\/ Time to sleep if no fds are there.$/;"	m	struct:CdSuNhTcpMiInitParam
noHandleTimer	src/udpnh/cdsunhudpapiparam.h	/^	Uint32 noHandleTimer;		\/\/ Time to sleep if no fds are there.$/;"	m	struct:CdSuNhUdpMiInitParam
noOfAddUdpPort	test/udpnh/load-testing/parameter.h	/^int noOfAddUdpPort = 0;$/;"	v
noOfAddUdpPortRsp	test/udpnh/load-testing/parameter.h	/^int noOfAddUdpPortRsp = 0;$/;"	v
noOfConnInd	test/tcpnh/basictest/parameter.h	/^Uint32 noOfConnInd = 0;$/;"	v
noOfDataFailRsp	test/udpnh/load-testing/parameter.h	/^int noOfDataFailRsp = 0;$/;"	v
noOfDataInd	test/tcpnh/basictest/parameter.h	/^Uint32 noOfDataInd = 0;$/;"	v
noOfDataRecvd	test/udpnh/load-testing/parameter.h	/^int noOfDataRecvd = 0;$/;"	v
noOfDataRsp	test/udpnh/load-testing/parameter.h	/^int noOfDataRsp = 0;$/;"	v
noOfDataSent	test/udpnh/load-testing/parameter.h	/^int noOfDataSent = 0;$/;"	v
noOfDataSentSuccess	test/udpnh/load-testing/parameter.h	/^int noOfDataSentSuccess = 0;$/;"	v
noOfDel	test/udpnh/load-testing/parameter.h	/^int noOfDel =0;$/;"	v
noOfDelRsp	test/udpnh/load-testing/parameter.h	/^int noOfDelRsp = 0;$/;"	v
noOfInit	test/udpnh/load-testing/parameter.h	/^int noOfInit = 0;$/;"	v
noOfInitRsp	test/udpnh/load-testing/parameter.h	/^int noOfInitRsp = 0;$/;"	v
noOfNhInst	src/tcpnh/cdsunhtcpinstmgr.h	/^	Uint32 noOfNhInst;$/;"	m	class:CdSuNhTcpInstMgr
noOfNhInst	src/udpnh/cdsunhudpinstmgr.h	/^	Uint32 noOfNhInst;$/;"	m	class:CdSuNhUdpInstMgr
noOfOpenedPort	test/udpnh/load-testing/parameter.h	/^int noOfOpenedPort;$/;"	v
noOfSendDataReq	test/tcpnh/basictest/parameter.h	/^Uint32 noOfSendDataReq = 0;$/;"	v
noOfSendDataReqSuccess	test/tcpnh/basictest/parameter.h	/^Uint32 noOfSendDataReqSuccess = 0;$/;"	v
noOfSendDataRspSuccess	test/tcpnh/basictest/parameter.h	/^Uint32 noOfSendDataRspSuccess = 0;$/;"	v
noOfStart	test/udpnh/load-testing/parameter.h	/^int noOfStart = 0;$/;"	v
noOfStartRsp	test/udpnh/load-testing/parameter.h	/^int noOfStartRsp = 0;$/;"	v
noOfStop	test/udpnh/load-testing/parameter.h	/^int noOfStop = 0;$/;"	v
noOfStopRsp	test/udpnh/load-testing/parameter.h	/^int noOfStopRsp = 0;$/;"	v
noOfSuccessConnReq	test/tcpnh/basictest/parameter.h	/^Uint32 noOfSuccessConnReq = 0;$/;"	v
noOfSuccessConnRsp	test/tcpnh/basictest/parameter.h	/^Uint32 noOfSuccessConnRsp = 0;$/;"	v
noOfTerm	test/udpnh/load-testing/parameter.h	/^int noOfTerm = 0;$/;"	v
noOfUdpPortRem	test/udpnh/load-testing/parameter.h	/^int noOfUdpPortRem = 0;$/;"	v
noOfUdpPortRemRsp	test/udpnh/load-testing/parameter.h	/^int noOfUdpPortRemRsp = 0;$/;"	v
noTcpHandleTmr	src/tcpnh/cdsunhtcpdb.h	/^	Uint32 noTcpHandleTmr;$/;"	m	class:CdSuNhTcpDb
noUdpHandleTmr	src/udpnh/cdsunhudpdb.h	/^	Uint32 noUdpHandleTmr;		\/\/ Time to sleep when there is no fd to read.$/;"	m	class:CdSuNhUdpDb
ntoh	include/cdsuutiltypes.h	/^			void ntoh ()$/;"	f	struct:CdServiceHandlerId::__anon20::__anon22
ntoh	include/cdsuutiltypes.h	/^	void ntoh ()$/;"	f	struct:CdMessageHdr
ntoh	include/cdsuutiltypes.h	/^	void ntoh ()$/;"	f	struct:CdModuleId
ntoh	include/cdsuutiltypes.h	/^	void ntoh ()$/;"	f	struct:CdServiceHandlerId
ntoh	test/msgdistr-test.h	/^	void ntoh ()$/;"	f	struct:MyTestMsg
numBuckets	include/cdsucharhash.h	/^	int numBuckets;$/;"	m	class:CdSuCharHash
numBuckets	include/cdsuinthash.h	/^	int numBuckets;$/;"	m	class:CdSuIntHash
numBuckets	include/cdsumbhash.h	/^	int numBuckets;$/;"	m	class:CdSuMultiByteHash
numElements	include/cdsucharhash.h	/^	int numElements;$/;"	m	class:CdSuCharHash
numElements	include/cdsuinthash.h	/^	int numElements;$/;"	m	class:CdSuIntHash
numElements	include/cdsumbhash.h	/^	int numElements;$/;"	m	class:CdSuMultiByteHash
nwHlrMid	src/msgdistr/cdsumd.h	/^	CdModuleId nwHlrMid;$/;"	m	class:CdSuMsgDistributor
nwHlrMid	src/msgdistr/cdsunhudpdb.h	/^	CdModuleId nwHlrMid;$/;"	m	class:CdSuNwhlrDb
nwQ	src/msgdistr/cdsunhudpdb.h	/^	CdSuTsQueue<CdMessage*>* nwQ;$/;"	m	class:CdSuNwhlrDb
objdiag	docs/design/mdd/nhtcp/index.html	/^<A NAME="objdiag"><\/A>$/;"	a
offset	include/cdsutimer.h	/^	Uint32 offset;		\/\/ Used to store the hash position in$/;"	m	struct:CdSuTnode
opaqueData	src/udpnh/cdsunhudpapiparam.h	/^	Uint32 opaqueData;		\/\/ To reflect opaque of data in data request back to user.$/;"	m	struct:CdSuNhUdpUiDataRspEvent
opaqueData	src/udpnh/cdsunhudpapiparam.h	/^	Uint32 opaqueData;		\/\/ opaque data.$/;"	m	struct:CdSuNhUdpUiDataReqParam
opaqueData	src/udpnh/cdsunhudpapiparam.h	/^	Uint32 opaqueData;		\/\/ opaque data.$/;"	m	struct:CdSuNhUdpUiSendReqParam
opaqueData	src/udpnh/cdsunhudpapiparam.h	/^	Uint32 opaqueData;		\/\/ opaque data.$/;"	m	struct:CdSuNhUdpUiSendRspEvent
opcode	include/cdsusanitymsgs.h	/^	Uint16		opcode;$/;"	m	struct:CdMessageHeader
opcode	include/cdsusanitymsgs.h	/^	Uint32 opcode;					\/\/ actual timer sub opcode$/;"	m	struct:SanityTimeoutMsg
opcode	include/cdsutimer.h	/^	Uint16 opcode;			$/;"	m	struct:CdSuTnode
opcode	include/cdsutimer.h	/^	Uint16 opcode;$/;"	m	struct:CdSuTimeout
opcode	include/cdsutimer.h	/^	Uint16 opcode;$/;"	m	struct:CdSuTimerInfo
opcode	include/cdsuutiltypes-c.h	/^        Uint16          opcode;			\/\/ opcode$/;"	m	struct:CdMessageHdr
opcode	include/cdsuutiltypes.h	/^        Uint16          opcode;			\/\/ opcode$/;"	m	struct:CdMessageHdr
opcode	src/tcpnh/cdsunhtcpapiparam.h	/^	CdSuNhTcpOpcode opcode;$/;"	m	struct:CdSuNhTcpMiEvent
opcode	src/tcpnh/cdsunhtcpapiparam.h	/^	CdSuNhTcpOpcode opcode;$/;"	m	struct:CdSuNhTcpUiConnEvent
opcode	src/tcpnh/cdsunhtcpapiparam.h	/^	CdSuNhTcpOpcode opcode;$/;"	m	struct:CdSuNhTcpUiLstnEvent
opcode	src/udpnh/cdsunhudpapiparam.h	/^	CdSuNhUdpOpcode opcode;		\/\/ Indicates type of Event. $/;"	m	struct:CdSuNhUdpUiEvent
opcode	src/udpnh/cdsunhudpapiparam.h	/^	CdSuNhUdpOpcode opcode;		\/\/ Opcode indicates type of event.$/;"	m	struct:CdSuNhUdpMiEvent
oper	docs/reqs/srs/nhudp/index.html	/^<h3><a name="oper"><\/a>2.1.8 Operations<\/a><\/h3>$/;"	a
operator !=	include/cdsucharhash.h	/^bool CdSuCharHash<ValType>::iterator::operator!= (const iterator& iter) const$/;"	f	class:CdSuCharHash::iterator
operator !=	include/cdsuinthash.h	/^bool CdSuIntHash<ValType>::iterator::operator!= (const iterator& iter) const$/;"	f	class:CdSuIntHash::iterator
operator !=	include/cdsulist.h	/^bool CdSuList<ValType>::iterator::operator!= (const iterator& iter) const$/;"	f	class:CdSuList::iterator
operator !=	include/cdsumbhash.h	/^bool CdSuMultiByteHash<ValType>::iterator::operator!= (const iterator& iter) const$/;"	f	class:CdSuMultiByteHash::iterator
operator !=	include/cdsuqueue.h	/^bool CdSuQueue<KeyType>::iterator::operator!= (const iterator& iter) const$/;"	f	class:CdSuQueue::iterator
operator !=	include/cdsutsqueue.h	/^bool CdSuTsQueue<KeyType>::iterator::operator!= (const CdSuTsQueue<KeyType>::iterator& iter) const$/;"	f	class:CdSuTsQueue::iterator
operator !=	include/cdsuutiltypes.h	/^	bool operator != (const CdHardwareUnitId& hid)$/;"	f	struct:CdHardwareUnitId
operator !=	include/cdsuutiltypes.h	/^	bool operator!= (const CdModuleId& mid)$/;"	f	struct:CdModuleId
operator !=	include/cdsuutiltypes.h	/^	bool operator!= (const CdServiceHandlerId& sid)$/;"	f	struct:CdServiceHandlerId
operator *	include/cdsucharhash.h	/^ValType& CdSuCharHash<ValType>::iterator::operator* ()$/;"	f	class:CdSuCharHash::iterator
operator *	include/cdsucharhash.h	/^const ValType& CdSuCharHash<ValType>::iterator::operator* () const$/;"	f	class:CdSuCharHash::iterator
operator *	include/cdsuinthash.h	/^ValType& CdSuIntHash<ValType>::iterator::operator* ()$/;"	f	class:CdSuIntHash::iterator
operator *	include/cdsuinthash.h	/^const ValType& CdSuIntHash<ValType>::iterator::operator* () const$/;"	f	class:CdSuIntHash::iterator
operator *	include/cdsulist.h	/^ValType& CdSuList<ValType>::iterator::operator* ()$/;"	f	class:CdSuList::iterator
operator *	include/cdsulist.h	/^const ValType& CdSuList<ValType>::iterator::operator* () const$/;"	f	class:CdSuList::iterator
operator *	include/cdsumbhash.h	/^ValType& CdSuMultiByteHash<ValType>::iterator::operator* ()$/;"	f	class:CdSuMultiByteHash::iterator
operator *	include/cdsumbhash.h	/^const ValType& CdSuMultiByteHash<ValType>::iterator::operator* () const$/;"	f	class:CdSuMultiByteHash::iterator
operator *	include/cdsuqueue.h	/^KeyType& CdSuQueue<KeyType>::iterator::operator* ()$/;"	f	class:CdSuQueue::iterator
operator *	include/cdsuqueue.h	/^const KeyType& CdSuQueue<KeyType>::iterator::operator* () const$/;"	f	class:CdSuQueue::iterator
operator *	include/cdsutsqueue.h	/^KeyType& CdSuTsQueue<KeyType>::iterator::operator* ()$/;"	f	class:CdSuTsQueue::iterator
operator *	include/cdsutsqueue.h	/^const KeyType& CdSuTsQueue<KeyType>::iterator::operator* () const$/;"	f	class:CdSuTsQueue::iterator
operator ++	include/cdsucharhash.h	/^typename CdSuCharHash<ValType>::iterator CdSuCharHash<ValType>::iterator::operator++ (int)$/;"	f	class:CdSuCharHash::iterator
operator ++	include/cdsucharhash.h	/^typename CdSuCharHash<ValType>::iterator& CdSuCharHash<ValType>::iterator::operator++ ()$/;"	f	class:CdSuCharHash::iterator
operator ++	include/cdsuinthash.h	/^typename CdSuIntHash<ValType>::iterator CdSuIntHash<ValType>::iterator::operator++ (int)$/;"	f	class:CdSuIntHash::iterator
operator ++	include/cdsuinthash.h	/^typename CdSuIntHash<ValType>::iterator& CdSuIntHash<ValType>::iterator::operator++ ()$/;"	f	class:CdSuIntHash::iterator
operator ++	include/cdsulist.h	/^typename CdSuList<ValType>::iterator CdSuList<ValType>::iterator::operator++ (int)$/;"	f	class:CdSuList::iterator
operator ++	include/cdsulist.h	/^typename CdSuList<ValType>::iterator& CdSuList<ValType>::iterator::operator++ ()$/;"	f	class:CdSuList::iterator
operator ++	include/cdsumbhash.h	/^typename CdSuMultiByteHash<ValType>::iterator CdSuMultiByteHash<ValType>::iterator::operator++ (int)$/;"	f	class:CdSuMultiByteHash::iterator
operator ++	include/cdsumbhash.h	/^typename CdSuMultiByteHash<ValType>::iterator& CdSuMultiByteHash<ValType>::iterator::operator++ ()$/;"	f	class:CdSuMultiByteHash::iterator
operator ++	include/cdsuqueue.h	/^typename CdSuQueue<KeyType>::iterator CdSuQueue<KeyType>::iterator::operator++ (int)$/;"	f	class:CdSuQueue::iterator
operator ++	include/cdsuqueue.h	/^typename CdSuQueue<KeyType>::iterator& CdSuQueue<KeyType>::iterator::operator++ ()$/;"	f	class:CdSuQueue::iterator
operator ++	include/cdsutsqueue.h	/^typename CdSuTsQueue<KeyType>::iterator CdSuTsQueue<KeyType>::iterator::operator++ (int)$/;"	f	class:CdSuTsQueue::iterator
operator ++	include/cdsutsqueue.h	/^typename CdSuTsQueue<KeyType>::iterator& CdSuTsQueue<KeyType>::iterator::operator++ ()$/;"	f	class:CdSuTsQueue::iterator
operator =	include/cdsuutiltypes.h	/^	void operator= (const CdHardwareUnitId& hid)$/;"	f	struct:CdHardwareUnitId
operator =	include/cdsuutiltypes.h	/^	void operator= (const CdModuleId& mid)$/;"	f	struct:CdModuleId
operator =	include/cdsuutiltypes.h	/^	void operator= (const CdServiceHandlerId& sid)$/;"	f	struct:CdServiceHandlerId
operator =	src/tcpnh/cdsunhtcpapiparam.cpp	/^void CdSuNhTcpConnKey::operator = $/;"	f	class:CdSuNhTcpConnKey
operator =	src/tcpnh/cdsunhtcpapiparam.cpp	/^void CdSuNhTcpLstnKey::operator = $/;"	f	class:CdSuNhTcpLstnKey
operator =	src/tcpnh/cdsunhtcpapiparam.cpp	/^void CdSuNhTcpMiCfgReqParam::operator = (const CdSuNhTcpMiCfgReqParam& cfgReqParam)$/;"	f	class:CdSuNhTcpMiCfgReqParam
operator =	src/tcpnh/cdsunhtcpapiparam.cpp	/^void CdSuNhTcpMiCfgRspEvent::operator = $/;"	f	class:CdSuNhTcpMiCfgRspEvent
operator =	src/tcpnh/cdsunhtcpapiparam.cpp	/^void CdSuNhTcpMiCtrlReqParam::operator = (const CdSuNhTcpMiCtrlReqParam& ctrlReqParam)$/;"	f	class:CdSuNhTcpMiCtrlReqParam
operator =	src/tcpnh/cdsunhtcpapiparam.cpp	/^void CdSuNhTcpMiCtrlRspEvent::operator = $/;"	f	class:CdSuNhTcpMiCtrlRspEvent
operator =	src/tcpnh/cdsunhtcpapiparam.cpp	/^void CdSuNhTcpMiDelNhParam::operator = (const CdSuNhTcpMiDelNhParam& delNhParam)$/;"	f	class:CdSuNhTcpMiDelNhParam
operator =	src/tcpnh/cdsunhtcpapiparam.cpp	/^void CdSuNhTcpMiDelNhRspEvent::operator = $/;"	f	class:CdSuNhTcpMiDelNhRspEvent
operator =	src/tcpnh/cdsunhtcpapiparam.cpp	/^void CdSuNhTcpMiInitParam::operator = (const CdSuNhTcpMiInitParam& initParam)$/;"	f	class:CdSuNhTcpMiInitParam
operator =	src/tcpnh/cdsunhtcpapiparam.cpp	/^void CdSuNhTcpMiInitRspEvent::operator = $/;"	f	class:CdSuNhTcpMiInitRspEvent
operator =	src/tcpnh/cdsunhtcpapiparam.cpp	/^void CdSuNhTcpMiStatusReqParam::operator = (const CdSuNhTcpMiStatusReqParam& statusReqParam)$/;"	f	class:CdSuNhTcpMiStatusReqParam
operator =	src/tcpnh/cdsunhtcpapiparam.cpp	/^void CdSuNhTcpMiStatusRspEvent::operator = $/;"	f	class:CdSuNhTcpMiStatusRspEvent
operator =	src/tcpnh/cdsunhtcpapiparam.cpp	/^void CdSuNhTcpMiStsReqParam::operator = (const CdSuNhTcpMiStsReqParam& stsReqParam)$/;"	f	class:CdSuNhTcpMiStsReqParam
operator =	src/tcpnh/cdsunhtcpapiparam.cpp	/^void CdSuNhTcpMiStsRspEvent::operator = $/;"	f	class:CdSuNhTcpMiStsRspEvent
operator =	src/tcpnh/cdsunhtcpapiparam.cpp	/^void CdSuNhTcpMiTerminateParam::operator = (const CdSuNhTcpMiTerminateParam& delNhParam)$/;"	f	class:CdSuNhTcpMiTerminateParam
operator =	src/tcpnh/cdsunhtcpapiparam.cpp	/^void CdSuNhTcpMiUStaIndEvent::operator = $/;"	f	class:CdSuNhTcpMiUStaIndEvent
operator =	src/tcpnh/cdsunhtcpapiparam.cpp	/^void CdSuNhTcpUiAddLstnReqParam::operator = $/;"	f	class:CdSuNhTcpUiAddLstnReqParam
operator =	src/tcpnh/cdsunhtcpapiparam.cpp	/^void CdSuNhTcpUiAddLstnRspEvent::operator = $/;"	f	class:CdSuNhTcpUiAddLstnRspEvent
operator =	src/tcpnh/cdsunhtcpapiparam.cpp	/^void CdSuNhTcpUiCloseConIndEvent::operator = $/;"	f	class:CdSuNhTcpUiCloseConIndEvent
operator =	src/tcpnh/cdsunhtcpapiparam.cpp	/^void CdSuNhTcpUiCloseConReqParam::operator = $/;"	f	class:CdSuNhTcpUiCloseConReqParam
operator =	src/tcpnh/cdsunhtcpapiparam.cpp	/^void CdSuNhTcpUiCloseConRspEvent::operator = $/;"	f	class:CdSuNhTcpUiCloseConRspEvent
operator =	src/tcpnh/cdsunhtcpapiparam.cpp	/^void CdSuNhTcpUiConIndEvent::operator = $/;"	f	class:CdSuNhTcpUiConIndEvent
operator =	src/tcpnh/cdsunhtcpapiparam.cpp	/^void CdSuNhTcpUiConReqParam::operator = $/;"	f	class:CdSuNhTcpUiConReqParam
operator =	src/tcpnh/cdsunhtcpapiparam.cpp	/^void CdSuNhTcpUiConRspEvent::operator = $/;"	f	class:CdSuNhTcpUiConRspEvent
operator =	src/tcpnh/cdsunhtcpapiparam.cpp	/^void CdSuNhTcpUiDataIndEvent::operator = $/;"	f	class:CdSuNhTcpUiDataIndEvent
operator =	src/tcpnh/cdsunhtcpapiparam.cpp	/^void CdSuNhTcpUiDataReqParam::operator = $/;"	f	class:CdSuNhTcpUiDataReqParam
operator =	src/tcpnh/cdsunhtcpapiparam.cpp	/^void CdSuNhTcpUiDataRspEvent::operator = $/;"	f	class:CdSuNhTcpUiDataRspEvent
operator =	src/tcpnh/cdsunhtcpapiparam.cpp	/^void CdSuNhTcpUiRemLstnReqParam::operator = $/;"	f	class:CdSuNhTcpUiRemLstnReqParam
operator =	src/tcpnh/cdsunhtcpapiparam.cpp	/^void CdSuNhTcpUiRemLstnRspEvent::operator = $/;"	f	class:CdSuNhTcpUiRemLstnRspEvent
operator =	src/udpnh/cdsunhudpapiparam.cpp	/^void CdSuNhUdpUiDataReqParam::operator = (const CdSuNhUdpUiDataReqParam& p)$/;"	f	class:CdSuNhUdpUiDataReqParam
operator =	src/udpnh/cdsunhudpapiparam.cpp	/^void CdSuNhUdpUiSendReqParam::operator = (const CdSuNhUdpUiSendReqParam& p)$/;"	f	class:CdSuNhUdpUiSendReqParam
operator =	test/mbhash-test.cpp	/^	void operator = (const TestCallHlrId chId)$/;"	f	struct:TestCallHlrId
operator ==	include/cdsucharhash.h	/^bool CdSuCharHash<ValType>::iterator::operator== (const iterator& iter) const$/;"	f	class:CdSuCharHash::iterator
operator ==	include/cdsuinthash.h	/^bool CdSuIntHash<ValType>::iterator::operator== (const iterator& iter) const$/;"	f	class:CdSuIntHash::iterator
operator ==	include/cdsulist.h	/^bool CdSuList<ValType>::iterator::operator== (const iterator& iter) const$/;"	f	class:CdSuList::iterator
operator ==	include/cdsumbhash.h	/^bool CdSuMultiByteHash<ValType>::iterator::operator== (const iterator& iter) const$/;"	f	class:CdSuMultiByteHash::iterator
operator ==	include/cdsuqueue.h	/^bool CdSuQueue<KeyType>::iterator::operator== (const iterator& iter) const$/;"	f	class:CdSuQueue::iterator
operator ==	include/cdsutsqueue.h	/^bool CdSuTsQueue<KeyType>::iterator::operator== (const CdSuTsQueue<KeyType>::iterator& iter) const$/;"	f	class:CdSuTsQueue::iterator
operator ==	include/cdsuutiltypes.h	/^	bool operator== (const CdHardwareUnitId& hid)$/;"	f	struct:CdHardwareUnitId
operator ==	include/cdsuutiltypes.h	/^	bool operator== (const CdModuleId& mid)$/;"	f	struct:CdModuleId
operator ==	include/cdsuutiltypes.h	/^	bool operator== (const CdServiceHandlerId& sid)$/;"	f	struct:CdServiceHandlerId
operator new	test/tcpnh/basictest/timerdef.cpp	/^inline void *operator new (size_t size,  cyg_uint8 *ptr) { return (void *)ptr; };$/;"	f
operator new	test/tcpnh/featuretest/timerdef.cpp	/^inline void *operator new (size_t size,  cyg_uint8 *ptr) { return (void *)ptr; };$/;"	f
operator new	test/timer/sup-test.cpp	/^inline void *operator new(size_t size,  cyg_uint8 *ptr) { return (void *)ptr; };$/;"	f
operator new	test/udpnh/basic-test/timerdef.cpp	/^inline void *operator new (size_t size,  cyg_uint8 *ptr) { return (void *)ptr; };$/;"	f
operator new	test/udpnh/load-testing/timerdef.cpp	/^inline void *operator new (size_t size,  cyg_uint8 *ptr) { return (void *)ptr; };$/;"	f
other	docs/reqs/srs/nhudp/index.html	/^<h3><a name="other">3.7 Other Requirments<\/a><h3>$/;"	a
outOfSeqMsgHlr	src/tcpnh/cdsunhtcp.cpp	/^void CdSuNhTcp::outOfSeqMsgHlr (CdMessage* msg)$/;"	f	class:CdSuNhTcp
outOfSeqMsgHlr	src/udpnh/cdsunhudp.cpp	/^void CdSuNhUdp::outOfSeqMsgHlr (CdMessage* msg)$/;"	f	class:CdSuNhUdp
ovsig	docs/reqs/srs/nhtcp/index.html	/^<h3><a name="ovsig">2.1.2 Overview of Network Handler<\/a><\/h3>$/;"	a
pE1Framer	test/udpnh/basic-test/tdmIf.h	/^	HL_E1Interface *pE1Framer;$/;"	m	class:TdmInterface
pE1Framer	test/udpnh/load-testing/tdmIf.h	/^	HL_E1Interface *pE1Framer;$/;"	m	class:TdmInterface
pTsu	test/udpnh/basic-test/tdmIf.h	/^	HL_Tsu *pTsu;$/;"	m	class:TdmInterface
pTsu	test/udpnh/load-testing/tdmIf.h	/^	HL_Tsu *pTsu;$/;"	m	class:TdmInterface
pad16	include/cdsusanitymsgs.h	/^	Uint16 pad16;$/;"	m	struct:SanityFailureMsg
pad8	include/cdsusanitymsgs.h	/^	Uint8  pad8;$/;"	m	struct:SanityFailureMsg
pad8	include/cdsuutiltypes.h	/^                        Uint8   pad8;$/;"	m	struct:CdServiceHandlerId::__anon20::__anon22
pap	docs/design/mdd/nhtcp/index.html	/^<a name="pap"><\/a>$/;"	a
pap	docs/design/mdd/nhudp/index.html	/^<a name="pap"><\/a>$/;"	a
pcfnhtcp	docs/design/mdd/nhtcp/index.html	/^<A NAME="pcfnhtcp"><\/A>$/;"	a
pcfnhudp	docs/design/mdd/nhudp/index.html	/^<A NAME="pcfnhudp"><\/A>$/;"	a
pcfnhudpinst	docs/design/mdd/nhudp/index.html	/^<A NAME="pcfnhudpinst"><\/A>$/;"	a
per-req	docs/reqs/srs/nhtcp/index.html	/^<h3><a name="per-req">3.3 Performance Requirements<\/a><\/h3>$/;"	a
per-req	docs/reqs/srs/nhudp/index.html	/^<h3><a name="per-req">3.3 Performance Requirements<\/a><\/h3>$/;"	a
plfModuleId	include/cdsuutiltypes.h	/^                        Uint16  plfModuleId;$/;"	m	struct:CdServiceHandlerId::__anon20::__anon22
plfSrvcHlrId	include/cdsuutiltypes.h	/^                } __attribute__ ((packed)) plfSrvcHlrId;$/;"	m	union:CdServiceHandlerId::__anon20	typeref:struct:CdServiceHandlerId::__anon20::__anon22
pop	include/cdsuqueue.h	/^bool CdSuQueue<KeyType>::pop (KeyType& value)$/;"	f	class:CdSuQueue
popBlocking	include/cdsutsqueue.h	/^bool CdSuTsQueue<KeyType>::popBlocking (KeyType& item)$/;"	f	class:CdSuTsQueue
popEmptyQueueTest	test/queue-test.cpp	/^bool popEmptyQueueTest ()$/;"	f
popEmptyQueueTest	test/tsqueue-test.cpp	/^bool popEmptyQueueTest ()$/;"	f
popNonBlocking	include/cdsutsqueue.h	/^bool CdSuTsQueue<KeyType>::popNonBlocking (KeyType& item)$/;"	f	class:CdSuTsQueue
pop_back	include/cdsulist.h	/^void CdSuList<ValType>::pop_back ()$/;"	f	class:CdSuList
pop_front	include/cdsulist.h	/^void CdSuList<ValType>::pop_front ()$/;"	f	class:CdSuList
portId2Index	test/udpnh/load-testing/parameter.h	/^int portId2Index [ 50000 ];$/;"	v
portKey	test/udpnh/testing-mul-nh-support/tester.cpp	/^CdSuNhUdpPortKey portKey [ 4 ];$/;"	v
portKey	test/udpnh/testing-mul-nh-usr-support/tester.cpp	/^CdSuNhUdpPortKey portKey [ 4 ];$/;"	v
portKey	test/udpnh/testing-mul-user-support/tester.cpp	/^CdSuNhUdpPortKey portKey [ 4 ];$/;"	v
portNo	include/cdsumdapi.h	/^	Uint16 portNo;$/;"	m	struct:CdSuMdUdpPortInfo
portNo	src/misc/netPrintServer.cpp	/^	unsigned short portNo;$/;"	m	class:NetPrintServer	file:
portNo	src/msgdistr/cdsunhudpdb.h	/^	Uint16 portNo;$/;"	m	class:CdSuNwhlrDb
portNo	src/msgdistr/cdsunhudpglobals.h	/^	Uint16 portNo;$/;"	m	struct:CdSuMdUdpNhInitParam
portNo	src/msgdistr/cdsunhudpglobals.h	/^	Uint16 portNo;$/;"	m	struct:CdSuMdUdpNhTxBufMsg
previous	include/cdsutimer.h	/^        CdSuTnode* previous ;	\/\/ Pointer to previous request.  NULL if none.$/;"	m	struct:CdSuTnode
print	include/cdsucharhash.h	/^void CdSuCharHash<ValType>::print ()$/;"	f	class:CdSuCharHash
print	include/cdsuinthash.h	/^void CdSuIntHash<ValType>::print ()$/;"	f	class:CdSuIntHash
print	include/cdsumbhash.h	/^void CdSuMultiByteHash<ValType>::print ()$/;"	f	class:CdSuMultiByteHash
print	src/misc/cdsusanity.cpp	/^void SanityModule::print ()$/;"	f	class:SanityModule
print	src/misc/cdsutrace.cpp	/^void CdSuTrace::print (const char* fname, const unsigned lineno, unsigned level, char* fmt, ...)$/;"	f	class:CdSuTrace
printList	test/list-test.cpp	/^void printList (CdSuList<int> l)$/;"	f
printMenu	test/timer/test-funcclient.cpp	/^void printMenu ()$/;"	f
printMenu	test/timer/timerFuncTest.cpp	/^void printMenu ()$/;"	f
printQueueElements	test/queue-test.cpp	/^bool printQueueElements ()$/;"	f
printQueueElements	test/tsqueue-test.cpp	/^bool printQueueElements ()$/;"	f
printStats	test/tcpnh/basictest/testfunctions.cpp	/^void printStats ()$/;"	f
printStats	test/udpnh/load-testing/testfunctions.cpp	/^void printStats ()$/;"	f
printf	test/timer/cdsu_counter.h	29;"	d
printf	test/timer/sup-test.cpp	29;"	d	file:
printf	test/timer/timerBasic.cpp	62;"	d	file:
printf	test/timer/timerCascade.cpp	58;"	d	file:
procId	include/cdsuutiltypes-c.h	/^        Uint8   procId;$/;"	m	struct:CdHardwareUnitId
procId	include/cdsuutiltypes.h	/^        Uint8   procId;$/;"	m	struct:CdHardwareUnitId
prod-func	docs/reqs/srs/nhtcp/index.html	/^<a name="prod-func"><h3>2.2 Module Functions<\/h3><\/a>$/;"	a
prod-func	docs/reqs/srs/nhudp/index.html	/^<a name="prod-func"><h3>2.2 Module Functions<\/h3><\/a>$/;"	a
prod-pers	docs/reqs/srs/nhtcp/index.html	/^<a name="prod-pers"><h3>2.1 Module Perspective<\/h3><\/a>$/;"	a
prod-pers	docs/reqs/srs/nhudp/index.html	/^<a name="prod-pers"><h3>2.1 Module Perspective<\/h3><\/a>$/;"	a
programTimeSwitch	test/udpnh/basic-test/tdmIf.cpp	/^void TdmInterface::programTimeSwitch (TdmIntfType type)$/;"	f	class:TdmInterface
programTimeSwitch	test/udpnh/load-testing/tdmIf.cpp	/^void TdmInterface::programTimeSwitch (TdmIntfType type)$/;"	f	class:TdmInterface
push_back	include/cdsulist.h	/^void CdSuList<ValType>::push_back (const ValType& data)$/;"	f	class:CdSuList
push_front	include/cdsulist.h	/^void CdSuList<ValType>::push_front (const ValType& data)$/;"	f	class:CdSuList
qMutex	include/cdsutsqueue.h	/^	pthread_mutex_t qMutex;$/;"	m	class:CdSuTsQueue
qSem	include/cdsutsqueue.h	/^	sem_t qSem;$/;"	m	class:CdSuTsQueue
queue	test/timer/timerListTest.cpp	/^CdSuQueue <CdSuTimerMsg*>* queue ;$/;"	v
queue1	test/timer/timerBasic.cpp	/^Queue<CdSuTimerMsg* > *queue1 ;$/;"	v
queue1	test/timer/timerCascade.cpp	/^CdSuQueue <CdSuTimerMsg*>* queue1; $/;"	v
queue1	test/timer/timerPerfStartTest.cpp	/^Queue<CdSuTimerMsg* > *queue1 ;$/;"	v
queue1	test/timer/timerPerfStopTest.cpp	/^Queue<CdSuTimerMsg* > *queue1 ;$/;"	v
queue2	test/timer/timerPerfStartTest.cpp	/^Queue<CdSuTimerMsg* > *queue2 ;$/;"	v
queue2	test/timer/timerPerfStopTest.cpp	/^Queue<CdSuTimerMsg* > *queue2 ;$/;"	v
queue3	test/timer/timerPerfStartTest.cpp	/^Queue<CdSuTimerMsg* > *queue3 ;$/;"	v
queue3	test/timer/timerPerfStopTest.cpp	/^Queue<CdSuTimerMsg* > *queue3 ;$/;"	v
rLink	include/cdsulist.h	/^		ListElement* rLink; 	\/\/ right link$/;"	m	struct:CdSuList::ListElement
rPortOfBothFixed	test/udpnh/testing-mul-nh-support/tester.cpp	/^int rPortOfBothFixed = 7500;$/;"	v
rPortOfBothFixed	test/udpnh/testing-mul-nh-usr-support/tester.cpp	/^int rPortOfBothFixed = 7500;$/;"	v
rPortOfLocalFixed	test/udpnh/testing-mul-nh-support/tester.cpp	/^int rPortOfLocalFixed = 9000;$/;"	v
rPortOfLocalFixed	test/udpnh/testing-mul-nh-usr-support/tester.cpp	/^int rPortOfLocalFixed = 9000;$/;"	v
rackId	include/cdsuutiltypes-c.h	/^        Uint8   rackId;$/;"	m	struct:CdHardwareUnitId
rackId	include/cdsuutiltypes.h	/^        Uint8   rackId;$/;"	m	struct:CdHardwareUnitId
rcvdData	test/udpnh/basic-test/parameter.h	/^char* rcvdData = NULL;$/;"	v
reactor	src/tcpnh/cdsunhtcp.cpp	/^bool CdSuNhTcp::reactor ()$/;"	f	class:CdSuNhTcp
reactor	src/udpnh/cdsunhudp.cpp	/^bool CdSuNhUdp::reactor ()$/;"	f	class:CdSuNhUdp
readCounter	test/timer/cdsu_counter.h	/^Uint32 CdSuCounter::readCounter()$/;"	f	class:CdSuCounter
readCounter	test/timer/hl_timer.h	/^Uint16 HL_Timer::readCounter()$/;"	f	class:HL_Timer
readCounter	test/timer/timerBasic.cpp	/^Uint16 HL_Timer::readCounter()$/;"	f	class:HL_Timer
readNoOfBytes	src/tcpnh/cdsunhtcp.cpp	/^int CdSuNhTcp::readNoOfBytes (int fd, char* vptr, int noOfBytes)$/;"	f	class:CdSuNhTcp
readNoOfBytes	src/udpnh/cdsunhudp.cpp	/^int CdSuNhUdp::readNoOfBytes (CdSuNhUdpPortInfo* udpPortInfo, char* vptr, int noOfBytes)$/;"	f	class:CdSuNhUdp
readNoOfBytes	src/udpnh/cdsunhudp.cpp	/^int CdSuNhUdp::readNoOfBytes (CdSuNhUdpPortInfo* udpPortInfo, char* vptr,$/;"	f	class:CdSuNhUdp
rearNode	include/cdsuqueue.h	/^	Node* rearNode;$/;"	m	class:CdSuQueue
rearNode	include/cdsutsqueue.h	/^	Node  *rearNode;$/;"	m	class:CdSuTsQueue
rearNodePriority	include/cdsutsqueue.h	/^	Node  *rearNodePriority;$/;"	m	class:CdSuTsQueue
recFromQueue	test/timer/timerListTest.cpp	/^void* recFromQueue(void*)$/;"	f
recordedTime	test/udpnh/load-testing/parameter.h	/^time_t recordedTime;$/;"	v
recvBuffer	src/udpnh/cdsunhudp.h	/^	char* recvBuffer;			\/\/ Pointer to Receive Buffer$/;"	m	class:CdSuNhUdp
recvMsg	src/msgdistr/cdsumd.cpp	/^bool CdSuMsgDistributor::recvMsg (CdMessage** msg, const CdModuleId& modId)$/;"	f	class:CdSuMsgDistributor
recvMsg	src/msgdistr/cdsunhudptxptsrvc.cpp	/^bool CdSuUdpTxptServices::recvMsg (char* buf, int& length, Uint32& ipAddr, $/;"	f	class:CdSuUdpTxptServices
recvMsgNonBlock	src/msgdistr/cdsumd.cpp	/^bool CdSuMsgDistributor::recvMsgNonBlock (CdMessage** msg, const CdModuleId& modId)$/;"	f	class:CdSuMsgDistributor
recvPacket	src/tcpnh/cdsunhtcp.cpp	/^int CdSuNhTcp::recvPacket (CdSuNhTcpConnInfo* info, $/;"	f	class:CdSuNhTcp
registerMid	src/msgdistr/cdsumd.cpp	/^bool CdSuMsgDistributor::registerMid (const CdModuleId& mid)$/;"	f	class:CdSuMsgDistributor
registerMid	src/msgdistr/cdsumd.cpp	/^bool CdSuMsgDistributor::registerMid (const CdModuleId& mid, $/;"	f	class:CdSuMsgDistributor
remListener	src/tcpnh/cdsunhtcp.cpp	/^bool CdSuNhTcp::remListener (const CdSuNhTcpUiRemLstnReqParam rmlstnparam)$/;"	f	class:CdSuNhTcp
remListener	test/tcpnh/basictest/testfunctions.cpp	/^void remListener ()$/;"	f
remListener	test/tcpnh/featuretest/testfunctions.cpp	/^bool remListener (bool flag)$/;"	f
remListnInValid	test/tcpnh/featuretest/testfunctions.cpp	/^void remListnInValid ()$/;"	f
remListnValid	test/tcpnh/featuretest/testfunctions.cpp	/^void remListnValid ()$/;"	f
remLstnMsgHlr	src/tcpnh/cdsunhtcp.cpp	/^void CdSuNhTcp::remLstnMsgHlr (CdMessage* msg)$/;"	f	class:CdSuNhTcp
remLstnReqParam	src/tcpnh/cdsunhtcpmsg.h	/^	CdSuNhTcpUiRemLstnReqParam remLstnReqParam;$/;"	m	struct:CdSuNhTcpUiRemLstnReqMsg
remLstnRspEvent	src/tcpnh/cdsunhtcpmsg.h	/^	CdSuNhTcpUiRemLstnRspEvent remLstnRspEvent;$/;"	m	struct:CdSuNhTcpUiRemLstnRspMsg
remUdpPort	src/udpnh/cdsunhudp.cpp	/^CdSuNhUdpRspFailCode CdSuNhUdp::remUdpPort (const CdSuNhUdpPortId& udpPortId)$/;"	f	class:CdSuNhUdp
remUdpPort	test/udpnh/basic-test/testfunctions.cpp	/^void remUdpPort ()$/;"	f
remUdpPortReqMsgHlr	src/udpnh/cdsunhudp.cpp	/^void CdSuNhUdp::remUdpPortReqMsgHlr (CdMessage* msg)$/;"	f	class:CdSuNhUdp
remUdpPortReqParam	src/udpnh/cdsunhudpmsg.h	/^	CdSuNhUdpUiRemUdpPortReqParam remUdpPortReqParam;	\/\/ Remove Udp Port Param.$/;"	m	struct:CdSuNhUdpUiRemUdpPortReqMsg
remUdpPortReqParam	test/udpnh/basic-test/parameter.h	/^CdSuNhUdpUiRemUdpPortReqParam remUdpPortReqParam;$/;"	v
remUdpPortReqParam	test/udpnh/load-testing/parameter.h	/^CdSuNhUdpUiRemUdpPortReqParam remUdpPortReqParam;$/;"	v
remUdpPortRspEvent	src/udpnh/cdsunhudpmsg.h	/^	CdSuNhUdpUiRemUdpPortRspEvent remUdpPortRspEvent;	\/\/ Remove Udp Port Response Event Param.$/;"	m	struct:CdSuNhUdpUiRemUdpPortRspMsg
remoteIpAddr	test/tcpnh/basictest/parameter.h	/^char remoteIpAddr [4] = {192, 168, 16, 72 };$/;"	v
remoteIpAddr	test/tcpnh/basictest/parameter.h	/^char remoteIpAddr [4] = {192, 168, 50, 176 };$/;"	v
remoteIpAddr	test/tcpnh/featuretest/parameter.h	/^char remoteIpAddr [4] = {192, 168, 16, 25 };$/;"	v
remoteIpAddr	test/udpnh/basic-test/parameter.h	/^char remoteIpAddr [4] = {192, 168, 16, 72};$/;"	v
remoteIpAddr	test/udpnh/load-testing/parameter.h	/^char remoteIpAddr [4] = {192, 168, 51, 215 };$/;"	v
remoteIpAddr	test/udpnh/testing-mul-nh-support/tester.cpp	/^char remoteIpAddr [4] = {192, 168, 16, 25 };$/;"	v
remoteIpAddr	test/udpnh/testing-mul-nh-usr-support/tester.cpp	/^char remoteIpAddr [4] = {192, 168, 16, 25 };$/;"	v
remoteIpAddr	test/udpnh/testing-mul-user-support/tester.cpp	/^char remoteIpAddr [4] = {192, 168, 16, 25 };$/;"	v
remotePortOfBothFixed	test/udpnh/testing-mul-nh-support/tester.cpp	/^int remotePortOfBothFixed = lPortOfBothFixed;$/;"	v
remotePortOfBothFixed	test/udpnh/testing-mul-nh-support/tester.cpp	/^int remotePortOfBothFixed = rPortOfBothFixed;$/;"	v
remotePortOfBothFixed	test/udpnh/testing-mul-nh-usr-support/tester.cpp	/^int remotePortOfBothFixed = lPortOfBothFixed;$/;"	v
remotePortOfBothFixed	test/udpnh/testing-mul-nh-usr-support/tester.cpp	/^int remotePortOfBothFixed = rPortOfBothFixed;$/;"	v
remotePortOfBothFixed	test/udpnh/testing-mul-user-support/tester.cpp	/^int remotePortOfBothFixed = DESTPORTOFBOTHFIXED;$/;"	v
remotePortOfBothFixed	test/udpnh/testing-mul-user-support/tester.cpp	/^int remotePortOfBothFixed = LOCALPORTOFBOTHFIXED;$/;"	v
remotePortOfLocalFixed	test/udpnh/testing-mul-nh-support/tester.cpp	/^int remotePortOfLocalFixed = lPortOfLocalFixed;$/;"	v
remotePortOfLocalFixed	test/udpnh/testing-mul-nh-support/tester.cpp	/^int remotePortOfLocalFixed = rPortOfLocalFixed;$/;"	v
remotePortOfLocalFixed	test/udpnh/testing-mul-nh-usr-support/tester.cpp	/^int remotePortOfLocalFixed = lPortOfLocalFixed;$/;"	v
remotePortOfLocalFixed	test/udpnh/testing-mul-nh-usr-support/tester.cpp	/^int remotePortOfLocalFixed = rPortOfLocalFixed;$/;"	v
remotePortOfLocalFixed	test/udpnh/testing-mul-user-support/tester.cpp	/^int remotePortOfLocalFixed = DESTPORTOFLOCALFIXED;$/;"	v
remotePortOfLocalFixed	test/udpnh/testing-mul-user-support/tester.cpp	/^int remotePortOfLocalFixed = LOCALPORTOFLOCALFIXED;$/;"	v
remoteUdpInfo	include/cdsumdapi.h	/^		CdSuMdUdpPortInfo remoteUdpInfo;$/;"	m	union:CdSuMdIpcpInfo::__anon27
remoteUdpPort	test/udpnh/basic-test/parameter.h	/^CdSuIpv4UdpPortNo remoteUdpPort = 7060;$/;"	v
remove	include/cdsucharhash.h	/^bool CdSuCharHash<ValType>::remove (char* key, int keylen)$/;"	f	class:CdSuCharHash
remove	include/cdsuinthash.h	/^bool CdSuIntHash<ValType>::remove (unsigned int key)$/;"	f	class:CdSuIntHash
remove	include/cdsumbhash.h	/^bool CdSuMultiByteHash<ValType>::remove (void* key)$/;"	f	class:CdSuMultiByteHash
removeNhTcpInst	src/tcpnh/cdsunhtcpinstmgr.cpp	/^bool CdSuNhTcpInstMgr::removeNhTcpInst (const CdSuNhTcpInstId instId)$/;"	f	class:CdSuNhTcpInstMgr
removeNhUdpInst	src/udpnh/cdsunhudpinstmgr.cpp	/^CdSuNhUdpApiRetType CdSuNhUdpInstMgr::removeNhUdpInst (const CdSuNhUdpInstId instId)$/;"	f	class:CdSuNhUdpInstMgr
removeTask	src/misc/cdsutaskscheduler.cpp	/^bool CdSuTaskScheduler::removeTask (CdSuTaskId tid)$/;"	f	class:CdSuTaskScheduler
res-usage	docs/design/mdd/msgdistr/msgdistrmdd.html	/^<a name="res-usage"><\/a>$/;"	a
res-usage	docs/design/mdd/queue/index.html	/^<a name="res-usage"><\/a>$/;"	a
res-usage	docs/design/mdd/taskscheduler/index.html	/^<a name="res-usage"><\/a>$/;"	a
res-usage	docs/design/mdd/tsqueue/index.html	/^<a name="res-usage"><\/a>$/;"	a
reset	src/misc/cdsusanity.cpp	/^void SanityModule::reset (void)$/;"	f	class:SanityModule
reset	src/misc/cdsutaskscheduler.cpp	/^void CdSuTaskScheduler::reset ()$/;"	f	class:CdSuTaskScheduler
resetAllCtrs	src/tcpnh/cdsunhtcpstatspkg.h	/^	void resetAllCtrs ()$/;"	f	class:CdSuNhTcpStatisticsPkg
resetAllCtrs	src/udpnh/cdsunhudpstatspkg.h	/^	void resetAllCtrs ()$/;"	f	class:CdSuNhUdpStatisticsPkg
resetCtr	src/tcpnh/cdsunhtcpstatspkg.h	/^	void resetCtr (CdSuNhTcpCtrType ctrType)$/;"	f	class:CdSuNhTcpStatisticsPkg
resetCtr	src/udpnh/cdsunhudpstatspkg.h	/^	void resetCtr (CdSuNhUdpCtrType ctrType)$/;"	f	class:CdSuNhUdpStatisticsPkg
resetDelay	test/udpnh/load-testing/testfunctions.cpp	/^void resetDelay ()$/;"	f
resetInstIdFlag	test/udpnh/load-testing/testfunctions.cpp	/^void resetInstIdFlag ()$/;"	f
resetPortKeyFlag	test/udpnh/load-testing/testfunctions.cpp	/^void resetPortKeyFlag ()$/;"	f
resetSanityFlag	include/cdsusanity.h	/^	bool resetSanityFlag;$/;"	m	class:SanityModule
resetStats	test/udpnh/load-testing/testfunctions.cpp	/^void resetStats ()$/;"	f
resetTimeSwitch	test/udpnh/basic-test/tdmIf.cpp	/^void TdmInterface::resetTimeSwitch ()$/;"	f	class:TdmInterface
resetTimeSwitch	test/udpnh/load-testing/tdmIf.cpp	/^void TdmInterface::resetTimeSwitch ()$/;"	f	class:TdmInterface
result	test/timer/timerBasic.cpp	/^struct Result result[MAX_TIMERS];$/;"	v	typeref:struct:Result
result	test/timer/timerCascade.cpp	/^struct Result result[MAX_TIMERS];$/;"	v	typeref:struct:Result
rmlstnparam	test/tcpnh/basictest/parameter.h	/^CdSuNhTcpUiRemLstnReqParam rmlstnparam;$/;"	v
rmlstnparam	test/tcpnh/featuretest/parameter.h	/^CdSuNhTcpUiRemLstnReqParam rmlstnparam;$/;"	v
rspCode	src/tcpnh/cdsunhtcpapiparam.h	/^	CdSuNhTcpRspCode rspCode;		\/\/ To indicate whether the resp is success\/fail.$/;"	m	struct:CdSuNhTcpMiCtrlRspEvent
rspCode	src/tcpnh/cdsunhtcpapiparam.h	/^	CdSuNhTcpRspCode rspCode;	$/;"	m	struct:CdSuNhTcpMiStatusRspEvent
rspCode	src/tcpnh/cdsunhtcpapiparam.h	/^	CdSuNhTcpRspCode rspCode;	$/;"	m	struct:CdSuNhTcpMiUStaIndEvent
rspCode	src/tcpnh/cdsunhtcpapiparam.h	/^	CdSuNhTcpRspCode rspCode;$/;"	m	struct:CdSuNhTcpMiCfgRspEvent
rspCode	src/tcpnh/cdsunhtcpapiparam.h	/^	CdSuNhTcpRspCode rspCode;$/;"	m	struct:CdSuNhTcpMiDelNhRspEvent
rspCode	src/tcpnh/cdsunhtcpapiparam.h	/^	CdSuNhTcpRspCode rspCode;$/;"	m	struct:CdSuNhTcpMiInitRspEvent
rspCode	src/tcpnh/cdsunhtcpapiparam.h	/^	CdSuNhTcpRspCode rspCode;$/;"	m	struct:CdSuNhTcpMiStsRspEvent
rspCode	src/tcpnh/cdsunhtcpapiparam.h	/^	CdSuNhTcpRspCode rspCode;$/;"	m	struct:CdSuNhTcpUiAddLstnRspEvent
rspCode	src/tcpnh/cdsunhtcpapiparam.h	/^	CdSuNhTcpRspCode rspCode;$/;"	m	struct:CdSuNhTcpUiCloseConRspEvent
rspCode	src/tcpnh/cdsunhtcpapiparam.h	/^	CdSuNhTcpRspCode rspCode;$/;"	m	struct:CdSuNhTcpUiConRspEvent
rspCode	src/tcpnh/cdsunhtcpapiparam.h	/^	CdSuNhTcpRspCode rspCode;$/;"	m	struct:CdSuNhTcpUiDataRspEvent
rspCode	src/tcpnh/cdsunhtcpapiparam.h	/^	CdSuNhTcpRspCode rspCode;$/;"	m	struct:CdSuNhTcpUiRemLstnRspEvent
rspCode	src/udpnh/cdsunhudpapiparam.h	/^	CdSuNhUdpRspCode rspCode;	\/\/ Indicates Add Udp Port Request Is Fail or Success.$/;"	m	struct:CdSuNhUdpUiAddUdpPortRspEvent
rspCode	src/udpnh/cdsunhudpapiparam.h	/^	CdSuNhUdpRspCode rspCode;	\/\/ Indicates Data Indication is error type or success type$/;"	m	struct:CdSuNhUdpUiDataIndEvent
rspCode	src/udpnh/cdsunhudpapiparam.h	/^	CdSuNhUdpRspCode rspCode;	\/\/ Indicates Data Request is fail or success.$/;"	m	struct:CdSuNhUdpUiDataRspEvent
rspCode	src/udpnh/cdsunhudpapiparam.h	/^	CdSuNhUdpRspCode rspCode;	\/\/ Indicates Del Nh request is fail or success$/;"	m	struct:CdSuNhUdpMiDelNhRspEvent
rspCode	src/udpnh/cdsunhudpapiparam.h	/^	CdSuNhUdpRspCode rspCode;	\/\/ Indicates Init Request is fail or success.$/;"	m	struct:CdSuNhUdpMiInitRspEvent
rspCode	src/udpnh/cdsunhudpapiparam.h	/^	CdSuNhUdpRspCode rspCode;	\/\/ Indicates Rem Udp Port Request Is Fail or Success$/;"	m	struct:CdSuNhUdpUiRemUdpPortRspEvent
rspCode	src/udpnh/cdsunhudpapiparam.h	/^	CdSuNhUdpRspCode rspCode;	\/\/ Indicates Send Request Is fail or success.$/;"	m	struct:CdSuNhUdpUiSendRspEvent
rspCode	src/udpnh/cdsunhudpapiparam.h	/^	CdSuNhUdpRspCode rspCode;	\/\/ Indicates Statistics request is fail or success.$/;"	m	struct:CdSuNhUdpMiStsRspEvent
rspCode	src/udpnh/cdsunhudpapiparam.h	/^	CdSuNhUdpRspCode rspCode;	\/\/ Indicates Status Request is fail or success$/;"	m	struct:CdSuNhUdpMiStatusRspEvent
rspCode	src/udpnh/cdsunhudpapiparam.h	/^	CdSuNhUdpRspCode rspCode;	\/\/ Tells Configuration request is fail or success.$/;"	m	struct:CdSuNhUdpMiCfgRspEvent
rspCode	src/udpnh/cdsunhudpapiparam.h	/^	CdSuNhUdpRspCode rspCode;	\/\/ To indicate whether the Control Req is success\/fail.$/;"	m	struct:CdSuNhUdpMiCtrlRspEvent
rtType	test/udpnh/load-testing/parameter.h	/^CdSuNhUdpApiRetType rtType;$/;"	v
ru	docs/design/mdd/nhtcp/index.html	/^<a name="ru"><\/a>$/;"	a
ru	docs/design/mdd/nhudp/index.html	/^<a name="ru"><\/a>$/;"	a
run	src/misc/netPrintServer.cpp	/^void NetPrintServer::run ()$/;"	f	class:NetPrintServer
run	src/tcpnh/cdsunhtcp.cpp	/^void CdSuNhTcp::run ()$/;"	f	class:CdSuNhTcp
run	src/udpnh/cdsunhudp.cpp	/^void CdSuNhUdp::run ()$/;"	f	class:CdSuNhUdp
runningStHlr	src/tcpnh/cdsunhtcp.cpp	/^void CdSuNhTcp::runningStHlr (CdMessage* msg)$/;"	f	class:CdSuNhTcp
runningStHlr	src/udpnh/cdsunhudp.cpp	/^void CdSuNhUdp::runningStHlr (CdMessage* msg)$/;"	f	class:CdSuNhUdp
rx-msgs	docs/design/mdd/charhash/index.html	/^<a name="rx-msgs"><\/a>$/;"	a
rx-msgs	docs/design/mdd/inthash/index.html	/^<a name="rx-msgs"><\/a>$/;"	a
rx-msgs	docs/design/mdd/list/index.html	/^<a name="rx-msgs"><\/a>$/;"	a
rx-msgs	docs/design/mdd/multibytehash/index.html	/^<a name="rx-msgs"><\/a>$/;"	a
rxSanityFlag	include/cdsusanity.h	/^	bool rxSanityFlag;$/;"	m	class:SanityModule
rxSanityMsgOpcode	include/cdsusanity.h	/^	Uint32	rxSanityMsgOpcode;$/;"	m	struct:SanityParams
rxSanityTI	include/cdsusanity.h	/^	CdSuTimerInfo rxSanityTI;$/;"	m	class:SanityModule
rxSanityTimer	include/cdsusanity.h	/^	CdSuTimerId rxSanityTimer;$/;"	m	class:SanityModule
rxThrdStkSpace	src/msgdistr/cdsunhudpthrd.cpp	/^char rxThrdStkSpace[ 64 * 1024 ];$/;"	v
rxTimeout	include/cdsusanity.h	/^	Uint8	rxTimeout;$/;"	m	struct:SanityParams
rxTimeoutHlr	src/misc/cdsusanity.cpp	/^void SanityModule::rxTimeoutHlr (void)$/;"	f	class:SanityModule
rxTimerMsgOpcode	include/cdsusanity.h	/^	Uint32	rxTimerMsgOpcode; \/\/ rxTimeoutTag$/;"	m	struct:SanityParams
sadpreq	docs/reqs/srs/nhudp/index.html	/^<h3><a name="sadpreq">2.1.8 Site Adaption Requirements <\/a><\/h3>$/;"	a
sanityFailureMsgOpcode	include/cdsusanity.h	/^	Uint32	sanityFailureMsgOpcode;$/;"	m	struct:SanityParams
sanityHlr	src/misc/cdsusanity.cpp	/^void SanityModule::sanityHlr (void)$/;"	f	class:SanityModule
sanityMissThreshold	include/cdsusanity.h	/^	Uint8 sanityMissThreshold;$/;"	m	struct:SanityParams
sanityTag	include/cdsusanity.h	/^	Uint8	sanityTag;$/;"	m	struct:SanityParams
sanityTag	include/cdsusanitymsgs.h	/^	Uint8 sanityTag;$/;"	m	struct:SanityFailureMsg
selfId	src/misc/cdsuthread.cpp	/^const pthread_t CdSuThread::selfId()$/;"	f	class:CdSuThread
selfIpAddr	src/msgdistr/cdsumd.h	/^	Uint32 selfIpAddr;$/;"	m	class:CdSuMsgDistributor
selfIpAddr	src/msgdistr/cdsunhudpglobals.h	/^	Uint32 selfIpAddr;$/;"	m	struct:CdSuMdUdpNhInitParam
selfIpAddr	test/tcpnh/basictest/parameter.h	/^char selfIpAddr[4] = { 192, 168, 16, 72 };$/;"	v
selfIpAddr	test/tcpnh/basictest/parameter.h	/^char selfIpAddr[4] = { 192, 168, 50, 176 };$/;"	v
selfIpAddr	test/tcpnh/featuretest/parameter.h	/^char selfIpAddr[4] = { 192, 168, 16, 72 };$/;"	v
selfIpv4Addr	src/tcpnh/cdsunhtcp.h	/^	CdSuIpv4Addr selfIpv4Addr;$/;"	m	struct:CdSuNhTcpConnInfo
selfIpv4Addr	src/udpnh/cdsunhudp.h	/^		CdSuIpv4Addr selfIpv4Addr;	\/\/ Self IP Information.$/;"	m	struct:CdSuNhUdp::CdSuNhUdpPortInfo
selfMid	include/cdsumdapi.h	/^	CdModuleId selfMid;$/;"	m	struct:CdSuMdInitParam
selfMid	src/msgdistr/cdsumd.h	/^	CdModuleId selfMid;$/;"	m	class:CdSuMsgDistributor
selfModuleId	include/cdsutaskscheduler.h	/^	CdModuleId selfModuleId;$/;"	m	class:CdSuTaskScheduler
selfPortNo	src/tcpnh/cdsunhtcp.h	/^	CdSuIpv4TcpPortNo selfPortNo;	$/;"	m	struct:CdSuNhTcpConnInfo
selfPortNo	src/udpnh/cdsunhudp.h	/^		CdSuIpv4UdpPortNo selfPortNo;	\/\/ Self Port NO.$/;"	m	struct:CdSuNhUdp::CdSuNhUdpPortInfo
semaphore	test/tcpnh/mp3Streamer/mp3StreamServer.cpp	/^sem_t semaphore;$/;"	v
semaphore	test/udpnh/testing-mul-nh-support/tester.cpp	/^sem_t semaphore;$/;"	v
semaphore	test/udpnh/testing-mul-user-support/tester.cpp	/^sem_t semaphore;$/;"	v
sendData	test/tcpnh/basictest/testfunctions.cpp	/^void sendData ()$/;"	f
sendData	test/tcpnh/featuretest/testfunctions.cpp	/^bool sendData (bool flag)$/;"	f
sendData	test/udpnh/basic-test/testfunctions.cpp	/^void sendData ()$/;"	f
sendData	test/udpnh/load-testing/testfunctions.cpp	/^void sendData ()$/;"	f
sendDataAllOpened	test/udpnh/basic-test/testfunctions.cpp	/^void sendDataAllOpened ()$/;"	f
sendDataForNUdpPort	test/udpnh/load-testing/testfunctions.cpp	/^void sendDataForNUdpPort ()$/;"	f
sendDataLoadTesting	test/tcpnh/basictest/testfunctions.cpp	/^void sendDataLoadTesting ()$/;"	f
sendDataLoadTesting	test/tcpnh/featuretest/testfunctions.cpp	/^void sendDataLoadTesting ()$/;"	f
sendDataReqParam	test/udpnh/basic-test/parameter.h	/^CdSuNhUdpUiDataReqParam sendDataReqParam;$/;"	v
sendDataReqParam	test/udpnh/load-testing/parameter.h	/^CdSuNhUdpUiDataReqParam sendDataReqParam;$/;"	v
sendDatagram	src/udpnh/cdsunhudp.cpp	/^CdSuNhUdpRspFailCode CdSuNhUdp::sendDatagram (const CdSuNhUdpPortId& udpPortId,$/;"	f	class:CdSuNhUdp
sendDatagram	src/udpnh/cdsunhudp.cpp	/^CdSuNhUdpRspFailCode CdSuNhUdp::sendDatagram (const void* dataPtr,$/;"	f	class:CdSuNhUdp
sendMsg	src/msgdistr/cdsumd.cpp	/^bool CdSuMsgDistributor::sendMsg (CdMessage* msg, int priority)$/;"	f	class:CdSuMsgDistributor
sendMsg	src/msgdistr/cdsunhudptxptsrvc.cpp	/^bool CdSuUdpTxptServices::sendMsg (char* buffer, Uint16 length, Uint32 ipAddr, $/;"	f	class:CdSuUdpTxptServices
sendPacket	src/tcpnh/cdsunhtcp.cpp	/^bool CdSuNhTcp::sendPacket (const CdSuNhTcpUiDataReqParam dparam)$/;"	f	class:CdSuNhTcp
sendReqMsgHlr	src/udpnh/cdsunhudp.cpp	/^void CdSuNhUdp::sendReqMsgHlr (CdMessage* msg)$/;"	f	class:CdSuNhUdp
sendReqParam	src/udpnh/cdsunhudpmsg.h	/^	CdSuNhUdpUiSendReqParam sendReqParam;	\/\/ Send Req Param.$/;"	m	struct:CdSuNhUdpUiSendReqMsg
sendReqParam	test/udpnh/basic-test/parameter.h	/^CdSuNhUdpUiSendReqParam sendReqParam;$/;"	v
sendRspEvent	src/udpnh/cdsunhudpmsg.h	/^	CdSuNhUdpUiSendRspEvent sendRspEvent;	\/\/ Send Response Event Param.$/;"	m	struct:CdSuNhUdpUiSendRspMsg
sendSockfd	src/msgdistr/cdsunhudptxptsrvc.h	/^	int sendSockfd;$/;"	m	class:CdSuUdpTxptServices
serviceHlrId	test/mbhash-test.cpp	/^	unsigned int serviceHlrId;$/;"	m	struct:TestBpTransId	file:
setApplMesgQ	src/msgdistr/cdsunhudpdb.h	/^	void setApplMesgQ (CdSuTsQueue<CdMessage*>* q) { applQ = q; }$/;"	f	class:CdSuNwhlrDb
setBufLenMoreThanMax	test/udpnh/basic-test/testfunctions.cpp	/^void setBufLenMoreThanMax ()$/;"	f
setBufLenZero	test/udpnh/basic-test/testfunctions.cpp	/^void setBufLenZero ()$/;"	f
setCallbackIntf	test/udpnh/load-testing/testfunctions.cpp	/^void setCallbackIntf ()$/;"	f
setCtr	src/tcpnh/cdsunhtcpstatspkg.h	/^	void setCtr (CdSuNhTcpCtrType ctrType, Uint32 value)$/;"	f	class:CdSuNhTcpStatisticsPkg
setDataLenZero	test/tcpnh/basictest/testfunctions.cpp	/^void setDataLenZero ()$/;"	f
setDataLenZero	test/udpnh/basic-test/testfunctions.cpp	/^void setDataLenZero ()$/;"	f
setDataSelTimerZero	test/tcpnh/basictest/testfunctions.cpp	/^void setDataSelTimerZero ()$/;"	f
setDefaultValueToParameter	test/tcpnh/basictest/testfunctions.cpp	/^void setDefaultValueToParameter ()$/;"	f
setDefaultValueToParameter	test/udpnh/basic-test/testfunctions.cpp	/^void setDefaultValueToParameter ()$/;"	f
setDelay	test/udpnh/load-testing/testfunctions.cpp	/^void setDelay ()$/;"	f
setDestAddrDif	test/udpnh/basic-test/testfunctions.cpp	/^void setDestAddrDif ()$/;"	f
setDestPort	test/udpnh/basic-test/testfunctions.cpp	/^void setDestPort ()$/;"	f
setDestPortDiff	test/udpnh/basic-test/testfunctions.cpp	/^void setDestPortDiff ()$/;"	f
setDestPortSelf	test/udpnh/basic-test/testfunctions.cpp	/^void setDestPortSelf ()$/;"	f
setDestPortZero	test/udpnh/basic-test/testfunctions.cpp	/^void setDestPortZero ()$/;"	f
setE1InExternalLoopbackMode	test/udpnh/basic-test/tdmIf.cpp	/^void TdmInterface::setE1InExternalLoopbackMode (Uint16 e1)$/;"	f	class:TdmInterface
setE1InExternalLoopbackMode	test/udpnh/load-testing/tdmIf.cpp	/^void TdmInterface::setE1InExternalLoopbackMode (Uint16 e1)$/;"	f	class:TdmInterface
setE1InNormalMode	test/udpnh/basic-test/tdmIf.cpp	/^void TdmInterface::setE1InNormalMode (Uint16 e1)$/;"	f	class:TdmInterface
setE1InNormalMode	test/udpnh/load-testing/tdmIf.cpp	/^void TdmInterface::setE1InNormalMode (Uint16 e1)$/;"	f	class:TdmInterface
setInstIdMoreThanMax	test/udpnh/basic-test/testfunctions.cpp	/^void setInstIdMoreThanMax ()$/;"	f
setInvApplActorId	test/tcpnh/basictest/testfunctions.cpp	/^void setInvApplActorId ()$/;"	f
setInvApplActorId	test/udpnh/basic-test/testfunctions.cpp	/^void setInvApplActorId ()$/;"	f
setInvBufLen	test/tcpnh/basictest/testfunctions.cpp	/^void setInvBufLen ()$/;"	f
setInvDataPtr	test/tcpnh/basictest/testfunctions.cpp	/^void setInvDataPtr ()$/;"	f
setInvDataPtr	test/udpnh/basic-test/testfunctions.cpp	/^void setInvDataPtr ()$/;"	f
setInvNhActorId	test/tcpnh/basictest/testfunctions.cpp	/^void setInvNhActorId ()$/;"	f
setInvNhActorId	test/udpnh/basic-test/testfunctions.cpp	/^void setInvNhActorId ()$/;"	f
setInvNhInstId	test/tcpnh/basictest/testfunctions.cpp	/^void setInvNhInstId ()$/;"	f
setInvNhInstId	test/udpnh/basic-test/testfunctions.cpp	/^void setInvNhInstId ()$/;"	f
setInvPortId	test/udpnh/basic-test/testfunctions.cpp	/^void setInvPortId ()$/;"	f
setInvSmActorId	test/tcpnh/basictest/testfunctions.cpp	/^void setInvSmActorId ()$/;"	f
setInvSmActorId	test/udpnh/basic-test/testfunctions.cpp	/^void setInvSmActorId ()$/;"	f
setLevel	src/misc/cdsutrace.cpp	/^void CdSuTrace::setLevel (unsigned level)$/;"	f	class:CdSuTrace
setListener	src/msgdistr/cdsunhudptxptsrvc.cpp	/^int CdSuUdpTxptServices::setListener (Uint32 ipaddr, Uint16 servPort)$/;"	f	class:CdSuUdpTxptServices
setLocal	test/udpnh/load-testing/testfunctions.cpp	/^void setLocal ()$/;"	f
setLocalAddrDif	test/udpnh/basic-test/testfunctions.cpp	/^void setLocalAddrDif ()$/;"	f
setLocalAddrToDest	test/udpnh/basic-test/testfunctions.cpp	/^void setLocalAddrToDest ()$/;"	f
setLocalPortDif	test/udpnh/basic-test/testfunctions.cpp	/^void setLocalPortDif ()$/;"	f
setLocalPortZero	test/udpnh/basic-test/testfunctions.cpp	/^void setLocalPortZero ()$/;"	f
setLstnSelTimerZero	test/tcpnh/basictest/testfunctions.cpp	/^void setLstnSelTimerZero ()$/;"	f
setMsgIntf	test/udpnh/load-testing/testfunctions.cpp	/^void setMsgIntf ()$/;"	f
setNetworkMsgQ	src/msgdistr/cdsunhudpdb.h	/^	void setNetworkMsgQ (CdSuTsQueue<CdMessage*>* q) { nwQ = q; }$/;"	f	class:CdSuNwhlrDb
setNhTcpPtr	src/tcpnh/cdsunhtcpdb.h	/^	inline void setNhTcpPtr (CdSuNhTcp* nhTcp) { nhTcpPtr = nhTcp;}$/;"	f	class:CdSuNhTcpDb
setNhUdpPtr	src/udpnh/cdsunhudpdb.h	/^	inline void setNhUdpPtr (CdSuNhUdp* nhUdp) { nhUdpPtr = nhUdp;}$/;"	f	class:CdSuNhUdpDb
setNoAckReq	test/udpnh/basic-test/testfunctions.cpp	/^void setNoAckReq ()$/;"	f
setNoHlrTimerMoreThanMax	test/udpnh/basic-test/testfunctions.cpp	/^void setNoHlrTimerMoreThanMax ()$/;"	f
setNoHlrTimerZero	test/tcpnh/basictest/testfunctions.cpp	/^void setNoHlrTimerZero ()$/;"	f
setNoHlrTimerZero	test/udpnh/basic-test/testfunctions.cpp	/^void setNoHlrTimerZero ()$/;"	f
setNoOfUdpPortMoreThanMax	test/udpnh/basic-test/testfunctions.cpp	/^void setNoOfUdpPortMoreThanMax ()$/;"	f
setOfLocalPort	test/udpnh/load-testing/parameter.h	/^int setOfLocalPort [ MAXPORT ];$/;"	v
setOfRemotePort	test/udpnh/load-testing/parameter.h	/^int setOfRemotePort [ REMOTEMAXPORT ];$/;"	v
setParameterValue	test/tcpnh/basictest/testfunctions.cpp	/^void setParameterValue ()$/;"	f
setParameterValue	test/udpnh/basic-test/testfunctions.cpp	/^void setParameterValue ()$/;"	f
setPorts	test/udpnh/load-testing/testfunctions.cpp	/^void setPorts ()$/;"	f
setPriority	src/misc/cdsuthread.cpp	/^int CdSuThread::setPriority (int priority)$/;"	f	class:CdSuThread
setRemote	test/udpnh/load-testing/testfunctions.cpp	/^void setRemote ()$/;"	f
setSanityParams	src/misc/cdsusanity.cpp	/^void SanityModule::setSanityParams (const SanityParams& ci)$/;"	f	class:SanityModule
setSelTimerMoreThanMax	test/udpnh/basic-test/testfunctions.cpp	/^void setSelTimerMoreThanMax ()$/;"	f
setSelTimerZero	test/udpnh/basic-test/testfunctions.cpp	/^void setSelTimerZero ()$/;"	f
setSelf	test/udpnh/load-testing/testfunctions.cpp	/^void setSelf ()$/;"	f
setSelfIpAddr	src/msgdistr/cdsunhudpdb.h	/^	void setSelfIpAddr (Uint32 ipa) { ipAddr = ipa; }$/;"	f	class:CdSuNwhlrDb
setTask	src/misc/cdsutaskscheduler.cpp	/^bool CdSuTaskScheduler::setTask (CdSuTaskId taskId, CdSuTask* task)$/;"	f	class:CdSuTaskScheduler
setTaskId	include/cdsutask.h	/^	void setTaskId (CdSuTaskId tid) { taskId = tid;};$/;"	f	class:CdSuTask
setTxptServUdp	src/msgdistr/cdsunhudpdb.h	/^	void setTxptServUdp (CdSuUdpTxptServices* tsrv) { udpTxptServ = tsrv; }$/;"	f	class:CdSuNwhlrDb
setUdpApplMid	src/msgdistr/cdsunhudpdb.h	/^	void setUdpApplMid (CdModuleId apid) { applMid = apid; }$/;"	f	class:CdSuNwhlrDb
setUdpListenPort	src/msgdistr/cdsunhudpdb.h	/^	void setUdpListenPort (Uint16 port) { portNo = port; }$/;"	f	class:CdSuNwhlrDb
setUdpNwHlrMid	src/msgdistr/cdsunhudpdb.h	/^	void setUdpNwHlrMid (CdModuleId nwid) { nwHlrMid = nwid; }$/;"	f	class:CdSuNwhlrDb
setUpEventHlr	test/tcpnh/mp3Streamer/mp3StreamServer.cpp	/^void  Mp3StreamServer::setUpEventHlr (void* arg)$/;"	f	class:Mp3StreamServer
setZeroSelTimer	test/udpnh/load-testing/testfunctions.cpp	/^void setZeroSelTimer ()$/;"	f
sftintf	docs/reqs/srs/nhudp/index.html	/^<h3><a name="sftintf">2.1.4 Software Interfaces<\/a><\/h3>$/;"	a
shutDownTcpHandle	src/tcpnh/cdsunhtcp.cpp	/^bool CdSuNhTcp::shutDownTcpHandle (CdSuNhTcpHandle tcpHandle)$/;"	f	class:CdSuNhTcp
si	docs/reqs/srs/nhtcp/index.html	/^<a name="si"><h3>2.2.1 Module Initialization<\/h3><\/a>$/;"	a
sigalrmHandler	test/tcpnh/basictest/timerdef.cpp	/^void sigalrmHandler (int signum, siginfo_t* info, void* context)$/;"	f
sigalrmHandler	test/tcpnh/featuretest/timerdef.cpp	/^void sigalrmHandler (int signum, siginfo_t* info, void* context)$/;"	f
sigalrmHandler	test/timer/timerBasic.cpp	/^sigalrmHandler (int signo, siginfo_t * info, void *context)$/;"	f
sigalrmHandler	test/timer/timerCascade.cpp	/^sigalrmHandler (int signo, siginfo_t * info, void *context)$/;"	f
sigalrmHandler	test/timer/timerFuncTest.cpp	/^sigalrmHandler (int signo, siginfo_t * info, void *context)$/;"	f
sigalrmHandler	test/timer/timerListTest.cpp	/^sigalrmHandler (int signo, siginfo_t * info, void *context)$/;"	f
sigalrmHandler	test/timer/timerPerfStartTest.cpp	/^sigalrmHandler (int signo, siginfo_t * info, void *context)$/;"	f
sigalrmHandler	test/timer/timerPerfStopTest.cpp	/^sigalrmHandler (int signo, siginfo_t * info, void *context)$/;"	f
sigalrmHandler	test/udpnh/basic-test/timerdef.cpp	/^void sigalrmHandler (int signum, siginfo_t* info, void* context)$/;"	f
sigalrmHandler	test/udpnh/load-testing/timerdef.cpp	/^void sigalrmHandler (int signum, siginfo_t* info, void* context)$/;"	f
size	include/cdsucharhash.h	/^	int size () { return numElements; }$/;"	f	class:CdSuCharHash
size	include/cdsuinthash.h	/^	int size () { return numElements; }$/;"	f	class:CdSuIntHash
size	include/cdsulist.h	/^int CdSuList<ValType>::size () const$/;"	f	class:CdSuList
size	include/cdsumbhash.h	/^	int size () { return numElements; }$/;"	f	class:CdSuMultiByteHash
size	include/cdsuqueue.h	/^	unsigned long size;$/;"	m	class:CdSuQueue
size	include/cdsutsqueue.h	/^	unsigned int size;$/;"	m	class:CdSuTsQueue
slotId	include/cdsuutiltypes-c.h	/^        Uint8   slotId;$/;"	m	struct:CdHardwareUnitId
slotId	include/cdsuutiltypes.h	/^        Uint8   slotId;$/;"	m	struct:CdHardwareUnitId
smActorId	src/tcpnh/cdsunhtcpapiparam.h	/^	CdSuActorId smActorId;			\/\/ Management Interface Actor Id.$/;"	m	struct:CdSuNhTcpMiInitParam
smActorId	src/tcpnh/cdsunhtcpapiparam.h	/^	CdSuActorId smActorId;			\/\/ Report Events to this actor.$/;"	m	struct:CdSuNhTcpMiEvent
smActorId	src/tcpnh/cdsunhtcpdb.h	/^	CdSuActorId smActorId;			$/;"	m	class:CdSuNhTcpDb
smActorId	src/udpnh/cdsunhudpapiparam.h	/^	CdSuActorId smActorId;		\/\/ Actor Id Of Management Module$/;"	m	struct:CdSuNhUdpMiEvent
smActorId	src/udpnh/cdsunhudpapiparam.h	/^	CdSuActorId smActorId;		\/\/ Management Interface Actor Id. Incase of default event handler to post message destination actor id must.$/;"	m	struct:CdSuNhUdpMiInitParam
smActorId	src/udpnh/cdsunhudpdb.h	/^	CdSuActorId smActorId;			$/;"	m	class:CdSuNhUdpDb
smEventHlr	src/tcpnh/cdsunhtcpapiparam.h	/^	CdSuNhTcpEventHlr smEventHlr;$/;"	m	struct:CdSuNhTcpMiInitParam
smEventHlr	src/tcpnh/cdsunhtcpdb.h	/^	CdSuNhTcpEventHlr smEventHlr;$/;"	m	class:CdSuNhTcpDb
smEventHlr	src/udpnh/cdsunhudpapiparam.h	/^	CdSuNhUdpEventHlr smEventHlr;  	\/\/ Call back functions pointer for notifying events to application$/;"	m	struct:CdSuNhUdpMiInitParam
smEventHlr	src/udpnh/cdsunhudpdb.h	/^	CdSuNhUdpEventHlr smEventHlr;$/;"	m	class:CdSuNhUdpDb
smMgmtEventHlr	test/udpnh/basic-test/testfunctions.cpp	/^void smMgmtEventHlr (void* arg)$/;"	f
smMgmtEventHlr	test/udpnh/load-testing/testfunctions.cpp	/^void smMgmtEventHlr (void* arg)$/;"	f
smMgmtEventHlr	test/udpnh/testing-mul-nh-support/tester.cpp	/^void smMgmtEventHlr (void* arg)$/;"	f
smMgmtEventHlr	test/udpnh/testing-mul-user-support/tester.cpp	/^void smMgmtEventHlr (void* arg)$/;"	f
smMgmtEventHlrForMsgIntf	test/udpnh/testing-mul-nh-support/tester.cpp	/^void smMgmtEventHlrForMsgIntf (void* arg)$/;"	f
smMgmtEventHlrForMsgIntf	test/udpnh/testing-mul-nh-usr-support/tester.cpp	/^void smMgmtEventHlrForMsgIntf (void* arg)$/;"	f
smModId	test/tcpnh/basictest/parameter.h	/^CdSuActorId smModId;			\/\/ Sys Mgmt Actor ID.$/;"	v
smModId	test/tcpnh/featuretest/parameter.h	/^CdSuActorId smModId;			\/\/ Sys Mgmt Actor ID.$/;"	v
smModId	test/udpnh/basic-test/parameter.h	/^CdSuActorId smModId;		\/\/ Sys Mgmt Actor ID.$/;"	v
smModId	test/udpnh/load-testing/parameter.h	/^CdSuActorId smModId;		\/\/ Sys Mgmt Actor ID.$/;"	v
smModId	test/udpnh/testing-mul-nh-support/tester.cpp	/^CdSuActorId smModId;		\/\/ Sys Mgmt Actor ID.$/;"	v
smModId	test/udpnh/testing-mul-nh-usr-support/tester.cpp	/^CdSuActorId smModId [2];		\/\/ Sys Mgmt Actor ID.$/;"	v
smModId	test/udpnh/testing-mul-user-support/tester.cpp	/^CdSuActorId smModId;		\/\/ Sys Mgmt Actor ID.$/;"	v
smSemaphore	test/udpnh/testing-mul-nh-usr-support/tester.cpp	/^sem_t smSemaphore [2];$/;"	v
socklen_t	src/msgdistr/cdsunhudpglobals.h	25;"	d
spawn	src/misc/cdsuthread.cpp	/^int CdSuThread::spawn (void* (*startFunc) (void *), void *startArgs, $/;"	f	class:CdSuThread
spec-req	docs/reqs/srs/nhtcp/index.html	/^<h2><a name="spec-req">3.0 Specific Requirements<\/a><\/h2>$/;"	a
spec-req	docs/reqs/srs/nhudp/index.html	/^<h2><a name="spec-req">3.0 Specific Requirements<\/a><\/h2>$/;"	a
src	include/cdsusanity.h	/^	CdModuleId src;$/;"	m	struct:SanityParams
src	include/cdsusanitymsgs.h	/^	CdModuleId	src;			\/\/ Id of the source $/;"	m	struct:CdMessageHeader
src	include/cdsuutiltypes-c.h	/^        CdModuleId      src;                    \/\/ source module id$/;"	m	struct:CdMessageHdr
src	include/cdsuutiltypes.h	/^        CdModuleId      src;                    \/\/ source module id$/;"	m	struct:CdMessageHdr
srcShId	include/cdsusanity.h	/^	Uint32 srcShId;$/;"	m	class:SanityModule
srvcHlrId	include/cdsuutiltypes-c.h	/^        CdServiceHandlerId        srvcHlrId;$/;"	m	struct:CdModuleId
srvcHlrId	include/cdsuutiltypes.h	/^        CdServiceHandlerId        srvcHlrId;$/;"	m	struct:CdModuleId
srvcType	include/cdsuutiltypes-c.h	/^        Uint8   srvcType;       \/\/ Platform or App services$/;"	m	struct:CdServiceHandlerId
srvcType	include/cdsuutiltypes.h	/^        Uint8   srvcType;       \/\/ Platform or App services$/;"	m	struct:CdServiceHandlerId
stCreatedCtrlReqMsgHlr	src/udpnh/cdsunhudp.cpp	/^void CdSuNhUdp::stCreatedCtrlReqMsgHlr (CdMessage* msg)$/;"	f	class:CdSuNhUdp
stRunningCtrlReqMsgHlr	src/udpnh/cdsunhudp.cpp	/^void CdSuNhUdp::stRunningCtrlReqMsgHlr (CdMessage* msg)$/;"	f	class:CdSuNhUdp
start	src/msgdistr/cdsumd.cpp	/^bool CdSuMsgDistributor::start ()$/;"	f	class:CdSuMsgDistributor
start	src/tcpnh/cdsunhtcp.cpp	/^void CdSuNhTcp::start ()$/;"	f	class:CdSuNhTcp
start	src/udpnh/cdsunhudp.cpp	/^void CdSuNhUdp::start ()$/;"	f	class:CdSuNhUdp
start	test/tcpnh/mp3Streamer/mp3StreamServer.cpp	/^void Mp3StreamServer::start ()$/;"	f	class:Mp3StreamServer
startHeapMemoryAddr	include/cdsuunixmemmon.h	/^   	unsigned long startHeapMemoryAddr;$/;"	m	class:CdSuUnixMemoryMonitor
startMiTesting	test/tcpnh/featuretest/testfunctions.cpp	/^void startMiTesting ()$/;"	f
startNhInValid	test/tcpnh/featuretest/testfunctions.cpp	/^void startNhInValid ()$/;"	f
startNhValid	test/tcpnh/featuretest/testfunctions.cpp	/^void startNhValid ()$/;"	f
startResourceMonitoring	test/tcpnh/basictest/testserver.cpp	/^void startResourceMonitoring ()$/;"	f
startResourceMonitoring	test/tcpnh/featuretest/testserver.cpp	/^void startResourceMonitoring ()$/;"	f
startResourceMonitoring	test/udpnh/basic-test/testserver.cpp	/^void startResourceMonitoring ()$/;"	f
startRx	src/misc/cdsusanity.cpp	/^void SanityModule::startRx (void)$/;"	f	class:SanityModule
startTcpNh	test/tcpnh/basictest/testfunctions.cpp	/^void startTcpNh ()$/;"	f
startTcpNh	test/tcpnh/featuretest/testfunctions.cpp	/^bool startTcpNh (bool flag)$/;"	f
startTestTimer	test/timer/timerBasic.cpp	/^void* startTestTimer (void*) $/;"	f
startTestTimer	test/timer/timerCascade.cpp	/^void* startTestTimer (void*) $/;"	f
startTestTimer1	test/timer/timerListTest.cpp	/^void startTestTimer1 (Uint16 timeCnt, Uint32 timeUni, int noOfTimer) $/;"	f
startTestTimer1	test/timer/timerPerfStartTest.cpp	/^void* startTestTimer1 (void*) $/;"	f
startTestTimer1	test/timer/timerPerfStopTest.cpp	/^void* startTestTimer1 (void*) $/;"	f
startTestTimer2	test/timer/timerListTest.cpp	/^void startTestTimer2 (Uint16 timeCnt, Uint32 timeUni) $/;"	f
startTestTimer2	test/timer/timerPerfStartTest.cpp	/^void* startTestTimer2 (void*) $/;"	f
startTestTimer2	test/timer/timerPerfStopTest.cpp	/^void* startTestTimer2 (void*) $/;"	f
startTestTimer3	test/timer/timerPerfStartTest.cpp	/^void* startTestTimer3 (void*)$/;"	f
startTestTimer3	test/timer/timerPerfStopTest.cpp	/^void* startTestTimer3 (void*)$/;"	f
startTickMechanism	test/timer/timerFuncTest.cpp	/^void startTickMechanism (void )$/;"	f
startTickMechanism	test/timer/timerListTest.cpp	/^void startTickMechanism (void )$/;"	f
startTime	test/tcpnh/basictest/parameter.h	/^time_t startTime;$/;"	v
startTimer	src/timer/cdsutimer.cpp	/^CdSuTmrRetVal CdSuTimerHandler::startTimer (CdSuTimerId& timerId, $/;"	f	class:CdSuTimerHandler
startTx	src/misc/cdsusanity.cpp	/^void SanityModule::startTx (void)$/;"	f	class:SanityModule
startUdpNh	test/udpnh/basic-test/testfunctions.cpp	/^void startUdpNh ()$/;"	f
startUiTesting	test/tcpnh/featuretest/testfunctions.cpp	/^void startUiTesting ()$/;"	f
start_timer_diff	test/timer/timerPerfStartTest.cpp	/^	long start_timer_diff;$/;"	m	struct:Result	file:
start_to_diff	test/timer/timerBasic.cpp	/^	long start_to_diff;$/;"	m	struct:Result	file:
start_to_diff	test/timer/timerCascade.cpp	/^	long start_to_diff;$/;"	m	struct:Result	file:
start_to_diff	test/timer/timerPerfStartTest.cpp	/^	long start_to_diff;$/;"	m	struct:Result	file:
startingDestPort	test/udpnh/load-testing/parameter.h	/^int startingDestPort = startingLocalPort + MAXPORT;$/;"	v
startingLocalPort	test/udpnh/load-testing/parameter.h	/^int startingLocalPort = 6000;$/;"	v
statCounter	test/udpnh/basic-test/parameter.h	/^int statCounter [CDSU_NHUDP_MAX_CTR];$/;"	v
statCounterOfNh	test/udpnh/basic-test/parameter.h	/^int statCounterOfNh [CDSU_NHUDP_MAX_CTR];$/;"	v
statRemoteSetUp	test/udpnh/basic-test/testfunctions.cpp	/^void statRemoteSetUp ()$/;"	f
statTest	test/udpnh/basic-test/testfunctions.cpp	/^void statTest ()$/;"	f
state%20charts	docs/design/mdd/msgdistr/msgdistrmdd.html	/^<a name="state%20charts"><\/a>$/;"	a
state%20charts	docs/design/mdd/queue/index.html	/^<a name="state%20charts"><\/a>$/;"	a
state%20charts	docs/design/mdd/taskscheduler/index.html	/^<a name="state%20charts"><\/a>$/;"	a
state%20charts	docs/design/mdd/tsqueue/index.html	/^<a name="state%20charts"><\/a>$/;"	a
statisticsPkg	src/udpnh/cdsunhudp.h	/^	CdSuNhUdpStatisticsPkg* statisticsPkg;	\/\/ Pointer to Statistics$/;"	m	class:CdSuNhUdp
statsPkg	src/tcpnh/cdsunhtcpdb.h	/^	CdSuNhTcpStatisticsPkg* statsPkg;$/;"	m	class:CdSuNhTcpDb
statsReqMsgHlr	src/tcpnh/cdsunhtcp.cpp	/^void CdSuNhTcp::statsReqMsgHlr (CdMessage* msg)$/;"	f	class:CdSuNhTcp
statsReqMsgHlr	src/udpnh/cdsunhudp.cpp	/^void CdSuNhUdp::statsReqMsgHlr (CdMessage* msg)$/;"	f	class:CdSuNhUdp
statsReqNhInValid	test/tcpnh/featuretest/testfunctions.cpp	/^void statsReqNhInValid ()$/;"	f
statsReqNhValid	test/tcpnh/featuretest/testfunctions.cpp	/^void statsReqNhValid ()$/;"	f
statsReqParam	test/tcpnh/basictest/parameter.h	/^CdSuNhTcpMiStsReqParam statsReqParam;$/;"	v
statsReqParam	test/tcpnh/featuretest/parameter.h	/^CdSuNhTcpMiStsReqParam statsReqParam;$/;"	v
statsReqParam	test/udpnh/basic-test/parameter.h	/^CdSuNhUdpMiStsReqParam statsReqParam;$/;"	v
statsReqParam	test/udpnh/load-testing/parameter.h	/^CdSuNhUdpMiStsReqParam statsReqParam;$/;"	v
statsReqTcpNh	test/tcpnh/basictest/testfunctions.cpp	/^void statsReqTcpNh ()$/;"	f
statsReqTcpNh	test/tcpnh/featuretest/testfunctions.cpp	/^bool statsReqTcpNh (bool flag)$/;"	f
statsReqUdpNh	test/udpnh/basic-test/testfunctions.cpp	/^void statsReqUdpNh ()$/;"	f
statusReqMsgHlr	src/tcpnh/cdsunhtcp.cpp	/^void CdSuNhTcp::statusReqMsgHlr (CdMessage* msg)$/;"	f	class:CdSuNhTcp
statusReqMsgHlr	src/udpnh/cdsunhudp.cpp	/^void CdSuNhUdp::statusReqMsgHlr (CdMessage* msg)$/;"	f	class:CdSuNhUdp
statusReqNhInValid	test/tcpnh/featuretest/testfunctions.cpp	/^void statusReqNhInValid ()$/;"	f
statusReqNhValid	test/tcpnh/featuretest/testfunctions.cpp	/^void statusReqNhValid ()$/;"	f
statusReqParam	src/tcpnh/cdsunhtcpmsg.h	/^	CdSuNhTcpMiStatusReqParam statusReqParam;$/;"	m	struct:CdSuNhTcpMiStatusReqMsg
statusReqParam	src/udpnh/cdsunhudpmsg.h	/^	CdSuNhUdpMiStatusReqParam statusReqParam;	\/\/ Status Request Param.$/;"	m	struct:CdSuNhUdpMiStatusReqMsg
statusReqParam	test/tcpnh/basictest/parameter.h	/^CdSuNhTcpMiStatusReqParam statusReqParam;$/;"	v
statusReqParam	test/tcpnh/featuretest/parameter.h	/^CdSuNhTcpMiStatusReqParam statusReqParam;$/;"	v
statusReqParam	test/udpnh/basic-test/parameter.h	/^CdSuNhUdpMiStatusReqParam statusReqParam;$/;"	v
statusReqParam	test/udpnh/load-testing/parameter.h	/^CdSuNhUdpMiStatusReqParam statusReqParam;$/;"	v
statusReqTcpNh	test/tcpnh/basictest/testfunctions.cpp	/^void statusReqTcpNh ()$/;"	f
statusReqTcpNh	test/tcpnh/featuretest/testfunctions.cpp	/^bool statusReqTcpNh (bool flag)$/;"	f
statusReqUdpNh	test/udpnh/basic-test/testfunctions.cpp	/^void statusReqUdpNh ()$/;"	f
statusRspEvent	src/tcpnh/cdsunhtcpmsg.h	/^	CdSuNhTcpMiStatusRspEvent statusRspEvent;$/;"	m	struct:CdSuNhTcpMiStatusRspMsg
statusRspEvent	src/udpnh/cdsunhudpmsg.h	/^	CdSuNhUdpMiStatusRspEvent statusRspEvent;	\/\/ Status Response Event Param$/;"	m	struct:CdSuNhUdpMiStatusRspMsg
std-com	docs/reqs/srs/nhtcp/index.html	/^<h3><a name="std-com">3.5.1 Standards Compliance<\/a><\/h3>$/;"	a
std-com	docs/reqs/srs/nhudp/index.html	/^<h3><a name="std-com">3.5.1 Standards Compliance<\/a><\/h3>$/;"	a
stopFlag	src/tcpnh/cdsunhtcp.h	/^	bool stopFlag;$/;"	m	class:CdSuNhTcp
stopListener	src/msgdistr/cdsunhudptxptsrvc.cpp	/^void CdSuUdpTxptServices::stopListener ()$/;"	f	class:CdSuUdpTxptServices
stopNhInValid	test/tcpnh/featuretest/testfunctions.cpp	/^void stopNhInValid ()$/;"	f
stopNhValid	test/tcpnh/featuretest/testfunctions.cpp	/^void stopNhValid ()$/;"	f
stopRx	src/misc/cdsusanity.cpp	/^void SanityModule::stopRx (void)$/;"	f	class:SanityModule
stopTcpNh	test/tcpnh/basictest/testfunctions.cpp	/^void stopTcpNh ()$/;"	f
stopTcpNh	test/tcpnh/featuretest/testfunctions.cpp	/^bool stopTcpNh (bool flag)$/;"	f
stopTestTimer1	test/timer/timerListTest.cpp	/^void stopTestTimer1(Uint32 timerId)$/;"	f
stopTimer	src/timer/cdsutimer.cpp	/^CdSuTmrRetVal CdSuTimerHandler::stopTimer (const CdSuTimerId timerId)$/;"	f	class:CdSuTimerHandler
stopTx	src/misc/cdsusanity.cpp	/^void SanityModule::stopTx (void)$/;"	f	class:SanityModule
stopUdpNh	test/udpnh/basic-test/testfunctions.cpp	/^void stopUdpNh ()$/;"	f
stop_timer_diff	test/timer/timerPerfStopTest.cpp	/^	long stop_timer_diff;$/;"	m	struct:Result	file:
streamerConnId2ChannelInfoTable	test/tcpnh/mp3Streamer/mp3StreamServer.cpp	/^CdSuIntHash <ChannelInfo*>*  Mp3StreamServer::streamerConnId2ChannelInfoTable$/;"	m	class:Mp3StreamServer	file:
streamerConnId2ChannelInfoTable	test/tcpnh/mp3Streamer/mp3StreamServer.h	/^	static CdSuIntHash <ChannelInfo*>* streamerConnId2ChannelInfoTable;$/;"	m	class:Mp3StreamServer
streamerConnKey	test/tcpnh/mp3Streamer/mp3StreamServer.h	/^	CdSuNhTcpConnKey streamerConnKey;		\/\/ Streamer Connection Key$/;"	m	struct:ChannelInfo
stringAllocator	test/mbhash-test.cpp	/^char* stringAllocator ()$/;"	f
stsReqParam	src/tcpnh/cdsunhtcpmsg.h	/^	CdSuNhTcpMiStsReqParam stsReqParam;$/;"	m	struct:CdSuNhTcpMiStsReqMsg
stsReqParam	src/udpnh/cdsunhudpmsg.h	/^	CdSuNhUdpMiStsReqParam stsReqParam;	\/\/ Statistics Request Param.$/;"	m	struct:CdSuNhUdpMiStsReqMsg
stsRspEvent	src/tcpnh/cdsunhtcpmsg.h	/^	CdSuNhTcpMiStsRspEvent stsRspEvent;$/;"	m	struct:CdSuNhTcpMiStsRspMsg
stsRspEvent	src/udpnh/cdsunhudpmsg.h	/^	CdSuNhUdpMiStsRspEvent stsRspEvent;	\/\/ Statistics Response Event param.$/;"	m	struct:CdSuNhUdpMiStsRspMsg
subMid	include/cdsutask.h	/^        CdSuTaskId subMid;$/;"	m	struct:CdTaskMessage
subOpCode	test/tcpnh/basictest/parameter.h	/^CdSuNhTcpSubOpcode subOpCode;$/;"	v
subOpCode	test/tcpnh/featuretest/parameter.h	/^CdSuNhTcpSubOpcode subOpCode;$/;"	v
subOpCode	test/udpnh/basic-test/parameter.h	/^CdSuNhUdpSubOpcode subOpCode;$/;"	v
subOpCode	test/udpnh/load-testing/parameter.h	/^CdSuNhUdpSubOpcode subOpCode;$/;"	v
subOpcode	src/tcpnh/cdsunhtcpapiparam.h	/^	CdSuNhTcpSubOpcode subOpcode;		\/\/ Initial or General$/;"	m	struct:CdSuNhTcpMiCfgRspEvent
subOpcode	src/tcpnh/cdsunhtcpapiparam.h	/^	CdSuNhTcpSubOpcode subOpcode;		\/\/ To indicate response for which type of control req.$/;"	m	struct:CdSuNhTcpMiCtrlRspEvent
subOpcode	src/tcpnh/cdsunhtcpapiparam.h	/^	CdSuNhTcpSubOpcode subOpcode;		\/\/ To indicate type of control req.	$/;"	m	struct:CdSuNhTcpMiCtrlReqParam
subOpcode	src/tcpnh/cdsunhtcpapiparam.h	/^	CdSuNhTcpSubOpcode subOpcode;		\/\/ To indicate whether general or initial config request.$/;"	m	struct:CdSuNhTcpMiCfgReqParam
subOpcode	src/udpnh/cdsunhudpapiparam.h	/^	CdSuNhUdpSubOpcode subOpcode;	\/\/ Configuration Type (initial or general)$/;"	m	struct:CdSuNhUdpMiCfgRspEvent
subOpcode	src/udpnh/cdsunhudpapiparam.h	/^	CdSuNhUdpSubOpcode subOpcode;	\/\/ To indicate response for which type of control req.$/;"	m	struct:CdSuNhUdpMiCtrlRspEvent
subOpcode	src/udpnh/cdsunhudpapiparam.h	/^	CdSuNhUdpSubOpcode subOpcode;	\/\/ To indicate type of control req.$/;"	m	struct:CdSuNhUdpMiCtrlReqParam
subOpcode	src/udpnh/cdsunhudpapiparam.h	/^	CdSuNhUdpSubOpcode subOpcode;	\/\/ To indicate whether general or initial config request.$/;"	m	struct:CdSuNhUdpMiCfgReqParam
sysMgmtReqStart	test/udpnh/testing-mul-nh-usr-support/tester.cpp	/^void* sysMgmtReqStart (void* arg)$/;"	f
sysMgmtStart	test/tcpnh/basictest/testfunctions.cpp	/^void* sysMgmtStart (void*)$/;"	f
sysMgmtStart	test/tcpnh/featuretest/testfunctions.cpp	/^void* sysMgmtStart (void*)$/;"	f
sysMgmtStart	test/udpnh/basic-test/testfunctions.cpp	/^void* sysMgmtStart (void* arg)$/;"	f
sysMgmtStart	test/udpnh/load-testing/testfunctions.cpp	/^void* sysMgmtStart (void* arg)$/;"	f
sysMgmtStart	test/udpnh/testing-mul-nh-support/tester.cpp	/^void* sysMgmtStart (void* arg)$/;"	f
sysMgmtStart	test/udpnh/testing-mul-nh-usr-support/tester.cpp	/^void* sysMgmtStart (void* arg)$/;"	f
sysMgmtThreadSpace	test/tcpnh/basictest/testfunctions.cpp	/^char sysMgmtThreadSpace [PTHREAD_STACK_MIN * 32];$/;"	v
sysMgmtThreadSpace	test/tcpnh/featuretest/testfunctions.cpp	/^char sysMgmtThreadSpace [PTHREAD_STACK_MIN * 32];$/;"	v
sysMgmtThreadSpace	test/udpnh/basic-test/testfunctions.cpp	/^char sysMgmtThreadSpace [PTHREAD_STACK_MIN * 32];$/;"	v
sysMgmtThreadSpace	test/udpnh/load-testing/testfunctions.cpp	/^char sysMgmtThreadSpace [PTHREAD_STACK_MIN * 32];$/;"	v
sysMgmtThreadSpace	test/udpnh/testing-mul-nh-support/tester.cpp	/^char sysMgmtThreadSpace [PTHREAD_STACK_MIN * 32];$/;"	v
sysMgmtThreadSpace	test/udpnh/testing-mul-user-support/tester.cpp	/^char sysMgmtThreadSpace [PTHREAD_STACK_MIN * 32];$/;"	v
sysintf	docs/reqs/srs/nhudp/index.html	/^<h3><a name="sysintf">2.1.2 System Interfaces <\/a><\/h3>$/;"	a
taskId	include/cdsutask.h	/^	CdSuTaskId taskId;$/;"	m	class:CdSuTask
taskList	include/cdsutaskscheduler.h	/^	CdSuTask** taskList;$/;"	m	class:CdSuTaskScheduler
tcpPortNo	src/tcpnh/cdsunhtcpapiparam.h	/^	CdSuIpv4TcpPortNo tcpPortNo;		\/\/ Port no of the Lstn.$/;"	m	struct:CdSuNhTcpUiAddLstnReqParam
tellChannelWanted	test/tcpnh/mp3Streamer/mp3StreamServer.cpp	/^void Mp3StreamServer::tellChannelWanted (const CdSuNhTcpConnId& connId, const char* data)$/;"	f	class:Mp3StreamServer
tempData	test/udpnh/load-testing/parameter.h	/^char tempData [100];$/;"	v
terminateNhInValid	test/tcpnh/featuretest/testfunctions.cpp	/^void terminateNhInValid ()$/;"	f
terminateNhValid	test/tcpnh/featuretest/testfunctions.cpp	/^void terminateNhValid ()$/;"	f
terminateParam	test/udpnh/basic-test/parameter.h	/^CdSuNhUdpMiTerminateParam terminateParam;$/;"	v
terminateParam	test/udpnh/load-testing/parameter.h	/^CdSuNhUdpMiTerminateParam terminateParam;$/;"	v
terminateTcpNh	test/tcpnh/basictest/testfunctions.cpp	/^void terminateTcpNh ()$/;"	f
terminateTcpNh	test/tcpnh/featuretest/testfunctions.cpp	/^bool terminateTcpNh (bool flag)$/;"	f
terminateUdpNh	test/udpnh/basic-test/testfunctions.cpp	/^void terminateUdpNh ()$/;"	f
termparam	test/tcpnh/basictest/parameter.h	/^CdSuNhTcpMiTerminateParam termparam;$/;"	v
termparam	test/tcpnh/featuretest/parameter.h	/^CdSuNhTcpMiTerminateParam termparam;$/;"	v
testFn	test/queue-test.cpp	/^	PtrFunc testFn;$/;"	m	struct:TestCases	file:
testFn	test/tcpnh/basictest/testmenu.h	/^	CdPtrFunc testFn;$/;"	m	struct:CdTestCases
testFn	test/tcpnh/featuretest/testmenu.h	/^	CdPtrFunc testFn;$/;"	m	struct:CdTestCases
testFn	test/timer/test-funcclient.cpp	/^	PtrFunc testFn;$/;"	m	struct:TestCases	file:
testFn	test/timer/test-listclient.cpp	/^	PtrFunc testFn;$/;"	m	struct:TestCases	file:
testFn	test/timer/timerFuncTest.cpp	/^	PtrFunc testFn;$/;"	m	struct:TestCases	file:
testFn	test/tsqueue-test.cpp	/^	PtrFunc testFn;$/;"	m	struct:TestCases	file:
testFn	test/udpnh/basic-test/testmenu.h	/^	CdPtrFunc testFn;$/;"	m	struct:CdTestCases
testFn	test/udpnh/load-testing/testmenu.h	/^	CdPtrFunc testFn;$/;"	m	struct:CdTestCases
testName	test/queue-test.cpp	/^	char* testName;$/;"	m	struct:TestCases	file:
testName	test/tcpnh/basictest/testmenu.h	/^	char* testName;$/;"	m	struct:CdTestCases
testName	test/tcpnh/featuretest/testmenu.h	/^	char* testName;$/;"	m	struct:CdTestCases
testName	test/timer/test-funcclient.cpp	/^	char* testName;$/;"	m	struct:TestCases	file:
testName	test/timer/test-listclient.cpp	/^	char* testName;$/;"	m	struct:TestCases	file:
testName	test/timer/timerFuncTest.cpp	/^	char* testName;$/;"	m	struct:TestCases	file:
testName	test/tsqueue-test.cpp	/^	char* testName;$/;"	m	struct:TestCases	file:
testName	test/udpnh/basic-test/testmenu.h	/^	char* testName;$/;"	m	struct:CdTestCases
testName	test/udpnh/load-testing/testmenu.h	/^	char* testName;$/;"	m	struct:CdTestCases
tests	docs/design/mdd/charhash/index.html	/^<a name="tests"><\/a>$/;"	a
tests	docs/design/mdd/inthash/index.html	/^<a name="tests"><\/a>$/;"	a
tests	docs/design/mdd/list/index.html	/^<a name="tests"><\/a>$/;"	a
tests	docs/design/mdd/msgdistr/msgdistrmdd.html	/^<a name="tests"><\/a>$/;"	a
tests	docs/design/mdd/multibytehash/index.html	/^<a name="tests"><\/a>$/;"	a
tests	docs/design/mdd/queue/index.html	/^<a name="tests"><\/a>$/;"	a
tests	docs/design/mdd/taskscheduler/index.html	/^<a name="tests"><\/a>$/;"	a
tests	docs/design/mdd/tsqueue/index.html	/^<a name="tests"><\/a>$/;"	a
tests	test/timer/test-funcclient.cpp	/^TestCases tests [] = {$/;"	v
tests	test/timer/timerFuncTest.cpp	/^TestCases tests [] = {$/;"	v
thread-safe	docs/design/mdd/tsqueue/index.html	/^<a name="thread-safe"><\/a><b><i>Simple Queue Vs Thread Safe Queue <\/i><\/b>$/;"	a
thread1StackSpace	test/tsqueue-thread-test.cpp	/^char thread1StackSpace [ PTHREAD_STACK_MIN * 16 ];$/;"	v
thread2StackSpace	test/tsqueue-thread-test.cpp	/^char thread2StackSpace [ PTHREAD_STACK_MIN * 16 ];$/;"	v
threadAttr	include/cdsuthread.h	/^	pthread_attr_t threadAttr;$/;"	m	class:CdSuThread
threadEntry	src/tcpnh/cdsunhtcp.cpp	/^void* CdSuNhTcp::threadEntry (void* objPtr)$/;"	f	class:CdSuNhTcp
threadEntry	src/udpnh/cdsunhudp.cpp	/^void* CdSuNhUdp::threadEntry (void* objPtr)$/;"	f	class:CdSuNhUdp
threadEntry	test/thread-test.cpp	/^void* TestThread :: threadEntry (void*)$/;"	f	class:TestThread
threadFourIndex	test/udpnh/testing-mul-user-support/tester.cpp	/^int threadFourIndex = 3;$/;"	v
threadFunc1	test/tsqueue-thread-test.cpp	/^void* threadFunc1 (void* p)$/;"	f
threadFunc2	test/tsqueue-thread-test.cpp	/^void* threadFunc2 (void* p)$/;"	f
threadId	include/cdsuthread.h	/^	pthread_t threadId;$/;"	m	class:CdSuThread
threadNo	src/misc/cdsuthread.cpp	/^static int threadNo = 1;$/;"	v	file:
threadOneIndex	test/udpnh/testing-mul-nh-usr-support/tester.cpp	/^int threadOneIndex = 0;$/;"	v
threadOneIndex	test/udpnh/testing-mul-user-support/tester.cpp	/^int threadOneIndex = 0;$/;"	v
threadThreeIndex	test/udpnh/testing-mul-user-support/tester.cpp	/^int threadThreeIndex = 2;$/;"	v
threadTwoIndex	test/udpnh/testing-mul-nh-usr-support/tester.cpp	/^int threadTwoIndex = 1;$/;"	v
threadTwoIndex	test/udpnh/testing-mul-user-support/tester.cpp	/^int threadTwoIndex = 1;$/;"	v
tickCount	include/cdsutimer.h	/^	Uint32 tickCount;       \/\/ Stores the quotient of the numTicks \/ size$/;"	m	struct:CdSuTnode
tickDecCount	src/timer/cdsutimingwheel.cpp	/^void CdSuTimingWheel::tickDecCount (void)$/;"	f	class:CdSuTimingWheel
tid1	test/timer/timerBasic.cpp	/^pthread_t tid1, tid2;$/;"	v
tid1	test/timer/timerCascade.cpp	/^pthread_t tid1, tid2;$/;"	v
tid1	test/timer/timerFuncTest.cpp	/^pthread_t tid1;$/;"	v
tid1	test/timer/timerListTest.cpp	/^pthread_t tid1;$/;"	v
tid1	test/timer/timerPerfStartTest.cpp	/^pthread_t tid1, tid2, tid3;$/;"	v
tid1	test/timer/timerPerfStopTest.cpp	/^pthread_t tid1, tid2, tid3;$/;"	v
tid2	test/timer/timerBasic.cpp	/^pthread_t tid1, tid2;$/;"	v
tid2	test/timer/timerCascade.cpp	/^pthread_t tid1, tid2;$/;"	v
tid2	test/timer/timerPerfStartTest.cpp	/^pthread_t tid1, tid2, tid3;$/;"	v
tid2	test/timer/timerPerfStopTest.cpp	/^pthread_t tid1, tid2, tid3;$/;"	v
tid3	test/timer/timerPerfStartTest.cpp	/^pthread_t tid1, tid2, tid3;$/;"	v
tid3	test/timer/timerPerfStopTest.cpp	/^pthread_t tid1, tid2, tid3;$/;"	v
timeCounts	include/cdsutimer.h	/^	Uint16 timeCounts;		\/\/ No. $/;"	m	struct:CdSuTimerInfo
timeGap	test/tcpnh/basictest/parameter.h	/^Uint32 timeGap;$/;"	v
timeUnits	include/cdsutimer.h	/^	CdSuTimeUnits timeUnits;	\/\/ Time Unit resolution(10ms, 100ms etc) $/;"	m	struct:CdSuTimerInfo
timeUnits	test/timer/timerBasic.cpp	/^	long timeUnits;$/;"	m	struct:OutPut	file:
timeUnits	test/timer/timerBasic.cpp	/^	long timeUnits;$/;"	m	struct:Result	file:
timeUnits	test/timer/timerCascade.cpp	/^	long timeUnits;$/;"	m	struct:OutPut	file:
timeUnits	test/timer/timerCascade.cpp	/^	long timeUnits;$/;"	m	struct:Result	file:
timeUnits	test/timer/timerPerfStartTest.cpp	/^	long timeUnits;$/;"	m	struct:OutPut	file:
timeUnits	test/timer/timerPerfStartTest.cpp	/^	long timeUnits;$/;"	m	struct:Result	file:
timeUnits	test/timer/timerPerfStopTest.cpp	/^	long timeUnits;$/;"	m	struct:OutPut	file:
timeUnits	test/timer/timerPerfStopTest.cpp	/^	long timeUnits;$/;"	m	struct:Result	file:
timeWheel	include/cdsutimer.h	/^	CdSuTimingWheel* timeWheel;$/;"	m	class:CdSuTimerHandler
time_count	test/timer/hl_timer.h	/^	Uint16 time_count;$/;"	m	class:HL_Timer
time_count	test/timer/timerBasic.cpp	/^	Uint16 time_count;$/;"	m	class:HL_Timer	file:
time_output	test/timer/timerBasic.cpp	/^struct OutPut time_output[MAX_TIMERS];$/;"	v	typeref:struct:OutPut
time_output	test/timer/timerCascade.cpp	/^struct OutPut time_output[MAX_TIMERS];$/;"	v	typeref:struct:OutPut
time_output	test/timer/timerPerfStartTest.cpp	/^struct OutPut time_output[MAX_TIMERS];$/;"	v	typeref:struct:OutPut
time_output	test/timer/timerPerfStopTest.cpp	/^struct OutPut time_output[MAX_TIMERS];$/;"	v	typeref:struct:OutPut
time_result	test/timer/timerBasic.cpp	/^struct Result time_result[MAX_TIMERS];$/;"	v	typeref:struct:Result
time_result	test/timer/timerCascade.cpp	/^struct Result time_result[MAX_TIMERS];$/;"	v	typeref:struct:Result
time_result	test/timer/timerPerfStartTest.cpp	/^struct Result time_result[MAX_TIMERS];$/;"	v	typeref:struct:Result
time_result	test/timer/timerPerfStopTest.cpp	/^struct Result time_result[MAX_TIMERS];$/;"	v	typeref:struct:Result
timegap	test/udpnh/load-testing/parameter.h	/^long int timegap;$/;"	v
timeoutDestId	include/cdsutimer.h	/^	CdModuleId timeoutDestId; 	$/;"	m	struct:CdSuTnode
timeoutHandler	src/timer/cdsutimingwheel.cpp	/^void CdSuTimingWheel::timeoutHandler (CdSuTnode* node)$/;"	f	class:CdSuTimingWheel
timeoutHlr	src/misc/cdsusanity.cpp	/^void SanityModule::timeoutHlr (CdMessage* msg)$/;"	f	class:SanityModule
timeoutOpcode	include/cdsusanity.h	/^	Uint32  timeoutOpcode;$/;"	m	struct:SanityParams
timeoutReportType	include/cdsutimer.h	/^	CdSuTimeoutReportType timeoutReportType;$/;"	m	struct:CdSuTimerInfo
timeoutReportType	include/cdsutimer.h	/^	CdSuTimeoutReportType timeoutReportType;$/;"	m	struct:CdSuTnode
timerCallBackFn	include/cdsutimer.h	/^	void (*timerCallBackFn) ( CdSuTimeout&);$/;"	m	struct:CdSuTnode
timerCallBackFn	include/cdsutimer.h	/^	void (*timerCallBackFn) (CdSuTimeout&);$/;"	m	struct:CdSuTimerInfo
timerFlag	test/tcpnh/basictest/timerdef.cpp	/^cyg_flag_t timerFlag;$/;"	v
timerFlag	test/tcpnh/featuretest/timerdef.cpp	/^cyg_flag_t timerFlag;$/;"	v
timerFlag	test/timer/sup-test.cpp	/^cyg_flag_t timerFlag;$/;"	v
timerFlag	test/udpnh/basic-test/timerdef.cpp	/^cyg_flag_t timerFlag;$/;"	v
timerFlag	test/udpnh/load-testing/timerdef.cpp	/^cyg_flag_t timerFlag;$/;"	v
timerHandler	include/cdsusanity.h	/^	CdSuTimerHandler* timerHandler;$/;"	m	class:SanityModule
timerHandler	src/timer/cdsutimingwheel.h	/^	CdSuTimerHandler* timerHandler;$/;"	m	class:CdSuTimingWheel
timerHandler	test/timer/timerBasic.cpp	/^CdSuTimerHandler *timerHandler;$/;"	v
timerHandler	test/timer/timerCascade.cpp	/^CdSuTimerHandler *timerHandler;$/;"	v
timerHandler	test/timer/timerFuncTest.cpp	/^CdSuTimerHandler* timerHandler = new CdSuTimerHandler;$/;"	v
timerHandler	test/timer/timerListTest.cpp	/^CdSuTimerHandler* timerHandler = new CdSuTimerHandler;$/;"	v
timerHandler	test/timer/timerPerfStartTest.cpp	/^CdSuTimerHandler *timerHandler;$/;"	v
timerHandler	test/timer/timerPerfStopTest.cpp	/^CdSuTimerHandler *timerHandler;$/;"	v
timerHash	include/cdsutimer.h	/^	CdSuIntHash<CdSuTnode*>* timerHash;$/;"	m	class:CdSuTimerHandler
timerId	include/cdsusanitymsgs.h	/^	Uint32 timerId;					\/\/ which timer.$/;"	m	struct:SanityTimeoutMsg
timerId	include/cdsutimer.h	/^	CdSuTimerId timerId;$/;"	m	struct:CdSuTimeout
timerId	include/cdsutimer.h	/^	CdSuTimerId timerId;$/;"	m	struct:CdSuTimerMsg
timerId	include/cdsutimer.h	/^        CdSuTimerId timerId;  $/;"	m	struct:CdSuTnode
timerInit	test/timer/timerBasic.cpp	/^void timerInit(void)$/;"	f
timerInit	test/timer/timerCascade.cpp	/^void timerInit(void)$/;"	f
timerMutex	include/cdsutimer.h	/^	pthread_mutex_t  timerMutex;$/;"	m	class:CdSuTimerHandler
timerThreadEntry	test/timer/sup-test.cpp	/^void* timerThreadEntry (void*)$/;"	f
timerTickHandler	src/timer/cdsutimer.cpp	/^void CdSuTimerHandler::timerTickHandler (void)$/;"	f	class:CdSuTimerHandler
timerTimeOut	test/timer/timerListTest.cpp	/^void timerTimeOut(int noOfTimer)$/;"	f
timerType	include/cdsutimer.h	/^	CdSuTimerType timerType;$/;"	m	struct:CdSuTimerInfo
timerType	include/cdsutimer.h	/^	CdSuTimerType timerType;$/;"	m	struct:CdSuTnode
timerValue	test/timer/sup-test.cpp	/^struct itimerspec timerValue;		\/\/ Timeout value on eCos$/;"	v	typeref:struct:itimerspec
tmmsg	test/timer/timerBasic.cpp	/^CdSuTimerMsg tmmsg;$/;"	v
tmmsg	test/timer/timerCascade.cpp	/^CdSuTimerMsg* tmmsg;$/;"	v
tmmsg	test/timer/timerListTest.cpp	/^CdSuTimerMsg* tmmsg;$/;"	v
tmmsg	test/timer/timerPerfStartTest.cpp	/^CdSuTimerMsg tmmsg;$/;"	v
tmmsg	test/timer/timerPerfStopTest.cpp	/^CdSuTimerMsg tmmsg;$/;"	v
tmparray	src/tcpnh/cdsunhtcpdb.h	/^		int tmparray [1000];$/;"	m	class:CdSuNhTcpDb::NhTcpConnIdAllocator
tmparray	src/tcpnh/cdsunhtcpdb.h	/^		int tmparray [1000];$/;"	m	class:CdSuNhTcpDb::NhTcpLstnIdAllocator
tpkt	src/tcpnh/cdsunhtcp.h	/^	bool tpkt;				\/\/ TPKT support info.$/;"	m	struct:CdSuNhTcpConnInfo
tpkt	src/tcpnh/cdsunhtcp.h	/^	bool tpkt;				\/\/ TPKT support info.$/;"	m	struct:CdSuNhTcpLstnInfo
tpkt	src/tcpnh/cdsunhtcpapiparam.h	/^	bool tpkt;				\/\/ Per Connection we will have TPKT info.$/;"	m	struct:CdSuNhTcpUiConReqParam
tpkt	src/tcpnh/cdsunhtcpapiparam.h	/^	bool tpkt;				\/\/ Per Lstn we will have TPKT.$/;"	m	struct:CdSuNhTcpUiAddLstnReqParam
tpkt	src/tcpnh/cdsunhtcpapiparam.h	/^	bool tpkt;$/;"	m	struct:CdSuNhTcpUiConIndEvent
tpkt	src/tcpnh/cdsunhtcpapiparam.h	/^	bool tpkt;$/;"	m	struct:CdSuNhTcpUiDataIndEvent
tpkt	test/tcpnh/basictest/parameter.h	/^bool tpkt = true;			\/\/ TPKT flag.$/;"	v
tpkt	test/tcpnh/featuretest/parameter.h	/^bool tpkt = true;			\/\/ TPKT flag.$/;"	v
traceLevel	include/cdsutrace.h	/^	static unsigned traceLevel;$/;"	m	class:CdSuTrace
traceLevel	src/misc/cdsutrace.cpp	/^unsigned CdSuTrace::traceLevel = 1;$/;"	m	class:CdSuTrace	file:
tsMsgQueue	include/cdsumdapi.h	/^		CdSuTsQueue<CdMessage*>* tsMsgQueue;$/;"	m	union:CdSuMdIpcpInfo::__anon27
tx-msgs	docs/design/mdd/charhash/index.html	/^<a name="tx-msgs"><\/a>$/;"	a
tx-msgs	docs/design/mdd/inthash/index.html	/^<a name="tx-msgs"><\/a>$/;"	a
tx-msgs	docs/design/mdd/list/index.html	/^<a name="tx-msgs"><\/a>$/;"	a
tx-msgs	docs/design/mdd/multibytehash/index.html	/^<a name="tx-msgs"><\/a>$/;"	a
txDataReqMsgHlr	src/tcpnh/cdsunhtcp.cpp	/^void CdSuNhTcp::txDataReqMsgHlr (CdMessage* msg)$/;"	f	class:CdSuNhTcp
txSanityFlag	include/cdsusanity.h	/^	bool txSanityFlag;$/;"	m	class:SanityModule
txSanityMsg	include/cdsusanity.h	/^	SanityMsg* txSanityMsg;$/;"	m	class:SanityModule
txSanityMsgOpcode	include/cdsusanity.h	/^	Uint32	txSanityMsgOpcode;$/;"	m	struct:SanityParams
txSanityTI	include/cdsusanity.h	/^	CdSuTimerInfo txSanityTI;$/;"	m	class:SanityModule
txSanityTimer	include/cdsusanity.h	/^	CdSuTimerId txSanityTimer;$/;"	m	class:SanityModule
txTimeout	include/cdsusanity.h	/^	Uint8	txTimeout;$/;"	m	struct:SanityParams
txTimeoutHlr	src/misc/cdsusanity.cpp	/^void SanityModule::txTimeoutHlr (void)$/;"	f	class:SanityModule
txTimerMsgOpcode	include/cdsusanity.h	/^	Uint32	txTimerMsgOpcode; \/\/ txTimeoutTag$/;"	m	struct:SanityParams
txnSeqNo	test/mbhash-test.cpp	/^	unsigned int txnSeqNo;$/;"	m	struct:TestBpTransId	file:
u	include/cdsumdapi.h	/^	} u;$/;"	m	struct:CdSuMdIpcpInfo	typeref:union:CdSuMdIpcpInfo::__anon27
udpLpn	include/cdsumdapi.h	/^	Uint16 udpLpn;$/;"	m	struct:CdSuMdInitParam
udpLpn	src/msgdistr/cdsumd.h	/^	Uint16 udpLpn;$/;"	m	class:CdSuMsgDistributor
udpNhQueue	src/msgdistr/cdsumd.h	/^	CdSuTsQueue <CdMessage*>* udpNhQueue;$/;"	m	class:CdSuMsgDistributor
udpNhQueue	src/msgdistr/cdsunhudpglobals.h	/^	CdSuTsQueue <CdMessage*>* udpNhQueue;$/;"	m	struct:CdSuMdUdpNhInitParam
udpNhThreadId	src/msgdistr/cdsumd.h	/^	pthread_t udpNhThreadId;$/;"	m	class:CdSuMsgDistributor
udpPortCleanUp	src/udpnh/cdsunhudp.cpp	/^bool CdSuNhUdp::udpPortCleanUp (const CdSuNhUdpPortInfo* info)$/;"	f	class:CdSuNhUdp
udpPortId	src/udpnh/cdsunhudp.h	/^		CdSuNhUdpPortId udpPortId;	\/\/ Unique Id Of Udp Port.$/;"	m	struct:CdSuNhUdp::CdSuNhUdpPortInfo
udpPortId	src/udpnh/cdsunhudpmsg.h	/^	CdSuNhUdpPortId udpPortId;				\/\/ Udp Port ID$/;"	m	struct:CdSuNhUdpUiAddUdpPortReqMsg
udpPortId2UdpPortInfoTable	src/udpnh/cdsunhudp.h	/^	CdSuIntHash <CdSuNhUdpPortInfo*>* udpPortId2UdpPortInfoTable;$/;"	m	class:CdSuNhUdp
udpPortIdAllocMutex	src/udpnh/cdsunhudpdb.h	/^		pthread_mutex_t udpPortIdAllocMutex;$/;"	m	class:CdSuNhUdpDb::NhUdpPortIdAllocator
udpPortIdAllocTable	src/udpnh/cdsunhudpdb.h	/^		CdSuIntHash<CdSuNhUdpPortId>* udpPortIdAllocTable;$/;"	m	class:CdSuNhUdpDb::NhUdpPortIdAllocator
udpPortIdAllocator	src/udpnh/cdsunhudpdb.h	/^	NhUdpPortIdAllocator* udpPortIdAllocator;$/;"	m	class:CdSuNhUdpDb
udpPortIdCounter	src/udpnh/cdsunhudpdb.h	/^		Uint32 udpPortIdCounter;$/;"	m	class:CdSuNhUdpDb::NhUdpPortIdAllocator
udpPortKey	src/udpnh/cdsunhudpapiparam.h	/^	CdSuNhUdpPortKey udpPortKey;		\/\/ Each Udp port idenitified by key(Nh Instance Id + Udp Port Id).$/;"	m	struct:CdSuNhUdpUiRemUdpPortReqParam
udpPortKey	src/udpnh/cdsunhudpapiparam.h	/^	CdSuNhUdpPortKey udpPortKey;	\/\/ Each Udp port identified by key (Nh Instance Id + Udp Port Id). $/;"	m	struct:CdSuNhUdpUiDataReqParam
udpTxptServ	src/msgdistr/cdsunhudpdb.h	/^	CdSuUdpTxptServices* udpTxptServ; $/;"	m	class:CdSuNwhlrDb
unitId	include/cdsuutiltypes-c.h	/^        Uint8   unitId;$/;"	m	struct:CdHardwareUnitId
unitId	include/cdsuutiltypes.h	/^        Uint8   unitId;$/;"	m	struct:CdHardwareUnitId
unregisterMid	src/msgdistr/cdsumd.cpp	/^bool CdSuMsgDistributor::unregisterMid (const CdModuleId& mid)$/;"	f	class:CdSuMsgDistributor
updateStatsPkgCounter	src/udpnh/cdsunhudp.cpp	/^void CdSuNhUdp::updateStatsPkgCounter (CdSuNhUdpOpcode opcode,	CdSuNhUdpRspFailCode failCode)$/;"	f	class:CdSuNhUdp
updateStatsPkgCounter	src/udpnh/cdsunhudp.cpp	/^void CdSuNhUdp::updateStatsPkgCounter (CdSuNhUdpOpcode opcode, CdSuIpv4UdpPortNo localPortNo,$/;"	f	class:CdSuNhUdp
useAllOpenedUdpPort	test/udpnh/basic-test/parameter.h	/^bool useAllOpenedUdpPort = false;$/;"	v
useDelay	test/udpnh/load-testing/parameter.h	/^bool useDelay = false;$/;"	v
useDiffDestAddr	test/udpnh/basic-test/parameter.h	/^bool useDiffDestAddr = false;$/;"	v
useDiffLocalAddr	test/udpnh/basic-test/parameter.h	/^bool useDiffLocalAddr = false;$/;"	v
useInvApplModId	test/udpnh/basic-test/parameter.h	/^bool useInvApplModId = false;	\/\/ flag.$/;"	v
useInvDataPtr	test/udpnh/basic-test/parameter.h	/^bool useInvDataPtr = false;$/;"	v
useInvNhInstId	test/udpnh/basic-test/parameter.h	/^bool useInvNhInstId = false; 	\/\/ flag.$/;"	v
useInvNhModId	test/udpnh/basic-test/parameter.h	/^bool useInvNhModId = false;	\/\/ Flag.$/;"	v
useInvPortId	test/udpnh/basic-test/parameter.h	/^bool useInvPortId = false; 	\/\/ flag.$/;"	v
useInvSmModId	test/udpnh/basic-test/parameter.h	/^bool useInvSmModId = false;		\/\/ flag.$/;"	v
useLocalAddrAsDestAddr	test/udpnh/basic-test/parameter.h	/^bool useLocalAddrAsDestAddr = false;$/;"	v
useMaxNoOfCon	test/tcpnh/basictest/parameter.h	/^bool useMaxNoOfCon = true;		\/\/ Max Con flag.$/;"	v
useMaxNoOfLstn	test/tcpnh/basictest/parameter.h	/^bool useMaxNoOfLstn = true;		\/\/ Max Lstn flag.$/;"	v
useMoreThanMaxBufferLen	test/udpnh/basic-test/parameter.h	/^bool useMoreThanMaxBufferLen = false;$/;"	v
useMoreThanMaxNhInstId	test/udpnh/basic-test/parameter.h	/^bool useMoreThanMaxNhInstId = false;$/;"	v
useMoreThanMaxNoHlrTimer	test/udpnh/basic-test/parameter.h	/^bool useMoreThanMaxNoHlrTimer = false;$/;"	v
useMoreThanMaxSelTimer	test/udpnh/basic-test/parameter.h	/^bool useMoreThanMaxSelTimer = false;$/;"	v
useMoreThanMaxUdpPort	test/udpnh/basic-test/parameter.h	/^bool useMoreThanMaxUdpPort = false;$/;"	v
useValidApplModId	test/tcpnh/basictest/parameter.h	/^bool useValidApplModId = true;		\/\/ Appl ModId flag.$/;"	v
useValidBufferLen	test/tcpnh/basictest/parameter.h	/^bool useValidBufferLen 	= true;		 \/\/ Buffer Len flag.$/;"	v
useValidDataPtr	test/tcpnh/basictest/parameter.h	/^bool useValidDataPtr = true;		 \/\/ Data Ptr flag.$/;"	v
useValidLstnQSz	test/tcpnh/basictest/parameter.h	/^bool useValidLstnQSz = true;		 \/\/ Lstn Q sz flag. $/;"	v
useValidNhInstId	test/tcpnh/basictest/parameter.h	/^bool useValidNhInstId = true;		\/\/ Nh Inst flag.$/;"	v
useValidNhModId	test/tcpnh/basictest/parameter.h	/^bool useValidNhModId = true;		\/\/ Nh ModId flag.$/;"	v
useValidSmModId	test/tcpnh/basictest/parameter.h	/^bool useValidSmModId = true;		\/\/ SM ModId flag.$/;"	v
useZeroBufferLen	test/udpnh/basic-test/parameter.h	/^bool useZeroBufferLen 	= false; \/\/ flag.$/;"	v
useZeroDataLen	test/tcpnh/basictest/parameter.h	/^bool useZeroDataLen  = false;		 \/\/ Data Len flag.$/;"	v
useZeroDataLen	test/udpnh/basic-test/parameter.h	/^bool useZeroDataLen  = false;$/;"	v
useZeroDataSelTimer	test/tcpnh/basictest/parameter.h	/^bool useZeroDataSelTimer = false;	\/\/ Data Sel Timer flag.$/;"	v
useZeroLstnSelTimer	test/tcpnh/basictest/parameter.h	/^bool useZeroLstnSelTimer = false;	\/\/ Lstn Sel Timer flag.$/;"	v
useZeroNoHlrTimer	test/tcpnh/basictest/parameter.h	/^bool useZeroNoHlrTimer = false;		\/\/ No Handle Timer flag.$/;"	v
useZeroNoHlrTimer	test/udpnh/basic-test/parameter.h	/^bool useZeroNoHlrTimer = false;$/;"	v
useZeroSelTimer	test/udpnh/basic-test/parameter.h	/^bool useZeroSelTimer 	= false;$/;"	v
useZeroSelTimer	test/udpnh/load-testing/parameter.h	/^bool useZeroSelTimer = false;$/;"	v
user-char	docs/reqs/srs/nhtcp/index.html	/^<a name="user-char"><h3>2.3 User Characteristics<\/h3><\/a>$/;"	a
user-char	docs/reqs/srs/nhudp/index.html	/^<a name="user-char"><h3>2.3 User Characteristics<\/h3><\/a>$/;"	a
userInfo	include/cdsutimer.h	/^	Uint32 userInfo [CDSU_TMR_MAX_USERINFO_NUM];$/;"	m	struct:CdSuTimeout
userInfo	include/cdsutimer.h	/^	Uint32 userInfo [CDSU_TMR_MAX_USERINFO_NUM];$/;"	m	struct:CdSuTimerInfo
userInfo	include/cdsutimer.h	/^	Uint32 userInfo [CDSU_TMR_MAX_USERINFO_NUM];$/;"	m	struct:CdSuTimerMsg
userInfo	include/cdsutimer.h	/^        Uint32 userInfo [CDSU_TMR_MAX_USERINFO_NUM]; \/\/ Some user specific info .$/;"	m	struct:CdSuTnode
userInput	test/timer/timerFuncTest.cpp	/^void userInput(void )$/;"	f
usrintf	docs/reqs/srs/nhudp/index.html	/^<h3><a name="usrintf">2.1.2 User Interfaces<\/a><\/h3>$/;"	a
ustaIndEvent	src/tcpnh/cdsunhtcpmsg.h	/^	CdSuNhTcpMiUStaIndEvent ustaIndEvent;$/;"	m	struct:CdSuNhTcpMiUStaIndMsg
utilSmEventHlr	test/tcpnh/basictest/testfunctions.cpp	/^void utilSmEventHlr (void* arg)$/;"	f
utilSmEventHlr	test/tcpnh/featuretest/testfunctions.cpp	/^void utilSmEventHlr (void* arg)$/;"	f
validateAddLstnReqParam	src/tcpnh/cdsunhtcpapiparamchk.cpp	/^CdSuNhTcpApiRetType validateAddLstnReqParam (const CdSuNhTcpUiAddLstnReqParam& p)$/;"	f
validateAddUdpPortReqParam	src/udpnh/cdsunhudpapiparamchk.cpp	/^CdSuNhUdpApiRetType validateAddUdpPortReqParam (const CdSuNhUdpUiAddUdpPortReqParam& p)$/;"	f
validateCfgReqParam	src/tcpnh/cdsunhtcpapiparamchk.cpp	/^CdSuNhTcpApiRetType validateCfgReqParam (const CdSuNhTcpMiCfgReqParam& p)$/;"	f
validateCfgReqParam	src/udpnh/cdsunhudpapiparamchk.cpp	/^CdSuNhUdpApiRetType validateCfgReqParam (const CdSuNhUdpMiCfgReqParam& p)$/;"	f
validateCloseConReqParam	src/tcpnh/cdsunhtcpapiparamchk.cpp	/^CdSuNhTcpApiRetType validateCloseConReqParam (const CdSuNhTcpUiCloseConReqParam& p)$/;"	f
validateConReqParam	src/tcpnh/cdsunhtcpapiparamchk.cpp	/^CdSuNhTcpApiRetType validateConReqParam (const CdSuNhTcpUiConReqParam& p)$/;"	f
validateCtrlReqParam	src/tcpnh/cdsunhtcpapiparamchk.cpp	/^CdSuNhTcpApiRetType validateCtrlReqParam (const CdSuNhTcpMiCtrlReqParam& p)$/;"	f
validateCtrlReqParam	src/udpnh/cdsunhudpapiparamchk.cpp	/^CdSuNhUdpApiRetType validateCtrlReqParam (const CdSuNhUdpMiCtrlReqParam& p)$/;"	f
validateDataReqParam	src/tcpnh/cdsunhtcpapiparamchk.cpp	/^CdSuNhTcpApiRetType validateDataReqParam (const CdSuNhTcpUiDataReqParam& p)$/;"	f
validateDataReqParam	src/udpnh/cdsunhudpapiparamchk.cpp	/^CdSuNhUdpApiRetType validateDataReqParam (const CdSuNhUdpUiDataReqParam& p)$/;"	f
validateDelNhParam	src/tcpnh/cdsunhtcpapiparamchk.cpp	/^CdSuNhTcpApiRetType validateDelNhParam (const CdSuNhTcpMiDelNhParam& p)$/;"	f
validateDelNhParam	src/udpnh/cdsunhudpapiparamchk.cpp	/^CdSuNhUdpApiRetType validateDelNhParam (const CdSuNhUdpMiDelNhParam& p)$/;"	f
validateInitNhParam	src/tcpnh/cdsunhtcpapiparamchk.cpp	/^CdSuNhTcpApiRetType validateInitNhParam (const CdSuNhTcpMiInitParam& initparam)$/;"	f
validateInitNhParam	src/udpnh/cdsunhudpapiparamchk.cpp	/^CdSuNhUdpApiRetType validateInitNhParam (const CdSuNhUdpMiInitParam& p)$/;"	f
validateInstId	src/udpnh/cdsunhudpapiparamchk.cpp	/^CdSuNhUdpApiRetType validateInstId (CdSuNhUdpInstId instId)$/;"	f
validateRemLstnReqParam	src/tcpnh/cdsunhtcpapiparamchk.cpp	/^CdSuNhTcpApiRetType validateRemLstnReqParam (const CdSuNhTcpUiRemLstnReqParam& p)$/;"	f
validateRemUdpPortReqParam	src/udpnh/cdsunhudpapiparamchk.cpp	/^CdSuNhUdpApiRetType validateRemUdpPortReqParam (const CdSuNhUdpUiRemUdpPortReqParam& p)$/;"	f
validateSendReqParam	src/udpnh/cdsunhudpapiparamchk.cpp	/^CdSuNhUdpApiRetType validateSendReqParam (const CdSuNhUdpUiSendReqParam& p)$/;"	f
validateStatusReqParam	src/tcpnh/cdsunhtcpapiparamchk.cpp	/^CdSuNhTcpApiRetType validateStatusReqParam (const CdSuNhTcpMiStatusReqParam& p)$/;"	f
validateStatusReqParam	src/udpnh/cdsunhudpapiparamchk.cpp	/^CdSuNhUdpApiRetType validateStatusReqParam (const CdSuNhUdpMiStatusReqParam& p)$/;"	f
validateStsReqParam	src/tcpnh/cdsunhtcpapiparamchk.cpp	/^CdSuNhTcpApiRetType validateStsReqParam (const CdSuNhTcpMiStsReqParam& p)$/;"	f
validateStsReqParam	src/udpnh/cdsunhudpapiparamchk.cpp	/^CdSuNhUdpApiRetType validateStsReqParam (const CdSuNhUdpMiStsReqParam& p)$/;"	f
validateTerminateNhParam	src/tcpnh/cdsunhtcpapiparamchk.cpp	/^CdSuNhTcpApiRetType validateTerminateNhParam (const CdSuNhTcpMiTerminateParam& p)$/;"	f
validateTerminateNhParam	src/udpnh/cdsunhudpapiparamchk.cpp	/^CdSuNhUdpApiRetType validateTerminateNhParam (const CdSuNhUdpMiTerminateParam& p)$/;"	f
value	include/cdsucharhash.h	/^		ValType value;$/;"	m	struct:CdSuCharHash::HashElement
value	include/cdsuinthash.h	/^		ValType value;$/;"	m	struct:CdSuIntHash::HashElement
value	include/cdsumbhash.h	/^		ValType value;$/;"	m	struct:CdSuMultiByteHash::HashElement
value	include/cdsuqueue.h	/^		KeyType value;$/;"	m	struct:CdSuQueue::Node
value	include/cdsutsqueue.h	/^		KeyType value;$/;"	m	struct:CdSuTsQueue::Node
waitForAppl	test/udpnh/testing-mul-nh-usr-support/tester.cpp	/^sem_t waitForAppl [2];$/;"	v
waitForInput	test/udpnh/testing-mul-nh-usr-support/tester.cpp	/^sem_t waitForInput;$/;"	v
waitForSm	test/udpnh/testing-mul-nh-usr-support/tester.cpp	/^sem_t waitForSm [2];$/;"	v
writeNoOfBytes	src/tcpnh/cdsunhtcp.cpp	/^int CdSuNhTcp::writeNoOfBytes (int fd, const char* vptr, int noOfBytes)$/;"	f	class:CdSuNhTcp
writeNoOfBytes	src/udpnh/cdsunhudp.cpp	/^int CdSuNhUdp::writeNoOfBytes (CdSuNhUdpPortInfo* udpPortInfo, const char* vptr, int noOfBytes)$/;"	f	class:CdSuNhUdp
writeNoOfBytes	src/udpnh/cdsunhudp.cpp	/^int CdSuNhUdp::writeNoOfBytes (CdSuNhUdpPortInfo* udpPortInfo, const char* vptr,$/;"	f	class:CdSuNhUdp
writeStreamData	test/tcpnh/mp3Streamer/mp3StreamServer.cpp	/^void Mp3StreamServer::writeStreamData (ChannelInfo* channelInfo, char* data, int dataLen)$/;"	f	class:Mp3StreamServer
~CdSuCharHash	include/cdsucharhash.h	/^CdSuCharHash<ValType>::~CdSuCharHash ()$/;"	f	class:CdSuCharHash
~CdSuIntHash	include/cdsuinthash.h	/^CdSuIntHash<ValType>::~CdSuIntHash ()$/;"	f	class:CdSuIntHash
~CdSuKeyAllocator	src/timer/cdsukeyallocator.cpp	/^CdSuKeyAllocator::~CdSuKeyAllocator()$/;"	f	class:CdSuKeyAllocator
~CdSuList	include/cdsulist.h	/^CdSuList<ValType>::~CdSuList ()$/;"	f	class:CdSuList
~CdSuMdUdpNhDelMsg	src/msgdistr/cdsunhudpglobals.h	/^	~CdSuMdUdpNhDelMsg ()$/;"	f	struct:CdSuMdUdpNhDelMsg
~CdSuMdUdpNhTxBufMsg	src/msgdistr/cdsunhudpglobals.h	/^	~CdSuMdUdpNhTxBufMsg ()$/;"	f	struct:CdSuMdUdpNhTxBufMsg
~CdSuMsgDistributor	src/msgdistr/cdsumd.cpp	/^CdSuMsgDistributor::~CdSuMsgDistributor ()$/;"	f	class:CdSuMsgDistributor
~CdSuMultiByteHash	include/cdsumbhash.h	/^CdSuMultiByteHash<ValType>::~CdSuMultiByteHash ()$/;"	f	class:CdSuMultiByteHash
~CdSuNhTcp	src/tcpnh/cdsunhtcp.cpp	/^CdSuNhTcp::~CdSuNhTcp ()$/;"	f	class:CdSuNhTcp
~CdSuNhTcpDb	src/tcpnh/cdsunhtcpdb.cpp	/^CdSuNhTcpDb::~CdSuNhTcpDb ()$/;"	f	class:CdSuNhTcpDb
~CdSuNhTcpInstMgr	src/tcpnh/cdsunhtcpinstmgr.cpp	/^CdSuNhTcpInstMgr::~CdSuNhTcpInstMgr ()$/;"	f	class:CdSuNhTcpInstMgr
~CdSuNhTcpStatisticsPkg	src/tcpnh/cdsunhtcpstatspkg.h	/^	~CdSuNhTcpStatisticsPkg ()$/;"	f	class:CdSuNhTcpStatisticsPkg
~CdSuNhTcpUiDataIndEvent	src/tcpnh/cdsunhtcpapiparam.cpp	/^CdSuNhTcpUiDataIndEvent::~CdSuNhTcpUiDataIndEvent ()$/;"	f	class:CdSuNhTcpUiDataIndEvent
~CdSuNhTcpUiDataReqParam	src/tcpnh/cdsunhtcpapiparam.cpp	/^CdSuNhTcpUiDataReqParam::~CdSuNhTcpUiDataReqParam ()$/;"	f	class:CdSuNhTcpUiDataReqParam
~CdSuNhUdp	src/udpnh/cdsunhudp.cpp	/^CdSuNhUdp::~CdSuNhUdp ()$/;"	f	class:CdSuNhUdp
~CdSuNhUdpDb	src/udpnh/cdsunhudpdb.cpp	/^CdSuNhUdpDb::~CdSuNhUdpDb ()$/;"	f	class:CdSuNhUdpDb
~CdSuNhUdpInstMgr	src/udpnh/cdsunhudpinstmgr.cpp	/^CdSuNhUdpInstMgr::~CdSuNhUdpInstMgr ()$/;"	f	class:CdSuNhUdpInstMgr
~CdSuNhUdpMiEvent	src/udpnh/cdsunhudpapiparam.h	/^	virtual ~CdSuNhUdpMiEvent () {}	\/\/ Virtual Distructor$/;"	f	struct:CdSuNhUdpMiEvent
~CdSuNhUdpStatisticsPkg	src/udpnh/cdsunhudpstatspkg.h	/^	~CdSuNhUdpStatisticsPkg ()$/;"	f	class:CdSuNhUdpStatisticsPkg
~CdSuNhUdpUiEvent	src/udpnh/cdsunhudpapiparam.h	/^	virtual ~CdSuNhUdpUiEvent () {}$/;"	f	struct:CdSuNhUdpUiEvent
~CdSuNwhlrDb	src/msgdistr/cdsunhudpdb.h	/^	~CdSuNwhlrDb () { }$/;"	f	class:CdSuNwhlrDb
~CdSuQueue	include/cdsuqueue.h	/^CdSuQueue<KeyType>::~CdSuQueue ()$/;"	f	class:CdSuQueue
~CdSuTask	include/cdsutask.h	/^	virtual ~CdSuTask (){};$/;"	f	class:CdSuTask
~CdSuTaskScheduler	src/misc/cdsutaskscheduler.cpp	/^CdSuTaskScheduler::~CdSuTaskScheduler ()$/;"	f	class:CdSuTaskScheduler
~CdSuThread	src/misc/cdsuthread.cpp	/^CdSuThread::~CdSuThread ()$/;"	f	class:CdSuThread
~CdSuTimerHandler	src/timer/cdsutimer.cpp	/^CdSuTimerHandler::~CdSuTimerHandler ()$/;"	f	class:CdSuTimerHandler
~CdSuTimingWheel	src/timer/cdsutimingwheel.cpp	/^CdSuTimingWheel ::~CdSuTimingWheel ()$/;"	f	class:CdSuTimingWheel
~CdSuTnode	src/timer/cdsutimer.cpp	/^CdSuTnode::~CdSuTnode ()$/;"	f	class:CdSuTnode
~CdSuTsQueue	include/cdsutsqueue.h	/^CdSuTsQueue<KeyType>::~CdSuTsQueue ()$/;"	f	class:CdSuTsQueue
~CdSuUdpTxptServices	src/msgdistr/cdsunhudptxptsrvc.cpp	/^CdSuUdpTxptServices::~CdSuUdpTxptServices ()$/;"	f	class:CdSuUdpTxptServices
~ChannelInfo	test/tcpnh/mp3Streamer/mp3StreamServer.h	/^	~ChannelInfo ()$/;"	f	struct:ChannelInfo
~NhTcpConnIdAllocator	src/tcpnh/cdsunhtcpdb.cpp	/^CdSuNhTcpDb::NhTcpConnIdAllocator::~NhTcpConnIdAllocator ()$/;"	f	class:CdSuNhTcpDb::NhTcpConnIdAllocator
~NhTcpLstnIdAllocator	src/tcpnh/cdsunhtcpdb.cpp	/^CdSuNhTcpDb::NhTcpLstnIdAllocator::~NhTcpLstnIdAllocator ()$/;"	f	class:CdSuNhTcpDb::NhTcpLstnIdAllocator
~NhUdpPortIdAllocator	src/udpnh/cdsunhudpdb.cpp	/^CdSuNhUdpDb::NhUdpPortIdAllocator::~NhUdpPortIdAllocator ()$/;"	f	class:CdSuNhUdpDb::NhUdpPortIdAllocator
~SanityFailureMsg	include/cdsusanitymsgs.h	/^	~SanityFailureMsg (){};$/;"	f	struct:SanityFailureMsg
~SanityModule	src/misc/cdsusanity.cpp	/^SanityModule::~SanityModule ()$/;"	f	class:SanityModule
~SanityMsg	include/cdsusanitymsgs.h	/^	~SanityMsg (){}; $/;"	f	struct:SanityMsg
~TdmInterface	test/udpnh/basic-test/tdmIf.cpp	/^TdmInterface::~TdmInterface ()$/;"	f	class:TdmInterface
~TdmInterface	test/udpnh/load-testing/tdmIf.cpp	/^TdmInterface::~TdmInterface ()$/;"	f	class:TdmInterface
~TesterTask1	test/taskscheduler-test.cpp	/^	~TesterTask1 () {}$/;"	f	class:TesterTask1
~TesterTask2	test/taskscheduler-test.cpp	/^	~TesterTask2 () {}$/;"	f	class:TesterTask2
